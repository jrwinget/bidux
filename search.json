[{"path":[]},{"path":"https://jrwinget.github.io/bidux/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://jrwinget.github.io/bidux/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://jrwinget.github.io/bidux/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://jrwinget.github.io/bidux/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official email address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://jrwinget.github.io/bidux/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://jrwinget.github.io/bidux/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://jrwinget.github.io/bidux/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://jrwinget.github.io/bidux/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://jrwinget.github.io/bidux/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://jrwinget.github.io/bidux/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://jrwinget.github.io/bidux/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct/. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq/. Translations available https://www.contributor-covenant.org/translations/.","code":""},{"path":"https://jrwinget.github.io/bidux/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to {bidux}","title":"Contributing to {bidux}","text":"First , thank interest making bidux better! Whether ’re filing bug report, suggesting new feature, improving documentation, submitting code, contributions make project great.","code":""},{"path":"https://jrwinget.github.io/bidux/CONTRIBUTING.html","id":"id_-code-of-conduct","dir":"","previous_headings":"","what":"📜 Code of Conduct","title":"Contributing to {bidux}","text":"contributors must abide Contributor Code Conduct. Please read participating.","code":""},{"path":"https://jrwinget.github.io/bidux/CONTRIBUTING.html","id":"id_-reporting-bugs","dir":"","previous_headings":"","what":"🐛 Reporting Bugs","title":"Contributing to {bidux}","text":"Search existing issues see ’s already reported. , open new issue using Bug Report template: https://github.com/jrwinget/bidux/issues/new?template=01_bug-report.yml Fill sections, including reproducible examples session info.","code":""},{"path":"https://jrwinget.github.io/bidux/CONTRIBUTING.html","id":"id_-suggesting-enhancements","dir":"","previous_headings":"","what":"✨ Suggesting Enhancements","title":"Contributing to {bidux}","text":"Browse open feature requests avoid duplicates. Open new issue Feature Request template: https://github.com/jrwinget/bidux/issues/new?template=02_feature-request.yml Describe use case, proposed API, relevant links mockups.","code":""},{"path":"https://jrwinget.github.io/bidux/CONTRIBUTING.html","id":"id_-documentation-improvements","dir":"","previous_headings":"","what":"📖 Documentation Improvements","title":"Contributing to {bidux}","text":"rely clear examples comprehensive docs. propose improvements: Create issue Documentation template: https://github.com/jrwinget/bidux/issues/new?template=03_documentation-improvement.yml Submit PR updated .Rmd, vignettes, help files. Use \\donttest{} long-running examples, ensure code examples runs without external dependencies.","code":""},{"path":"https://jrwinget.github.io/bidux/CONTRIBUTING.html","id":"id_-other-issue-templates","dir":"","previous_headings":"","what":"🗂 Other Issue Templates","title":"Contributing to {bidux}","text":"♿ Accessibility Issue - Report fix accessibility barriers 🧠 Theory Suggestions - Propose new concepts theories ✨ Shiny Integration Requests - Improve integration Shiny packages","code":""},{"path":"https://jrwinget.github.io/bidux/CONTRIBUTING.html","id":"id_-pull-request-workflow","dir":"","previous_headings":"","what":"👩‍💻 Pull Request Workflow","title":"Contributing to {bidux}","text":"Fork jrwinget/bidux repository. Create branch named feature/-feature bugfix/issue-123. Install dependencies: Load package run tests: Write clear, descriptive commit messages. Document new functions roxygen2 run: Check package CRAN: Push branch open PR main. CI checks run automatically. Address failures requesting review.","code":"pak::pak(desc::desc_get_deps()$package) devtools::load_all() devtools::test() devtools::document() devtools::check()"},{"path":"https://jrwinget.github.io/bidux/CONTRIBUTING.html","id":"id_-code-style-guidelines","dir":"","previous_headings":"","what":"🖋 Code Style Guidelines","title":"Contributing to {bidux}","text":"follow tidyverse style conventions: Use snake_case function variable names. Avoid magrittr pipe (|>); prefer native pipe (|>). Adhere tidyverse style guide. Run styler::style_pkg() lintr::lint_package() catch formatting issues.","code":""},{"path":"https://jrwinget.github.io/bidux/CONTRIBUTING.html","id":"id_-testing","dir":"","previous_headings":"","what":"🧪 Testing","title":"Contributing to {bidux}","text":"Place tests tests/testthat/ using testthat framework. Aim coverage across edge cases expected failure modes. Use skip_on_cran() skip_on_ci() tests require external resources.","code":""},{"path":"https://jrwinget.github.io/bidux/CONTRIBUTING.html","id":"id_-documentation--vignettes","dir":"","previous_headings":"","what":"📚 Documentation & Vignettes","title":"Contributing to {bidux}","text":"Vignettes live vignettes/. Use R Markdown examples illustrate real-world workflows. Link new features existing vignettes create dedicated one.","code":""},{"path":"https://jrwinget.github.io/bidux/CONTRIBUTING.html","id":"id_-bid-framework-considerations","dir":"","previous_headings":"","what":"🧠 BID Framework Considerations","title":"Contributing to {bidux}","text":"contributing features examples, keep following mind: Scientific Accuracy: Represent concepts theories correctly. Accessibility: Ensure components outputs meet WCAG standards. User Experience: Strive clear, intuitive interfaces. Evidence-Based: Cite reputable sources introducing new theories.","code":""},{"path":"https://jrwinget.github.io/bidux/CONTRIBUTING.html","id":"id_-community--discussions","dir":"","previous_headings":"","what":"💬 Community & Discussions","title":"Contributing to {bidux}","text":"general questions, brainstorming, design discussions, use GitHub Discussions.","code":""},{"path":"https://jrwinget.github.io/bidux/CONTRIBUTING.html","id":"id_️-license","dir":"","previous_headings":"","what":"⚖️ License","title":"Contributing to {bidux}","text":"contributing, agree contributions licensed project’s MIT License. Thank helping bidux become stronger user-friendly!","code":""},{"path":"https://jrwinget.github.io/bidux/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 bidux authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://jrwinget.github.io/bidux/articles/advanced-workflows.html","id":"introduction-beyond-basic-bid-implementation","dir":"Articles","previous_headings":"","what":"Introduction: Beyond Basic BID Implementation","title":"Advanced BID Workflows: Power User Techniques","text":"vignette covers advanced techniques experienced R users want integrate BID framework deeply data science dashboard development workflows. Target audience: Data scientists, senior Shiny developers, UX-aware analysts want : - Automate BID workflow integration - Scale UX analysis across multiple dashboards - Create custom behavioral science extensions - Build data-driven UX improvement processes","code":""},{"path":[]},{"path":"https://jrwinget.github.io/bidux/articles/advanced-workflows.html","id":"the-challenge","dir":"Articles","previous_headings":"Advanced Pattern 1: Automated BID Analysis Pipeline","what":"The Challenge","title":"Advanced BID Workflows: Power User Techniques","text":"maintain 20+ dashboards across different business units. Manually applying BID framework time-intensive.","code":""},{"path":"https://jrwinget.github.io/bidux/articles/advanced-workflows.html","id":"solution-systematic-bid-pipeline","dir":"Articles","previous_headings":"Advanced Pattern 1: Automated BID Analysis Pipeline","what":"Solution: Systematic BID Pipeline","title":"Advanced BID Workflows: Power User Techniques","text":"","code":"# Create a comprehensive BID analysis function analyze_dashboard_ux <- function(dashboard_config, telemetry_path = NULL) {   # Stage 1: Interpret (from configuration)   interpret_stage <- bid_interpret(     central_question = dashboard_config$central_question,     data_story = dashboard_config$data_story,     user_personas = dashboard_config$personas   )    # If telemetry exists, integrate it into the workflow   if (!is.null(telemetry_path) && file.exists(telemetry_path)) {     # Ingest telemetry and identify issues     telemetry_issues <- bid_telemetry(telemetry_path)      # Convert top issues to Notice stages     notice_stages <- bid_notices(       issues = telemetry_issues |>         filter(severity %in% c(\"critical\", \"high\")) |>         slice_head(n = 3),       previous_stage = interpret_stage     )      # Use the most critical issue as primary focus     primary_notice <- notice_stages[[1]]   } else {     # Manual problem definition if no telemetry     primary_notice <- bid_notice(       previous_stage = interpret_stage,       problem = dashboard_config$known_problems,       evidence = dashboard_config$evidence     )   }    # Stage 3: Anticipate with domain-specific biases   anticipate_stage <- bid_anticipate(     previous_stage = primary_notice,     bias_mitigations = dashboard_config$bias_mitigations %||%       get_domain_biases(dashboard_config$domain)   )    # Stage 4: Structure with telemetry flags if available   structure_flags <- if (     !is.null(telemetry_path) && file.exists(telemetry_path)   ) {     bid_flags(telemetry_issues)   } else {     NULL   }    structure_stage <- bid_structure(     previous_stage = anticipate_stage,     telemetry_flags = structure_flags   )    # Stage 5: Validate with domain-specific next steps   validate_stage <- bid_validate(     previous_stage = structure_stage,     summary_panel = generate_summary_panel(dashboard_config),     collaboration = get_collaboration_features(dashboard_config$team_size),     next_steps = generate_next_steps(dashboard_config, structure_stage)   )    return(validate_stage) }  # Domain-specific bias patterns get_domain_biases <- function(domain) {   bias_patterns <- list(     \"finance\" = list(       loss_aversion = \"Show both gains and losses clearly with proper context\",       anchoring = \"Provide multiple reference points (budget, previous period, industry average)\",       confirmation_bias = \"Include contrarian indicators and risk metrics\"     ),     \"marketing\" = list(       attribution_bias = \"Show multi-touch attribution to avoid overvaluing last-click\",       survivorship_bias = \"Include data on discontinued campaigns and failed experiments\",       framing = \"Toggle between cost-per-acquisition and customer-lifetime-value views\"     ),     \"operations\" = list(       availability_bias = \"Surface less-visible but important operational metrics\",       recency_bias = \"Balance recent performance with longer-term trends\",       cognitive_load = \"Use progressive disclosure for complex operational dashboards\"     )   )    return(     bias_patterns[[domain]] %||%       list(         anchoring = \"Provide appropriate reference points\",         framing = \"Consider multiple perspectives on the same data\",         confirmation_bias = \"Include challenging or contrarian data points\"       )   ) }  # Batch analyze multiple dashboards analyze_dashboard_portfolio <- function(dashboard_configs) {   results <- map(dashboard_configs, analyze_dashboard_ux)   names(results) <- map_chr(dashboard_configs, \"name\")    # Generate portfolio-level insights   portfolio_summary <- summarize_portfolio_ux(results)    return(     list(       individual_analyses = results,       portfolio_summary = portfolio_summary,       improvement_priorities = rank_improvement_opportunities(results)     )   ) }  # Example usage dashboard_portfolio <- list(   list(     name = \"Executive Dashboard\",     domain = \"finance\",     central_question = \"How is the business performing this quarter?\",     data_story = list(       hook = \"Quarterly performance varies significantly across business units\",       context = \"Board meeting preparation requires clear performance narrative\",       tension = \"Current reports are too detailed for executive review\",       resolution = \"Provide executive summary with drill-down capability\"     ),     personas = list(       list(         name = \"CEO\",         technical_level = \"Basic\",         time_constraints = \"5 minutes\"       ),       list(         name = \"CFO\",         technical_level = \"Intermediate\",         focus = \"Financial metrics\"       )     ),     known_problems = \"Information overload in current quarterly reviews\",     evidence = \"Board meetings consistently run over time due to data interpretation\"   ),   # Additional dashboard configurations... )  # Run portfolio analysis portfolio_results <- analyze_dashboard_portfolio(dashboard_portfolio)"},{"path":[]},{"path":"https://jrwinget.github.io/bidux/articles/advanced-workflows.html","id":"extending-the-concept-dictionary","dir":"Articles","previous_headings":"Advanced Pattern 2: Custom Behavioral Science Extensions","what":"Extending the Concept Dictionary","title":"Advanced BID Workflows: Power User Techniques","text":"","code":"# Add domain-specific behavioral concepts add_custom_concepts <- function() {   # Define custom concepts for your domain   custom_finance_concepts <- tibble(     concept = c(       \"Risk Perception Bias\",       \"Mental Accounting\",       \"Temporal Discounting\"     ),     category = \"Financial Psychology\",     description = c(       \"Tendency to perceive identical risks differently based on presentation context\",       \"Treating money differently based on its source or intended use\",       \"Overvaluing immediate rewards relative to future benefits\"     ),     implementation_tips = c(       \"Present risks in multiple formats (percentages, frequencies, visual scales)\",       \"Show total portfolio impact rather than individual position P&L\",       \"Include time-based context and compound effect visualizations\"     ),     shiny_components = c(       \"plotly for interactive risk visualization, bslib progress bars for probability\",       \"DT tables with conditional formatting, reactable grouping features\",       \"echarts4r timeline components, animated value transitions\"     )   )    # You could extend the package concept dictionary (advanced users only)   # This would require package development workflow    return(custom_finance_concepts) }  # Create domain-specific BID analysis functions analyze_financial_dashboard <- function(config, custom_concepts = NULL) {   # Load custom concepts if provided   if (!is.null(custom_concepts)) {     # Use custom concepts in analysis     relevant_concepts <- filter(       custom_concepts,       grepl(config$domain_keywords, concept, ignore.case = TRUE)     )   }    # Apply standard BID workflow with custom extensions   result <- analyze_dashboard_ux(config)    # Add domain-specific analysis   result$domain_insights <- generate_domain_insights(result, custom_concepts)   result$specialized_suggestions <- get_domain_suggestions(     result,     config$domain   )    return(result) }  # Generate domain-specific insights generate_domain_insights <- function(bid_result, custom_concepts = NULL) {   insights <- list()    # Analyze layout choice against domain best practices   layout <- bid_result$layout[1]    if (layout == \"dual_process\") {     insights$layout_analysis <- \"Dual-process layout chosen. Good for financial dashboards requiring both summary and detailed analysis.\"     )   }    # Check for domain-specific bias considerations   if (!is.null(custom_concepts)) {     # Suggest additional bias mitigations based on custom concepts     insights$additional_biases <- suggest_domain_biases(       bid_result,       custom_concepts     )   }    return(insights) }"},{"path":[]},{"path":"https://jrwinget.github.io/bidux/articles/advanced-workflows.html","id":"systematic-ux-experimentation","dir":"Articles","previous_headings":"Advanced Pattern 3: A/B Testing for UX Improvements","what":"Systematic UX Experimentation","title":"Advanced BID Workflows: Power User Techniques","text":"","code":"# Framework for testing UX improvements design_ux_experiment <- function(current_design, proposed_design, hypothesis) {   experiment_design <- list(     hypothesis = hypothesis,     primary_metrics = c(       \"time_to_first_interaction\",       \"task_completion_rate\",       \"user_satisfaction_score\",       \"session_duration\"     ),     secondary_metrics = c(       \"error_rate\",       \"feature_adoption_rate\",       \"return_visit_rate\"     ),     variants = list(       control = current_design,       treatment = proposed_design     ),     sample_size_calculation = calculate_ux_sample_size(       baseline_completion_rate = 0.65,       minimum_detectable_effect = 0.10,       power = 0.80,       alpha = 0.05     )   )    return(experiment_design) }  # Calculate required sample size for UX experiments calculate_ux_sample_size <- function(     baseline_completion_rate,     minimum_detectable_effect,     power = 0.80,     alpha = 0.05) {   # Using power analysis for proportion tests   p1 <- baseline_completion_rate   p2 <- p1 + minimum_detectable_effect    # Simplified calculation (use power.prop.test() for precise calculation)   pooled_p <- (p1 + p2) / 2   pooled_variance <- pooled_p * (1 - pooled_p)    z_alpha <- qnorm(1 - alpha / 2)   z_beta <- qnorm(power)    n_per_group <- 2 * pooled_variance * (z_alpha + z_beta)^2 / (p2 - p1)^2    return(     list(       n_per_group = ceiling(n_per_group),       total_n = ceiling(2 * n_per_group),       assumptions = list(         baseline_rate = p1,         target_rate = p2,         effect_size = minimum_detectable_effect       )     )   ) }  # Analyze UX experiment results analyze_ux_experiment <- function(experiment_data, experiment_design) {   # Primary analysis: task completion rate   completion_test <- prop.test(     x = c(       sum(experiment_data$control$completed),       sum(experiment_data$treatment$completed)     ),     n = c(nrow(experiment_data$control), nrow(experiment_data$treatment))   )    # Secondary analysis: time to completion   time_test <- t.test(     experiment_data$treatment$completion_time,     experiment_data$control$completion_time,     alternative = \"less\" # Hypothesis: treatment is faster   )    # Effect size calculation   effect_size <- calculate_cohens_d(     experiment_data$treatment$completion_time,     experiment_data$control$completion_time   )    results <- list(     completion_rate_test = completion_test,     completion_time_test = time_test,     effect_size = effect_size,     practical_significance = assess_practical_significance(       completion_test,       time_test,       effect_size     ),     recommendation = generate_experiment_recommendation(       completion_test,       time_test,       effect_size     )   )    return(results) }  # Example: Test progressive disclosure vs. full information display progressive_disclosure_experiment <- function() {   # Current design: all information visible   current_design <- list(     name = \"Full Information Display\",     description = \"All metrics and filters visible simultaneously\",     implementation = \"Traditional dashboard with all components loaded\"   )    # Proposed design: progressive disclosure   proposed_design <- list(     name = \"Progressive Disclosure\",     description = \"Key metrics first, additional details on request\",     implementation = \"Primary KPIs with 'Show Details' interactions\"   )    # Hypothesis based on BID framework   hypothesis <- \"Progressive disclosure will reduce cognitive load and improve task completion rate for dashboard users (based on Cognitive Load Theory and Choice Overload research)\"    experiment <- design_ux_experiment(     current_design = current_design,     proposed_design = proposed_design,     hypothesis = hypothesis   )    return(experiment) }"},{"path":[]},{"path":"https://jrwinget.github.io/bidux/articles/advanced-workflows.html","id":"dashboard-health-monitoring-system","dir":"Articles","previous_headings":"Advanced Pattern 4: Continuous UX Monitoring","what":"Dashboard Health Monitoring System","title":"Advanced BID Workflows: Power User Techniques","text":"","code":"# Create UX health monitoring system create_ux_monitoring_system <- function(     dashboard_configs,     telemetry_connections) {   monitoring_system <- list(     dashboards = dashboard_configs,     telemetry_sources = telemetry_connections,     health_checks = define_ux_health_checks(),     alert_thresholds = define_alert_thresholds(),     reporting_schedule = \"weekly\"   )    return(monitoring_system) }  # Define UX health check metrics define_ux_health_checks <- function() {   list(     cognitive_load_indicators = c(       \"session_abandonment_rate\",       \"time_to_first_interaction\",       \"filter_usage_distribution\",       \"error_rate_by_component\"     ),     user_success_metrics = c(       \"task_completion_rate\",       \"time_to_insight\",       \"feature_adoption_rate\",       \"user_satisfaction_nps\"     ),     behavioral_red_flags = c(       \"rapid_repeated_clicks\",       \"excessive_back_navigation\",       \"long_pause_before_action\",       \"high_exit_rate_on_entry\"     )   ) }  # Automated UX health reporting generate_ux_health_report <- function(monitoring_system, time_period = \"week\") {   health_data <- map(     monitoring_system$telemetry_sources,     function(source) {       issues <- bid_telemetry(source$path, time_filter = time_period)        health_scores <- calculate_ux_health_scores(issues)       trend_analysis <- calculate_ux_trends(issues, source$historical_data)        list(         dashboard = source$dashboard_name,         current_health = health_scores,         trends = trend_analysis,         recommendations = generate_health_recommendations(           health_scores,           trend_analysis         )       )     }   )    # Portfolio-level insights   portfolio_health <- aggregate_portfolio_health(health_data)    # Generate executive summary   executive_summary <- create_ux_executive_summary(portfolio_health)    report <- list(     period = time_period,     executive_summary = executive_summary,     dashboard_details = health_data,     portfolio_trends = portfolio_health,     action_items = prioritize_ux_improvements(health_data)   )    return(report) }  # Calculate UX health scores calculate_ux_health_scores <- function(telemetry_issues) {   # Weight issues by severity and impact   severity_weights <- c(\"critical\" = 5, \"high\" = 3, \"medium\" = 2, \"low\" = 1)    issue_impact <- telemetry_issues |>     mutate(       weighted_impact = case_when(         severity == \"critical\" ~ 5,         severity == \"high\" ~ 3,         severity == \"medium\" ~ 2,         TRUE ~ 1       )     ) |>     summarize(       total_issues = n(),       weighted_impact_score = sum(weighted_impact),       critical_issues = sum(severity == \"critical\"),       .groups = \"drop\"     )    # Calculate health score (0-100, higher is better)   health_score <- pmax(0, 100 - (issue_impact$weighted_impact_score * 2))    health_rating <- case_when(     health_score >= 85 ~ \"Excellent\",     health_score >= 70 ~ \"Good\",     health_score >= 55 ~ \"Fair\",     TRUE ~ \"Needs Attention\"   )    return(     list(       score = health_score,       rating = health_rating,       issue_breakdown = issue_impact,       primary_concerns = get_primary_concerns(telemetry_issues)     )   ) }  # Example implementation monitor_dashboard_portfolio <- function() {   # Set up monitoring for multiple dashboards   portfolio_monitoring <- create_ux_monitoring_system(     dashboard_configs = list(       list(name = \"Executive Dashboard\", business_unit = \"Corporate\"),       list(name = \"Sales Analytics\", business_unit = \"Sales\"),       list(name = \"Marketing Performance\", business_unit = \"Marketing\")     ),     telemetry_connections = list(       list(         dashboard_name = \"Executive Dashboard\",         path = \"exec_dashboard_telemetry.sqlite\",         historical_data = \"exec_dashboard_history.rds\"       ),       list(         dashboard_name = \"Sales Analytics\",         path = \"sales_dashboard_telemetry.sqlite\",         historical_data = \"sales_dashboard_history.rds\"       )     )   )    # Generate weekly health report   weekly_report <- generate_ux_health_report(portfolio_monitoring)    return(weekly_report) }"},{"path":[]},{"path":"https://jrwinget.github.io/bidux/articles/advanced-workflows.html","id":"creating-domain-specific-bid-stages","dir":"Articles","previous_headings":"Advanced Pattern 5: Custom BID Stage Extensions","what":"Creating Domain-Specific BID Stages","title":"Advanced BID Workflows: Power User Techniques","text":"","code":"# Create custom BID stage for specific domains create_custom_bid_stage <- function(     stage_name,     stage_function,     validation_rules) {   # Example: Security-focused BID stage for sensitive data dashboards   bid_security_stage <- function(       previous_stage,       security_requirements = NULL,       compliance_framework = \"GDPR\",       data_sensitivity_level = \"medium\") {     validate_previous_stage(previous_stage, stage_name)      # Security-specific analysis     security_analysis <- assess_dashboard_security_ux(       previous_stage = previous_stage,       requirements = security_requirements,       framework = compliance_framework,       sensitivity = data_sensitivity_level     )      # Generate security-aware UX recommendations     security_recommendations <- generate_security_ux_recommendations(       security_analysis,       previous_stage     )      # Create result tibble     result_data <- tibble(       stage = stage_name,       security_level = data_sensitivity_level,       compliance_framework = compliance_framework,       security_recommendations = paste(         security_recommendations,         collapse = \"; \"       ),       previous_layout = safe_column_access(previous_stage, \"layout\"),       timestamp = Sys.time()     )      # Return as bid_stage object     return(bid_stage(stage_name, result_data))   }    return(bid_security_stage) }  # Example: Accessibility-focused BID stage bid_accessibility <- function(     previous_stage,     wcag_level = \"AA\",     assistive_tech_support = TRUE,     target_disabilities = c(\"visual\", \"motor\", \"cognitive\")) {   validate_previous_stage(previous_stage, \"Accessibility\")    # Comprehensive accessibility analysis   accessibility_audit <- perform_accessibility_audit(     previous_stage = previous_stage,     wcag_level = wcag_level,     target_disabilities = target_disabilities   )    # Generate specific recommendations   a11y_recommendations <- generate_accessibility_recommendations(     audit_results = accessibility_audit,     layout = safe_column_access(previous_stage, \"layout\"),     existing_concepts = safe_column_access(previous_stage, \"concepts\")   )    result_data <- tibble(     stage = \"Accessibility\",     wcag_level = wcag_level,     assistive_tech_support = assistive_tech_support,     accessibility_score = accessibility_audit$overall_score,     recommendations = paste(a11y_recommendations, collapse = \"; \"),     critical_issues = accessibility_audit$critical_issues_count,     timestamp = Sys.time()   )    return(bid_stage(\"Accessibility\", result_data)) }  # Integration with main BID workflow extended_bid_workflow <- function(config) {   # Standard BID stages   interpret_stage <- bid_interpret(     central_question = config$central_question,     data_story = config$data_story   )    notice_stage <- bid_notice(     previous_stage = interpret_stage,     problem = config$problem,     evidence = config$evidence   )    anticipate_stage <- bid_anticipate(     previous_stage = notice_stage,     bias_mitigations = config$bias_mitigations   )    structure_stage <- bid_structure(previous_stage = anticipate_stage)    # Custom stages   if (config$include_accessibility) {     accessibility_stage <- bid_accessibility(       previous_stage = structure_stage,       wcag_level = config$accessibility_requirements$wcag_level     )     final_stage <- accessibility_stage   } else {     final_stage <- structure_stage   }    # Validation with all insights   validate_stage <- bid_validate(     previous_stage = final_stage,     summary_panel = config$summary_panel,     next_steps = config$next_steps   )    return(validate_stage) }"},{"path":[]},{"path":"https://jrwinget.github.io/bidux/articles/advanced-workflows.html","id":"embedding-bid-in-data-science-projects","dir":"Articles","previous_headings":"Integration with Existing Data Science Workflows","what":"Embedding BID in Data Science Projects","title":"Advanced BID Workflows: Power User Techniques","text":"","code":"# Integrate BID into standard data science project structure create_bid_project_template <- function(     project_name,     project_type = \"dashboard\") {   project_structure <- list(     \"01-data-exploration/\" = \"Standard EDA and data validation\",     \"02-user-research/\" = \"BID Stage 1 (Interpret) - user needs analysis\",     \"03-problem-identification/\" = \"BID Stage 2 (Notice) - friction point analysis\",     \"04-behavioral-analysis/\" = \"BID Stage 3 (Anticipate) - bias mitigation planning\",     \"05-interface-design/\" = \"BID Stage 4 (Structure) - layout and UX design\",     \"06-validation-testing/\" = \"BID Stage 5 (Validate) - user testing and iteration\",     \"07-telemetry-analysis/\" = \"Post-deployment UX monitoring and improvement\",     \"bid_analysis.R\" = \"Consolidated BID framework application\",     \"ux_monitoring.R\" = \"Automated UX health monitoring\",     \"README.md\" = \"Project documentation including BID insights\"   )    return(project_structure) }  # Template for BID-informed data science projects bid_data_science_workflow <- function(project_config) {   workflow <- list(     # Phase 1: Data + User Understanding     phase_1 = list(       data_exploration = \"Standard EDA process\",       user_research = bid_interpret(         central_question = project_config$research_question,         data_story = project_config$data_narrative,         user_personas = project_config$stakeholders       )     ),      # Phase 2: Problem Definition     phase_2 = list(       statistical_analysis = \"Model building and validation\",       ux_problem_identification = bid_notice(         previous_stage = workflow$phase_1$user_research,         problem = project_config$interface_challenges,         evidence = project_config$user_feedback       )     ),      # Phase 3: Solution Design     phase_3 = list(       model_interpretation = \"Feature importance and model explanation\",       behavioral_considerations = bid_anticipate(         previous_stage = workflow$phase_2$ux_problem_identification,         bias_mitigations = project_config$cognitive_considerations       ),       interface_structure = bid_structure(         previous_stage = workflow$phase_3$behavioral_considerations       )     ),      # Phase 4: Validation & Deployment     phase_4 = list(       model_validation = \"Standard model performance validation\",       ux_validation = bid_validate(         previous_stage = workflow$phase_3$interface_structure,         summary_panel = project_config$success_criteria,         next_steps = project_config$iteration_plan       )     )   )    return(workflow) }"},{"path":[]},{"path":"https://jrwinget.github.io/bidux/articles/advanced-workflows.html","id":"systematic-documentation","dir":"Articles","previous_headings":"Best Practices for Advanced Users","what":"1. Systematic Documentation","title":"Advanced BID Workflows: Power User Techniques","text":"","code":"# Create comprehensive BID documentation document_bid_decisions <- function(bid_result, project_context) {   documentation <- list(     project_overview = project_context,     bid_stages_summary = extract_bid_summary(bid_result),     key_decisions = extract_key_decisions(bid_result),     behavioral_science_rationale = extract_behavioral_rationale(bid_result),     implementation_guidelines = generate_implementation_guide(bid_result),     success_metrics = define_success_metrics(bid_result),     iteration_plan = create_iteration_plan(bid_result)   )    return(documentation) }"},{"path":"https://jrwinget.github.io/bidux/articles/advanced-workflows.html","id":"collaborative-workflows","dir":"Articles","previous_headings":"Best Practices for Advanced Users","what":"2. Collaborative Workflows","title":"Advanced BID Workflows: Power User Techniques","text":"","code":"# Enable team collaboration on BID analysis create_bid_collaboration_workflow <- function(team_members, project_config) {   workflow <- list(     stakeholder_input = collect_stakeholder_perspectives(team_members),     expert_review = facilitate_expert_review_process(project_config),     consensus_building = build_consensus_on_bid_decisions(team_members),     implementation_coordination = coordinate_implementation_tasks(team_members)   )    return(workflow) }"},{"path":"https://jrwinget.github.io/bidux/articles/advanced-workflows.html","id":"continuous-learning","dir":"Articles","previous_headings":"Best Practices for Advanced Users","what":"3. Continuous Learning","title":"Advanced BID Workflows: Power User Techniques","text":"","code":"# Build organizational BID knowledge build_bid_knowledge_base <- function(completed_projects) {   knowledge_base <- map_dfr(     completed_projects,     function(project) {       extract_lessons_learned(project$bid_analysis, project$outcomes)     }   )    # Identify patterns and best practices   patterns <- identify_successful_patterns(knowledge_base)   anti_patterns <- identify_problematic_patterns(knowledge_base)    return(     list(       knowledge_base = knowledge_base,       successful_patterns = patterns,       anti_patterns = anti_patterns,       recommendations = generate_org_recommendations(patterns, anti_patterns)     )   ) }"},{"path":"https://jrwinget.github.io/bidux/articles/advanced-workflows.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Advanced BID Workflows: Power User Techniques","text":"advanced patterns enable : Automate BID analysis across dashboard portfolios Extend framework domain-specific concepts stages Integrate UX testing rigor statistical analysis Monitor UX health continuously data-driven alerts Embed behavioral science systematically data science workflows Key principle advanced users: Apply systematic, evidence-based approach use data analysis user experience design. BID framework provides structure—analytical skills provide rigor. questions advanced implementations, custom extensions, enterprise deployment patterns, consider contributing package development github.com/jrwinget/bidux. Remember: Advanced techniques effective serve users’ cognitive needs, just technical capabilities. Always validate complex implementations real user testing.","code":""},{"path":"https://jrwinget.github.io/bidux/articles/behavioral-science-primer.html","id":"introduction-the-gap-between-data-creators-and-data-users","dir":"Articles","previous_headings":"","what":"Introduction: The Gap Between Data Creators and Data Users","title":"Behavioral Science for Data Scientists: Why Your Dashboard Users Think Differently Than You Do","text":"data scientists R developers, ’re trained think systematically, explore data thoroughly, validate assumptions. ’s reality check: dashboard users don’t think like . Consider scenario: - see: well-organized dashboard 15 filters, 8 visualizations, comprehensive data coverage - users see: overwhelming interface can’t find need quickly isn’t users less intelligent; ’s ’re human, humans predictable cognitive patterns affect process information.","code":""},{"path":[]},{"path":"https://jrwinget.github.io/bidux/articles/behavioral-science-primer.html","id":"what-youre-optimized-for-as-a-data-scientist","dir":"Articles","previous_headings":"The Core Problem: Cognitive Load vs. Analytical Depth","what":"What You’re Optimized For (as a data scientist)","title":"Behavioral Science for Data Scientists: Why Your Dashboard Users Think Differently Than You Do","text":"","code":"# Your typical approach to data exploration data |>   filter(multiple_conditions) |>   group_by(several_dimensions) |>   summarize(     metric_1 = mean(value_1, na.rm = TRUE),     metric_2 = sum(value_2),     metric_3 = median(value_3),     .groups = \"drop\"   ) |>   arrange(desc(metric_1))"},{"path":"https://jrwinget.github.io/bidux/articles/behavioral-science-primer.html","id":"what-your-users-need-cognitive-efficiency","dir":"Articles","previous_headings":"The Core Problem: Cognitive Load vs. Analytical Depth","what":"What Your Users Need (cognitive efficiency)","title":"Behavioral Science for Data Scientists: Why Your Dashboard Users Think Differently Than You Do","text":"Quick orientation: “looking ?” Immediate value: “mean decision?” Clear next steps: “?”","code":""},{"path":[]},{"path":"https://jrwinget.github.io/bidux/articles/behavioral-science-primer.html","id":"cognitive-load-theory-the-mental-ram-problem","dir":"Articles","previous_headings":"Key Behavioral Science Concepts for Data People","what":"1. Cognitive Load Theory: The Mental RAM Problem","title":"Behavioral Science for Data Scientists: Why Your Dashboard Users Think Differently Than You Do","text":"Think human attention like computer memory: limited easily overloaded. dashboards, means: Users can process 5-9 pieces information simultaneously Every filter, chart, button competes mental resources Progressive disclosure beats comprehensive display Practical example:","code":"# Explore cognitive load concepts cognitive_concepts <- bid_concepts(\"cognitive\")  cognitive_concepts |>   select(concept, description, implementation_tips) |>   head(3) # Instead of showing all 12 KPIs at once: # kpi_grid <- layout_columns( #   value_box(\"Revenue\", \"$1.2M\", icon = \"currency-dollar\"), #   value_box(\"Customers\", \"15,432\", icon = \"people\"), #   # ... 10 more value boxes # )  # Show key metrics first, details on demand: kpi_summary <- layout_columns(   col_widths = c(8, 4),   card(     card_header(\"Key Performance Summary\"),     value_box(\"Primary Goal\", \"$1.2M Revenue\", icon = \"target\"),     p(\"vs. $980K target (+22%)\")   ),   card(     card_header(\"Details\"),     actionButton(       \"show_details\",       \"View All Metrics\",       class = \"btn-outline-primary\"     )   ) )"},{"path":"https://jrwinget.github.io/bidux/articles/behavioral-science-primer.html","id":"anchoring-bias-the-first-number-problem","dir":"Articles","previous_headings":"Key Behavioral Science Concepts for Data People","what":"2. Anchoring Bias: The First Number Problem","title":"Behavioral Science for Data Scientists: Why Your Dashboard Users Think Differently Than You Do","text":"Humans -rely first piece information see. data dashboards, means first number shown becomes reference point everything else. Dashboard implication: show “Sales: $50K” first, users judge subsequent numbers relative $50K, even ’s important metric. Solution pattern:","code":"# Learn about anchoring bid_concept(\"anchoring\") |>   select(description, implementation_tips) # Provide context and reference points sales_card <- card(   card_header(\"Monthly Sales Performance\"),   layout_columns(     value_box(       title = \"This Month\",       value = \"$87K\",       showcase = bs_icon(\"graph-up\"),       theme = \"success\"     ),     div(       p(\"Previous month: $65K\", style = \"color: #666; margin: 0;\"),       p(\"Target: $80K\", style = \"color: #666; margin: 0;\"),       p(strong(\"vs. Target: +9%\"), style = \"color: #28a745;\")     )   ) )"},{"path":"https://jrwinget.github.io/bidux/articles/behavioral-science-primer.html","id":"framing-effects-how-you-say-it-matters-more-than-what-you-say","dir":"Articles","previous_headings":"Key Behavioral Science Concepts for Data People","what":"3. Framing Effects: How You Say It Matters More Than What You Say","title":"Behavioral Science for Data Scientists: Why Your Dashboard Users Think Differently Than You Do","text":"data can interpreted completely differently based ’s presented. Example: Customer satisfaction 73%","code":"# Explore framing concepts bid_concept(\"framing\") |>   select(description, implementation_tips) # Negative frame (emphasizes problems) satisfaction_negative <- value_box(   \"Customer Issues\",   \"27% Unsatisfied\",   icon = \"exclamation-triangle\",   theme = \"danger\" )  # Positive frame (emphasizes success) satisfaction_positive <- value_box(   \"Customer Satisfaction\",   \"73% Satisfied\",   icon = \"heart-fill\",   theme = \"success\" )  # Balanced frame (shows progress) satisfaction_balanced <- card(   card_header(\"Customer Satisfaction Progress\"),   value_box(\"Current Level\", \"73%\"),   p(\"Improvement needed: 17 percentage points to reach 90% target\") )"},{"path":"https://jrwinget.github.io/bidux/articles/behavioral-science-primer.html","id":"choice-overload-why-more-options-create-worse-outcomes","dir":"Articles","previous_headings":"Key Behavioral Science Concepts for Data People","what":"4. Choice Overload: Why More Options Create Worse Outcomes","title":"Behavioral Science for Data Scientists: Why Your Dashboard Users Think Differently Than You Do","text":"Research shows many choices lead decision paralysis user dissatisfaction. data scientist instinct: “Let’s give 20 different chart types 15 filters can explore question!” user reality: Use defaults ignore customization options Get overwhelmed abandon task Make suboptimal choices due cognitive fatigue Better approach:","code":"# Instead of 15 filters visible at once ui_complex <- div(   selectInput(\"region\", \"Region\", choices = regions),   selectInput(\"product\", \"Product\", choices = products),   selectInput(\"channel\", \"Channel\", choices = channels),   # ... 12 more filters )  # Use progressive disclosure ui_simple <- div(   # Show only the most common filters first   selectInput(\"time_period\", \"Time Period\", choices = time_options),   selectInput(\"metric\", \"Primary Metric\", choices = key_metrics),    # Advanced filters behind a toggle   accordion(     accordion_panel(       \"Advanced Filters\",       icon = bs_icon(\"sliders\"),       selectInput(\"region\", \"Region\", choices = regions),       selectInput(\"product\", \"Product\", choices = products)       # Additional filters here     )   ) )"},{"path":[]},{"path":"https://jrwinget.github.io/bidux/articles/behavioral-science-primer.html","id":"your-ab-testing-mindset-ux-validation","dir":"Articles","previous_headings":"Translating Data Science Skills to UX Thinking","what":"Your A/B Testing Mindset → UX Validation","title":"Behavioral Science for Data Scientists: Why Your Dashboard Users Think Differently Than You Do","text":"already know test hypotheses data. Apply rigor UX decisions:","code":"# Your typical A/B test results <- t.test(   treatment_group$conversion_rate,   control_group$conversion_rate )  # UX equivalent: Test interface variations dashboard_test <- list(   control = \"Current 5-chart overview page\",   treatment = \"Redesigned with progressive disclosure\" )  # Measure: task completion time, user satisfaction, error rates # Analyze: same statistical rigor you'd apply to any experiment"},{"path":"https://jrwinget.github.io/bidux/articles/behavioral-science-primer.html","id":"your-data-validation-process-user-mental-model-validation","dir":"Articles","previous_headings":"Translating Data Science Skills to UX Thinking","what":"Your Data Validation Process → User Mental Model Validation","title":"Behavioral Science for Data Scientists: Why Your Dashboard Users Think Differently Than You Do","text":"Just validate data quality, validate interface matches user expectations:","code":"# Document user mental models like you document data assumptions user_assumptions <- bid_interpret(   central_question = \"How do sales managers think about performance?\",   data_story = list(     hook = \"Sales managers need quick performance insights\",     context = \"They have 15 minutes between meetings\",     tension = \"Current reports take too long to interpret\",     resolution = \"Provide immediate visual context with drill-down capability\"   ) )  # Validate these assumptions like you'd validate data quality summary(user_assumptions)"},{"path":"https://jrwinget.github.io/bidux/articles/behavioral-science-primer.html","id":"the-bid-framework-a-systematic-approach-for-data-people","dir":"Articles","previous_headings":"","what":"The BID Framework: A Systematic Approach for Data People","title":"Behavioral Science for Data Scientists: Why Your Dashboard Users Think Differently Than You Do","text":"BID framework gives systematic way apply behavioral science, similar approach data analysis:","code":""},{"path":"https://jrwinget.github.io/bidux/articles/behavioral-science-primer.html","id":"stage-1-interpret-like-defining-your-research-question","dir":"Articles","previous_headings":"The BID Framework: A Systematic Approach for Data People","what":"Stage 1: Interpret (Like defining your research question)","title":"Behavioral Science for Data Scientists: Why Your Dashboard Users Think Differently Than You Do","text":"specific question dashboard answer? users constraints?","code":""},{"path":"https://jrwinget.github.io/bidux/articles/behavioral-science-primer.html","id":"stage-2-notice-like-identifying-data-quality-issues","dir":"Articles","previous_headings":"The BID Framework: A Systematic Approach for Data People","what":"Stage 2: Notice (Like identifying data quality issues)","title":"Behavioral Science for Data Scientists: Why Your Dashboard Users Think Differently Than You Do","text":"users get stuck confused? cognitive bottlenecks exist?","code":""},{"path":"https://jrwinget.github.io/bidux/articles/behavioral-science-primer.html","id":"stage-3-anticipate-like-checking-for-statistical-biases","dir":"Articles","previous_headings":"The BID Framework: A Systematic Approach for Data People","what":"Stage 3: Anticipate (Like checking for statistical biases)","title":"Behavioral Science for Data Scientists: Why Your Dashboard Users Think Differently Than You Do","text":"cognitive biases might affect interpretation? can design mitigate biases?","code":""},{"path":"https://jrwinget.github.io/bidux/articles/behavioral-science-primer.html","id":"stage-4-structure-like-choosing-the-right-visualization","dir":"Articles","previous_headings":"The BID Framework: A Systematic Approach for Data People","what":"Stage 4: Structure (Like choosing the right visualization)","title":"Behavioral Science for Data Scientists: Why Your Dashboard Users Think Differently Than You Do","text":"layout best supports user’s mental model? information hierarchically organized?","code":""},{"path":"https://jrwinget.github.io/bidux/articles/behavioral-science-primer.html","id":"stage-5-validate-like-testing-your-model","dir":"Articles","previous_headings":"The BID Framework: A Systematic Approach for Data People","what":"Stage 5: Validate (Like testing your model)","title":"Behavioral Science for Data Scientists: Why Your Dashboard Users Think Differently Than You Do","text":"user leave clear insights? Can take action ’ve learned?","code":""},{"path":"https://jrwinget.github.io/bidux/articles/behavioral-science-primer.html","id":"practical-next-steps","dir":"Articles","previous_headings":"","what":"Practical Next Steps","title":"Behavioral Science for Data Scientists: Why Your Dashboard Users Think Differently Than You Do","text":"Start small: Pick one dashboard apply BID framework Measure: Track user behavior metrics (time insight, task completion) Iterate: Use experimental mindset apply model development Learn progressively: Use bid_concepts() explore one behavioral principle time","code":"# Explore available concepts by category all_concepts <- bid_concepts() table(all_concepts$category)  # Start with these fundamental concepts for data dashboards starter_concepts <- c(   \"Cognitive Load Theory\",   \"Anchoring Effect\",   \"Processing Fluency\",   \"Progressive Disclosure\" )  for (concept in starter_concepts) {   cat(\"\\n### \", concept, \"\\n\")   info <- bid_concept(concept)   cat(info$description[1], \"\\n\")   cat(\"Implementation:\", info$implementation_tips[1], \"\\n\") }"},{"path":"https://jrwinget.github.io/bidux/articles/behavioral-science-primer.html","id":"why-this-matters-for-you","dir":"Articles","previous_headings":"","what":"Why This Matters for You","title":"Behavioral Science for Data Scientists: Why Your Dashboard Users Think Differently Than You Do","text":"Understanding user cognition makes complete data professional: Better adoption: analyses get used instead ignored Clearer communication: Stakeholders understand act insights Strategic thinking: solve business problems, just technical problems Competitive advantage: data scientists don’t think user experience Remember: best analysis world worthless users can’t understand act . Behavioral science helps bridge gap.","code":""},{"path":"https://jrwinget.github.io/bidux/articles/behavioral-science-primer.html","id":"resources-for-further-learning","dir":"Articles","previous_headings":"","what":"Resources for Further Learning","title":"Behavioral Science for Data Scientists: Why Your Dashboard Users Think Differently Than You Do","text":"Use bid_concepts() explore available behavioral science concepts Try getting-started vignette hands-BID framework practice Check telemetry-integration vignette measure impact UX improvements goal isn’t become UX expert; ’s apply analytical thinking user experience create effective data products.","code":""},{"path":"https://jrwinget.github.io/bidux/articles/concepts-reference.html","id":"bid-framework-concepts-practical-implementation","dir":"Articles","previous_headings":"","what":"BID Framework Concepts: Practical Implementation","title":"BID Framework Concepts: Practical Implementation","text":"Behavioral Insight Design (BID) framework integrates behavioral science UI/UX design Shiny dashboards. guide focuses practical implementation key concepts using modern packages like {bslib}, {reactable}, {echarts4r}.","code":""},{"path":"https://jrwinget.github.io/bidux/articles/concepts-reference.html","id":"framework-overview","dir":"Articles","previous_headings":"BID Framework Concepts: Practical Implementation","what":"Framework Overview","title":"BID Framework Concepts: Practical Implementation","text":"BID framework consists 5 sequential stages, incorporating specific psychological tendencies design principles: Interpret: Understand user needs (Data Storytelling, User Personas) Notice: Identify friction points (Cognitive Load, Visual Hierarchy) Anticipate: Mitigate biases (Anchoring, Framing) Structure: Organize information (Layout Patterns, Breathable Designs) Validate: Empower user (Peak-End Rule, Collaboration)","code":""},{"path":"https://jrwinget.github.io/bidux/articles/concepts-reference.html","id":"stage-1-interpret---implementing-data-storytelling","dir":"Articles","previous_headings":"BID Framework Concepts: Practical Implementation","what":"Stage 1: Interpret - Implementing Data Storytelling","title":"BID Framework Concepts: Practical Implementation","text":"Data storytelling helps users understand meaning behind data narrative structure hook, context, tension, resolution.","code":""},{"path":"https://jrwinget.github.io/bidux/articles/concepts-reference.html","id":"using-echarts4r-for-data-storytelling","dir":"Articles","previous_headings":"BID Framework Concepts: Practical Implementation > Stage 1: Interpret - Implementing Data Storytelling","what":"Using {echarts4r} for Data Storytelling","title":"BID Framework Concepts: Practical Implementation","text":"","code":"ui <- page_fillable(   theme = bs_theme(     version = 5,     bg = \"#FFFFFF\",     fg = \"#333333\"   ),   # Clear section headers   layout_column_wrap(     width = 12,     card(       card_header(         h2(\"Sales Dashboard\", class = \"fs-4\")       ),       card_body(         p(\"Key sales metrics for Q2 2025\")       )     )   ),   # Limited filters grouped by purpose   layout_column_wrap(     width = 12,     card(       card_header(\"Filters\"),       card_body(         layout_column_wrap(           width = 1 / 3,           # Time-related filters grouped together           card(             card_body(               h5(\"Time Period\"),               dateRangeInput(                 \"date_range\",                 NULL,                 start = Sys.Date() - 90,                 end = Sys.Date()               ),               checkboxInput(\"compare_prev\", \"Compare to previous period\")             )           ),           # Product-related filters grouped together           card(             card_body(               h5(\"Products\"),               selectInput(                 \"category\",                 \"Category:\",                 choices = c(\"All\", \"Electronics\", \"Clothing\", \"Home\")               )             )           ),           # Region-related filters grouped together           card(             card_body(               h5(\"Regions\"),               selectInput(                 \"region\",                 \"Region:\",                 choices = c(\"All\", \"North\", \"South\", \"East\", \"West\")               )             )           )         )       )     )   ),   # Main content with clear organization   layout_column_wrap(     width = 1 / 3,     # Key metrics with visual simplicity     value_box(       title = \"Total Revenue\",       value = \"$1.24M\",       showcase = bsicons::bs_icon(\"graph-up-arrow\"),       theme = value_box_theme(         bg = \"#f8f9fa\",         fg = \"#333333\"       )     ),     value_box(       title = \"Orders\",       value = \"8,490\",       showcase = bsicons::bs_icon(\"cart\"),       theme = value_box_theme(         bg = \"#f8f9fa\",         fg = \"#333333\"       )     ),     value_box(       title = \"Avg Order Value\",       value = \"$146\",       showcase = bsicons::bs_icon(\"tag\"),       theme = value_box_theme(         bg = \"#f8f9fa\",         fg = \"#333333\"       )     )   ),   # Main charts with progressive disclosure   accordion(     accordion_panel(       \"Sales Performance\",       echarts4rOutput(\"sales_chart\", height = \"300px\")     ),     accordion_panel(       \"Category Breakdown\",       echarts4rOutput(\"category_chart\", height = \"300px\")     ),     accordion_panel(       \"Regional Analysis\",       echarts4rOutput(\"region_chart\", height = \"300px\")     )   ) )"},{"path":"https://jrwinget.github.io/bidux/articles/concepts-reference.html","id":"key-design-principles-for-data-storytelling","dir":"Articles","previous_headings":"BID Framework Concepts: Practical Implementation > Stage 1: Interpret - Implementing Data Storytelling","what":"Key Design Principles for Data Storytelling:","title":"BID Framework Concepts: Practical Implementation","text":"Start compelling hook grab attention Provide relevant context background Highlight challenge opportunity (tension) Offer clear insights actionable recommendations Use progressive disclosure reveal story","code":""},{"path":"https://jrwinget.github.io/bidux/articles/concepts-reference.html","id":"stage-2-notice---reducing-cognitive-load","dir":"Articles","previous_headings":"BID Framework Concepts: Practical Implementation","what":"Stage 2: Notice - Reducing Cognitive Load","title":"BID Framework Concepts: Practical Implementation","text":"Cognitive load amount mental effort required use interface. High cognitive load leads user frustration errors.","code":""},{"path":"https://jrwinget.github.io/bidux/articles/concepts-reference.html","id":"using-bslib-to-reduce-cognitive-load","dir":"Articles","previous_headings":"BID Framework Concepts: Practical Implementation > Stage 2: Notice - Reducing Cognitive Load","what":"Using {bslib} to Reduce Cognitive Load","title":"BID Framework Concepts: Practical Implementation","text":"","code":"ui <- page_fillable(   theme = bs_theme(     version = 5,     bg = \"#FFFFFF\",     fg = \"#333333\"   ),   # Story Hook: Lead with a compelling insight   layout_column_wrap(     width = 12,     card(       card_header(\"Q2 2025 Sales Analysis\"),       card_body(         layout_column_wrap(           width = 1,           # Hook: Draw attention to an interesting pattern           h3(             \"Online sales exceeded in-store for the first time\",             class = \"text-primary fs-4\"           ),           p(             paste(               \"Q2 saw a historic shift in our sales channels,\",               \"creating both challenges and opportunities.\"             )           )         )       )     )   ),   # Story Context: Provide background   layout_column_wrap(     width = 1 / 2,     card(       card_header(\"Sales Channel Trend\"),       card_body(         # Context: Show the historical trend         echarts4rOutput(\"channel_trend\")       ),       card_footer(         p(           paste(             \"Historical context: Online sales have been steadily increasing\",             \"over the past 8 quarters.\"           )         )       )     ),     # Supporting context visualization     card(       card_header(\"Q2 Channel Breakdown\"),       card_body(         echarts4rOutput(\"channel_pie\")       )     )   ),   # Story Tension: Highlight the challenge or opportunity   layout_column_wrap(     width = 12,     card(       card_header(\"The Challenge\"),       card_body(         layout_column_wrap(           width = 1 / 2,           div(             # Tension: Highlight the problem             h4(\"Different Customer Behaviors by Channel\"),             p(               paste(                 \"Online customers show distinct shopping patterns compared\",                 \"to in-store shoppers.\"               )             ),             p(\"Key differences:\")           ),           # Supporting data for tension           echarts4rOutput(\"behavior_comparison\")         )       )     )   ),   # Story Resolution: Provide insights and next steps   layout_column_wrap(     width = 12,     card(       card_header(\"Recommended Actions\"),       card_body(         layout_column_wrap(           width = 1 / 3,           card(             card_body(               h5(\"Update Digital Strategy\"),               p(\"Adapt marketing approach to online-first customer base\"),               p(\"Timeline: Immediate\")             )           ),           card(             card_body(               h5(\"Enhance Online Experience\"),               p(\"Focus on mobile optimization and checkout flow\"),               p(\"Timeline: Q3 2025\")             )           ),           card(             card_body(               h5(\"Reposition Physical Stores\"),               p(\"Shift from transaction centers to experience hubs\"),               p(\"Timeline: Q4 2025\")             )           )         )       ),       card_footer(         actionButton(           \"download_report\",           \"Download Full Analysis\",           class = \"btn-primary\"         )       )     )   ) )  # Server function for data storytelling charts: server <- function(input, output, session) {   # Channel trend chart showing the story over time   output$channel_trend <- renderEcharts4r({     data.frame(       quarter = paste0(\"Q\", 1:8, \" \", c(rep(\"2024\", 4), rep(\"2025\", 4))),       online = c(42, 45, 47, 48, 49, 52, 54, 56),       in_store = c(58, 55, 53, 52, 51, 48, 46, 44)     ) |>       e_charts(quarter) |>       e_line(online, name = \"Online\") |>       e_line(in_store, name = \"In-store\") |>       e_title(\"Sales Channel Distribution (%)\") |>       e_x_axis(axisLabel = list(rotate = 45)) |>       e_tooltip(trigger = \"axis\") |>       e_mark_line(         data = list(xAxis = \"Q2 2025\"),         name = \"Current Quarter\"       ) |>       e_color(c(\"#3498db\", \"#2ecc71\"))   })    # Channel gauge chart for current quarter   output$channel_pie <- renderEcharts4r({     data.frame(       channel = c(\"Online\", \"In-store\"),       value = c(56, 44)     ) |>       e_charts(channel) |>       e_title(\"Q2 2025 Sales Distribution\") |>       e_gauge(         value,         startAngle = 180,         endAngle = 0,         detail = list(formatter = \"{value}%\"),         axisLine = list(           lineStyle = list(             color = list(               c(value / 100, \"#3498db\"),               c(1, \"#e9e9e9\")             ),             width = 30           )         )       ) |>       e_tooltip()   })    # Behavior comparison for tension   output$behavior_comparison <- renderEcharts4r({     data.frame(       metric = c(         \"Avg Order Value\",         \"Items per Order\",         \"Return Rate\",         \"Repeat Purchase\"       ),       online = c(120, 2.4, 12, 45),       in_store = c(150, 1.8, 5, 35)     ) |>       e_charts(metric) |>       e_bar(online, name = \"Online\") |>       e_bar(in_store, name = \"In-store\") |>       e_tooltip() |>       e_color(c(\"#3498db\", \"#2ecc71\"))   }) }"},{"path":"https://jrwinget.github.io/bidux/articles/concepts-reference.html","id":"key-elements-for-reducing-cognitive-load","dir":"Articles","previous_headings":"BID Framework Concepts: Practical Implementation > Stage 2: Notice - Reducing Cognitive Load","what":"Key Elements for Reducing Cognitive Load:","title":"BID Framework Concepts: Practical Implementation","text":"Group related controls information together Use consistent layouts patterns Implement progressive disclosure hide complexity Limit number choices presented Use clear visual hierarchy guide attention","code":""},{"path":"https://jrwinget.github.io/bidux/articles/concepts-reference.html","id":"stage-3-anticipate---mitigating-anchoring-bias","dir":"Articles","previous_headings":"BID Framework Concepts: Practical Implementation","what":"Stage 3: Anticipate - Mitigating Anchoring Bias","title":"BID Framework Concepts: Practical Implementation","text":"Anchoring bias occurs users rely heavily first piece information encounter making decisions.","code":""},{"path":"https://jrwinget.github.io/bidux/articles/concepts-reference.html","id":"using-reactable-and-echarts4r-to-mitigate-anchoring","dir":"Articles","previous_headings":"BID Framework Concepts: Practical Implementation > Stage 3: Anticipate - Mitigating Anchoring Bias","what":"Using {reactable} and {echarts4r} to Mitigate Anchoring","title":"BID Framework Concepts: Practical Implementation","text":"","code":"ui <- page_fillable(   theme = bs_theme(     version = 5,     bg = \"#FFFFFF\",     fg = \"#333333\"   ),   # Page title with ample space   layout_column_wrap(     width = 12,     gap = \"2rem\", # Add breathing room     card(       card_header(         h1(           \"Customer Analytics Dashboard\",           class = \"fs-3 py-2\" # Add vertical padding         )       )     )   ),   # KPI cards with generous spacing   layout_column_wrap(     width = 1 / 3,     gap = \"2rem\", # Generous spacing between cards     card(       card_body(         padding = \"1.5rem\", # Extra padding inside cards         h3(\"Customers\", class = \"fs-4 mb-4\"), # Bottom margin for breathing room         div(class = \"display-5 mb-3\", \"12,486\"), # Large text with spacing         div(class = \"text-success\", \"↑ 8% from last month\")       )     ),     card(       card_body(         padding = \"1.5rem\",         h3(\"Retention Rate\", class = \"fs-4 mb-4\"),         div(class = \"display-5 mb-3\", \"86%\"),         div(class = \"text-success\", \"↑ 3% from last month\")       )     ),     card(       card_body(         padding = \"1.5rem\",         h3(\"Satisfaction\", class = \"fs-4 mb-4\"),         div(class = \"display-5 mb-3\", \"4.7/5\"),         div(class = \"text-success\", \"↑ 0.2 from last month\")       )     )   ),   # Add vertical spacing   layout_column_wrap(     width = 12,     gap = \"2rem\",     card(       card_header(         h3(\"Customer Segments\", class = \"fs-4\")       ),       card_body(         padding = \"1.5rem\", # Extra padding         echarts4rOutput(\"segments_chart\", height = \"300px\")       )     )   ),   # Tabbed interface with inner spacing   layout_column_wrap(     width = 12,     gap = \"2rem\",     nav_panel_tabset(       nav_panel(         \"Demographics\",         div(           class = \"py-4\", # Top and bottom padding           layout_column_wrap(             width = 1 / 2,             gap = \"2rem\",             echarts4rOutput(\"age_chart\", height = \"300px\"),             echarts4rOutput(\"location_chart\", height = \"300px\")           )         )       ),       nav_panel(         \"Behavior\",         div(           class = \"py-4\",           layout_column_wrap(             width = 1 / 2,             gap = \"2rem\",             echarts4rOutput(\"frequency_chart\", height = \"300px\"),             echarts4rOutput(\"channels_chart\", height = \"300px\")           )         )       )     )   ),   # Data table with breathing room   layout_column_wrap(     width = 12,     gap = \"2rem\",     card(       card_header(         h3(\"Customer Details\", class = \"fs-4\")       ),       card_body(         padding = \"1.5rem\", # Extra padding         reactableOutput(\"customers_table\")       )     )   ),   # Add space at bottom of page   layout_column_wrap(     width = 12,     gap = \"1rem\",     div(class = \"py-3\") # Empty div for padding   ) )"},{"path":"https://jrwinget.github.io/bidux/articles/concepts-reference.html","id":"key-elements-of-breathable-layouts","dir":"Articles","previous_headings":"BID Framework Concepts: Practical Implementation > Stage 3: Anticipate - Mitigating Anchoring Bias","what":"Key Elements of Breathable Layouts:","title":"BID Framework Concepts: Practical Implementation","text":"Consistent spacing: Use consistent margins padding throughout Whitespace: Don’t crowd elements; give room “breathe” Grouping: Use whitespace create logical groups Content density: Limit amount information section Visual rhythm: Create consistent visual pattern spacing","code":""},{"path":"https://jrwinget.github.io/bidux/articles/concepts-reference.html","id":"using-bslib-for-breathable-layouts","dir":"Articles","previous_headings":"BID Framework Concepts: Practical Implementation > Stage 3: Anticipate - Mitigating Anchoring Bias","what":"Using {bslib} for Breathable Layouts","title":"BID Framework Concepts: Practical Implementation","text":"","code":"ui <- page_fillable(   theme = bs_theme(     version = 5   ),   # Context explanation   layout_column_wrap(     width = 12,     card(       card_header(\"Sales Performance Dashboard\"),       card_body(         p(           paste(             \"This dashboard provides multiple reference points\",             \"to help avoid anchoring bias.\"           )         )       )     )   ),   # Multiple reference points in KPIs   layout_column_wrap(     width = 1 / 3,     card(       card_header(\"Revenue\"),       card_body(         layout_column_wrap(           width = 1,           h3(\"$1.24M\", class = \"text-center fs-2\"),           # Multiple reference points to reduce anchoring           navset_pill(             nav_panel(               \"vs Target\",               div(                 class = \"text-center mt-2\",                 div(class = \"text-success fw-bold\", \"+8%\"),                 div(class = \"text-muted small\", \"Target: $1.15M\")               )             ),             nav_panel(               \"vs Last Year\",               div(                 class = \"text-center mt-2\",                 div(class = \"text-success fw-bold\", \"+12%\"),                 div(class = \"text-muted small\", \"Last Year: $1.11M\")               )             ),             nav_panel(               \"vs Industry\",               div(                 class = \"text-center mt-2\",                 div(class = \"text-success fw-bold\", \"+5%\"),                 div(class = \"text-muted small\", \"Industry Avg: $1.18M\")               )             )           )         )       )     ),     # Similar pattern for other metrics     card(       card_header(\"Conversion Rate\"),       card_body(         layout_column_wrap(           width = 1,           h3(\"3.2%\", class = \"text-center fs-2\"),           # Multiple reference points           navset_pill(             nav_panel(               \"vs Target\",               div(                 class = \"text-center mt-2\",                 div(class = \"text-success fw-bold\", \"+0.2%\"),                 div(class = \"text-muted small\", \"Target: 3.0%\")               )             ),             nav_panel(               \"vs Last Year\",               div(                 class = \"text-center mt-2\",                 div(class = \"text-success fw-bold\", \"+0.5%\"),                 div(class = \"text-muted small\", \"Last Year: 2.7%\")               )             ),             nav_panel(               \"vs Industry\",               div(                 class = \"text-center mt-2\",                 div(class = \"text-danger fw-bold\", \"-0.3%\"),                 div(class = \"text-muted small\", \"Industry Avg: 3.5%\")               )             )           )         )       )     ),     # Third metric with multiple anchors     card(       card_header(\"Average Order Value\"),       card_body(         layout_column_wrap(           width = 1,           h3(\"$148\", class = \"text-center fs-2\"),           # Multiple reference points           navset_pill(             nav_panel(               \"vs Target\",               div(                 class = \"text-center mt-2\",                 div(class = \"text-danger fw-bold\", \"-$7\"),                 div(class = \"text-muted small\", \"Target: $155\")               )             ),             nav_panel(               \"vs Last Year\",               div(                 class = \"text-center mt-2\",                 div(class = \"text-success fw-bold\", \"+$10\"),                 div(class = \"text-muted small\", \"Last Year: $138\")               )             ),             nav_panel(               \"vs Industry\",               div(                 class = \"text-center mt-2\",                 div(class = \"text-success fw-bold\", \"+$8\"),                 div(class = \"text-muted small\", \"Industry Avg: $140\")               )             )           )         )       )     )   ),   # Chart with multiple reference lines   layout_column_wrap(     width = 12,     card(       card_header(\"Sales Performance with Multiple References\"),       card_body(         echarts4rOutput(\"sales_references\")       )     )   ),   # Data table with multiple reference columns   layout_column_wrap(     width = 12,     card(       card_header(\"Performance Metrics with Multiple References\"),       card_body(         reactableOutput(\"metrics_table\")       )     )   ) )  # Server logic for anchoring bias mitigation server <- function(input, output, session) {   # Chart with multiple reference points   output$sales_references <- renderEcharts4r({     data.frame(       month = month.name[1:6],       actual = c(980, 1020, 1150, 1240, 1310, 1280),       target = c(1000, 1050, 1100, 1150, 1200, 1250),       prev_year = c(920, 950, 990, 1110, 1160, 1200),       industry = c(990, 1040, 1090, 1130, 1170, 1210)     ) |>       e_charts(month) |>       e_line(         actual,         name = \"Actual\",         symbol = \"circle\",         symbolSize = 10       ) |>       e_line(         target,         name = \"Target\",         symbol = \"none\",         lineStyle = list(type = \"dashed\")       ) |>       e_line(         prev_year,         name = \"Previous Year\",         symbol = \"none\",         lineStyle = list(type = \"dotted\")       ) |>       e_line(         industry,         name = \"Industry Avg\",         symbol = \"none\",         lineStyle = list(type = \"dashed\")       ) |>       e_title(\"Revenue Performance (Thousands)\") |>       e_tooltip(trigger = \"axis\") |>       e_color(c(\"#3498db\", \"#e74c3c\", \"#2ecc71\", \"#f39c12\"))   })    # Table with multiple reference columns   output$metrics_table <- renderReactable({     data <- data.frame(       metric = c(         \"Revenue\",         \"Conversion Rate\",         \"Avg Order Value\",         \"Customer Count\",         \"Units Sold\"       ),       actual = c(\"$1.24M\", \"3.2%\", \"$148\", \"8,378\", \"12,420\"),       target = c(\"$1.15M\", \"3.0%\", \"$155\", \"7,500\", \"11,500\"),       vs_target = c(\"+8%\", \"+7%\", \"-5%\", \"+12%\", \"+8%\"),       prev_year = c(\"$1.11M\", \"2.7%\", \"$138\", \"7,825\", \"11,830\"),       vs_prev = c(\"+12%\", \"+19%\", \"+7%\", \"+7%\", \"+5%\"),       industry = c(\"$1.18M\", \"3.5%\", \"$140\", \"8,100\", \"12,000\"),       vs_industry = c(\"+5%\", \"-9%\", \"+6%\", \"+3%\", \"+4%\")     )      # Custom cell renderer for comparisons     compare_cell <- function(value) {       if (grepl(\"^\\\\+\", value)) {         div(value, style = list(color = \"#2ecc71\", fontWeight = \"bold\"))       } else if (grepl(\"^\\\\-\", value)) {         div(value, style = list(color = \"#e74c3c\", fontWeight = \"bold\"))       } else {         value       }     }      reactable(       data,       columns = list(         metric = colDef(name = \"Metric\"),         actual = colDef(name = \"Actual\"),         target = colDef(name = \"Target\"),         vs_target = colDef(name = \"vs Target\", cell = compare_cell),         prev_year = colDef(name = \"Previous Year\"),         vs_prev = colDef(name = \"vs Prev Year\", cell = compare_cell),         industry = colDef(name = \"Industry Avg\"),         vs_industry = colDef(name = \"vs Industry\", cell = compare_cell)       ),       striped = TRUE,       highlight = TRUE,       bordered = TRUE     )   }) }"},{"path":"https://jrwinget.github.io/bidux/articles/concepts-reference.html","id":"key-techniques-for-mitigating-anchoring-bias","dir":"Articles","previous_headings":"BID Framework Concepts: Practical Implementation > Stage 3: Anticipate - Mitigating Anchoring Bias","what":"Key Techniques for Mitigating Anchoring Bias:","title":"BID Framework Concepts: Practical Implementation","text":"Multiple reference points: Show different benchmarks (target, previous, industry) Alternative perspectives: Enable switching different views Contextual information: Provide additional context values Visual references: Use reference lines charts Relative comparisons: Show percentage changes rather just absolute values","code":""},{"path":"https://jrwinget.github.io/bidux/articles/concepts-reference.html","id":"stage-5-validate---implementing-the-peak-end-rule","dir":"Articles","previous_headings":"BID Framework Concepts: Practical Implementation","what":"Stage 5: Validate - Implementing the Peak-End Rule","title":"BID Framework Concepts: Practical Implementation","text":"Peak-End Rule states people judge experiences largely based felt intense point (peak) end, rather based sum average experience.","code":""},{"path":"https://jrwinget.github.io/bidux/articles/concepts-reference.html","id":"using-bslib-to-implement-the-peak-end-rule","dir":"Articles","previous_headings":"BID Framework Concepts: Practical Implementation > Stage 5: Validate - Implementing the Peak-End Rule","what":"Using {bslib} to Implement the Peak-End Rule","title":"BID Framework Concepts: Practical Implementation","text":"","code":"ui <- page_fillable(   theme = bs_theme(     version = 5   ),    # Dashboard content would go here...    # End with a strong summary and clear next steps   layout_column_wrap(     width = 12,     card(       card_header(         h2(\"Key Insights & Recommended Actions\", class = \"fs-4\")       ),       card_body(         layout_column_wrap(           width = 1 / 2,           # Summary insights at the end of the dashboard           card(             card_header(\"Key Takeaways\"),             card_body(               tags$ul(                 tags$li(                   span(\"Revenue is trending \", class = \"fw-bold\"),                   span(\"8% above target\", class = \"text-success fw-bold\"),                   span(                     paste(                       \" for the quarter, primarily driven by\",                       \"the Electronics category.\"                     )                   )                 ),                 tags$li(                   span(\"Customer acquisition cost has \", class = \"fw-bold\"),                   span(\"decreased by 12%\", class = \"text-success fw-bold\"),                   span(\" following the new digital marketing strategy.\")                 ),                 tags$li(                   span(\"The West region continues to \", class = \"fw-bold\"),                   span(\"underperform by 5%\", class = \"text-danger fw-bold\"),                   span(\" compared to other regions.\")                 )               )             )           ),           # Clear next steps to end on a positive action-oriented note           card(             card_header(\"Recommended Next Steps\"),             card_body(               layout_column_wrap(                 width = 1,                 # Button card for first recommendation                 card(                   card_body(                     h5(\"Increase Electronics Inventory\"),                     p(                       paste(                         \"Current inventory will only support 2 more\",                         \"weeks of sales at current pace.\"                       )                     ),                     actionButton(                       \"action1\",                       \"Order Inventory\",                       class = \"btn-primary w-100\"                     )                   )                 ),                 # Button card for second recommendation                 card(                   card_body(                     h5(\"Expand Digital Marketing\"),                     p(                       paste(                         \"Current campaigns are performing well.\",                         \"Consider increasing budget allocation.\"                       )                     ),                     actionButton(                       \"action2\",                       \"Adjust Budget\",                       class = \"btn-primary w-100\"                     )                   )                 ),                 # Button card for third recommendation                 card(                   card_body(                     h5(\"Review West Region Strategy\"),                     p(                       paste(                         \"Schedule meeting with regional team to\",                         \"address performance gaps.\"                       )                     ),                     actionButton(                       \"action3\",                       \"Schedule Meeting\",                       class = \"btn-primary w-100\"                     )                   )                 )               )             )           )         )       ),       # Final call to action       card_footer(         layout_column_wrap(           width = 1,           p(\"These insights are based on data through Q1.\"),           div(             class = \"text-end\",             actionButton(               \"export_pdf\",               \"Export as PDF\",               class = \"btn-outline-primary me-2\"             ),             actionButton(               \"share_dashboard\",               \"Share Dashboard\",               class = \"btn-primary\"             )           )         )       )     )   ) )"},{"path":"https://jrwinget.github.io/bidux/articles/concepts-reference.html","id":"key-elements-of-implementing-the-peak-end-rule","dir":"Articles","previous_headings":"BID Framework Concepts: Practical Implementation > Stage 5: Validate - Implementing the Peak-End Rule","what":"Key Elements of Implementing the Peak-End Rule:","title":"BID Framework Concepts: Practical Implementation","text":"Strong summary: End clear summary key findings Actionable insights: Provide specific recommendations Visual emphasis: Make end section visually distinct appealing Call action: End clear next steps Positive tone: End positive, forward-looking note","code":""},{"path":"https://jrwinget.github.io/bidux/articles/concepts-reference.html","id":"conclusion","dir":"Articles","previous_headings":"BID Framework Concepts: Practical Implementation","what":"Conclusion","title":"BID Framework Concepts: Practical Implementation","text":"practical implementations demonstrate apply key BID framework concepts using modern Shiny packages: {bslib} provides layout components, cards, value boxes structured information presentation {reactable} offers advanced data tables conditional formatting custom rendering {echarts4r} creates interactive visualizations multiple reference points comparative views explore concepts implementation, use bid_concepts() function access full concept dictionary: detailed information specific concept: BID framework provides systematic approach incorporating behavioral science dashboard design, resulting intuitive, usable, effective Shiny applications.","code":"bid_concepts() |>   select(concept, category, implementation_tips) |>   head(5) bid_concept(\"Anchoring Effect\") |>   select(concept, description, implementation_tips)"},{"path":"https://jrwinget.github.io/bidux/articles/getting-started.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Getting Started with bidux","text":"bidux package helps Shiny developers create effective dashboards using Behavioral Insight Design (BID) Framework. ’ve ever wondered users struggle carefully crafted dashboards, beautifully visualized data doesn’t drive decisions expected, package . core insight: Technical excellence ≠ User success. Even sophisticated analysis can fail users can’t quickly understand act . BID framework bridges gap integrating behavioral science, UX best practices, data storytelling techniques systematic 5-stage process. Think applying rigor use data validation user experience design.","code":"library(bidux) library(dplyr)"},{"path":"https://jrwinget.github.io/bidux/articles/getting-started.html","id":"the-bid-framework-a-data-driven-approach-to-ux","dir":"Articles","previous_headings":"","what":"The BID Framework: A Data-Driven Approach to UX","title":"Getting Started with bidux","text":"BID framework consists 5 sequential stages mirror might approach data analysis project: Interpret User’s Need - Like defining research question understanding data Notice Problem - Like identifying data quality issues analytical bottlenecks Anticipate User Behavior - Like checking statistical biases skew results Structure Dashboard - Like choosing right visualization model architecture Validate & Empower User - Like testing model ensuring stakeholders can act results Key insight data professionals: Just wouldn’t skip exploratory data analysis modeling, don’t skip understanding user cognition building interfaces. stage builds insights previous stages, creating systematic approach dashboard design ’s evidence-based user-centered.","code":""},{"path":"https://jrwinget.github.io/bidux/articles/getting-started.html","id":"exploring-the-concept-dictionary","dir":"Articles","previous_headings":"","what":"Exploring the Concept Dictionary","title":"Getting Started with bidux","text":"BID framework built established science design principles. explore concepts, use bid_concepts() list available concepts, search specific terms: detailed information specific concept, use bid_concept(): bid_concept() function supports case-insensitive partial matching: can also explore concepts new BID framework:","code":"# List all concepts all_concepts <- bid_concepts() head(select(all_concepts, concept, category, description), 3)  # Search for specific concepts bid_concepts(\"cognitive\") |>   select(concept, description, implementation_tips) # Get information about a specific concept bid_concept(\"Processing Fluency\") |>   select(concept, description, implementation_tips) # Case-insensitive matching bid_concept(\"hick's law\") |>   select(concept, description)  # Partial matching bid_concept(\"proximity\") |>   select(concept, description) # Explore new concepts from user-centric design bid_concepts(\"visual hierarchy|breathable|gherkin\") |>   select(concept, description)"},{"path":"https://jrwinget.github.io/bidux/articles/getting-started.html","id":"documenting-a-dashboard-project-with-bid","dir":"Articles","previous_headings":"","what":"Documenting a Dashboard Project with BID","title":"Getting Started with bidux","text":"Let’s walk complete example using BID framework document improve dashboard project.","code":""},{"path":"https://jrwinget.github.io/bidux/articles/getting-started.html","id":"stage-1-interpret-the-users-need","dir":"Articles","previous_headings":"Documenting a Dashboard Project with BID","what":"Stage 1: Interpret the User’s Need","title":"Getting Started with bidux","text":"Start clarifying central question dashboard needs answer structure data story: function evaluates data story elements provides suggestions improvement (suggestions column). ’ve also added user personas better target design.","code":"# Document the user's need interpret_result <- bid_interpret(   central_question = \"How are our marketing campaigns performing across different channels?\",   data_story = list(     hook = \"Recent campaign performance varies significantly across channels\",     context = \"We've invested in 6 different marketing channels over the past quarter\",     tension = \"ROI metrics show inconsistent results, with some channels underperforming\",     resolution = \"Identify top-performing channels and key performance drivers\",     audience = \"Marketing team and executives\",     metrics = c(\"Channel ROI\", \"Conversion Rate\", \"Cost per Acquisition\"),     visual_approach = \"Comparative analysis with historical benchmarks\"   ),   user_personas = list(     list(       name = \"Marketing Manager\",       goals = \"Optimize marketing spend across channels\",       pain_points = \"Difficulty comparing performance across different metrics\",       technical_level = \"Intermediate\"     ),     list(       name = \"CMO\",       goals = \"Strategic oversight of marketing effectiveness\",       pain_points = \"Needs high-level insights without technical details\",       technical_level = \"Basic\"     )   ) )  interpret_result |>   select(central_question, hook, tension, resolution)"},{"path":"https://jrwinget.github.io/bidux/articles/getting-started.html","id":"stage-2-notice-the-problem","dir":"Articles","previous_headings":"Documenting a Dashboard Project with BID","what":"Stage 2: Notice the Problem","title":"Getting Started with bidux","text":"Now identify specific problems users encountering dashboard interface: Notice function automatically selected appropriate theory based problem description. also provides suggestions addressing cognitive load can access suggestions column.","code":"# Document the problem notice_result <- bid_notice(   previous_stage = interpret_result,   problem = \"Users are overwhelmed by too many filter options and struggle to find relevant insights\",   evidence = \"User testing shows 65% of first-time users fail to complete their intended task within 2 minutes\" )  notice_result |>   select(problem, theory, evidence)"},{"path":"https://jrwinget.github.io/bidux/articles/getting-started.html","id":"stage-3-anticipate-user-behavior","dir":"Articles","previous_headings":"Documenting a Dashboard Project with BID","what":"Stage 3: Anticipate User Behavior","title":"Getting Started with bidux","text":"Next, identify potential cognitive biases might affect users interpret dashboard: function evaluates bias mitigation strategies, providing implementation suggestions.","code":"# Document bias mitigation strategies anticipate_result <- bid_anticipate(   previous_stage = notice_result,   bias_mitigations = list(     anchoring = \"Include previous period performance as reference points\",     framing = \"Provide toggle between ROI improvement vs. ROI gap views\",     confirmation_bias = \"Highlight unexpected patterns that contradict common assumptions\"   ) )  anticipate_result |>   select(bias_mitigations)"},{"path":"https://jrwinget.github.io/bidux/articles/getting-started.html","id":"stage-4-structure-the-dashboard","dir":"Articles","previous_headings":"Documenting a Dashboard Project with BID","what":"Stage 4: Structure the Dashboard","title":"Getting Started with bidux","text":"Now determine layout key design principles implement: function automatically selects appropriate layout based content previous stages provides ranked, actionable suggestions organized UX concepts. layout selection transparent clear rationale particular layout chosen.","code":"# Document the dashboard structure structure_result <- bid_structure(previous_stage = anticipate_result)  structure_result |>   select(layout, concepts, suggestions)"},{"path":"https://jrwinget.github.io/bidux/articles/getting-started.html","id":"stage-5-validate-empower-the-user","dir":"Articles","previous_headings":"Documenting a Dashboard Project with BID","what":"Stage 5: Validate & Empower the User","title":"Getting Started with bidux","text":"Finally, document ’ll ensure users leave clear insights ability collaborate: validate function acknowledges implementation Peak-End Rule next steps provides suggestions refining approach.","code":"# Document validation approach validate_result <- bid_validate(   previous_stage = structure_result,   summary_panel = \"Executive summary highlighting top and bottom performers, key trends, and recommended actions for the next marketing cycle\",   collaboration = \"Team annotation capability allowing marketing team members to add context and insights to specific data points\",   next_steps = c(     \"Review performance of bottom 2 channels\",     \"Increase budget for top-performing channel\",     \"Schedule team meeting to discuss optimization strategy\",     \"Export findings for quarterly marketing review\"   ) )  validate_result |>   select(summary_panel, collaboration, next_steps)"},{"path":"https://jrwinget.github.io/bidux/articles/getting-started.html","id":"generating-implementation-suggestions","dir":"Articles","previous_headings":"","what":"Generating Implementation Suggestions","title":"Getting Started with bidux","text":"’ve documented dashboard BID framework, can generate concrete suggestions implementing principles using common R packages:","code":"# Get {bslib} component suggestions bid_suggest_components(structure_result, package = \"bslib\") |>   select(component, description) |>   head(2)  # Get {reactable} suggestions for showing data bid_suggest_components(structure_result, package = \"reactable\") |>   select(component, description) |>   head(2)  # Get suggestions from all supported packages all_suggestions <- bid_suggest_components(validate_result, package = \"all\") table(all_suggestions$package)"},{"path":"https://jrwinget.github.io/bidux/articles/getting-started.html","id":"creating-a-complete-bid-report","dir":"Articles","previous_headings":"","what":"Creating a Complete BID Report","title":"Getting Started with bidux","text":"can generate complete report summarizing stages BID process:","code":"# Generate a text report (default) report <- bid_report(validate_result) cat(report)  # Generate an HTML report html_report <- bid_report(validate_result, format = \"html\")  # Generate a markdown report md_report <- bid_report(validate_result, format = \"markdown\")"},{"path":"https://jrwinget.github.io/bidux/articles/getting-started.html","id":"using-bid-in-your-shiny-development-workflow","dir":"Articles","previous_headings":"","what":"Using BID in Your Shiny Development Workflow","title":"Getting Started with bidux","text":"’s integrate BID framework development process: Planning Phase Use BID framework document design decisions writing code Identify key user needs potential friction points Define user personas guide design choices Consider accessibility requirements early Development Phase Reference BID documentation implement appropriate UI patterns Use bid_suggest_components() get package-specific implementation ideas Implement bias mitigation strategies interface Build progressive disclosure complex interfaces Testing Phase Validate implementation addresses issues identified Stage 1 Test actual users representing defined personas Specifically test bias mitigation strategies accessibility features Gather feedback effectiveness validation approach Iteration Phase Update BID documentation refine dashboard Use bid_report() maintain comprehensive documentation Focus improvements areas greatest impact user experience Continue apply BID principles add new features","code":""},{"path":"https://jrwinget.github.io/bidux/articles/getting-started.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Getting Started with bidux","text":"bidux package makes easier apply behavioral science UX best practices Shiny dashboards. following 5-stage BID framework, can create applications intuitive, engaging, effective users. Future versions bidux include: User stories workflow integration following Gherkin method Enhanced design patterns library Accessibility framework integration WCAG guidelines UI component library implementing BID principles Testing validation tools dashboard evaluation","code":""},{"path":"https://jrwinget.github.io/bidux/articles/getting-started.html","id":"integrating-telemetry-data-new-in-0-3-1","dir":"Articles","previous_headings":"","what":"Integrating Telemetry Data (New in 0.3.1)","title":"Getting Started with bidux","text":"telemetry data user interactions, bidux can help transform actionable BID insights: hybrid object returned bid_ingest_telemetry() maintains backward compatibility providing enhanced functionality: Visit github.com/jrwinget/bidux updates contribute package development. welcome feedback suggestions help make BID framework even effective Shiny developers. Remember good dashboard design iterative process benefits continuous user feedback. BID framework provides structure process ensuring common principles incorporated throughout development workflow.","code":"# Modern telemetry workflow (0.3.1+) # Process telemetry data into organized issues issues <- bid_telemetry(\"path/to/telemetry.sqlite\")  # Triage and review issues print(issues)  # Shows organized issue summary  # Convert high-priority issues to Notice stages critical_issues <- issues |>   filter(severity == \"critical\") |>   slice_head(n = 3)  notices <- bid_notices(   issues = critical_issues,   previous_stage = interpret_result )  # Extract telemetry flags for structure optimization flags <- bid_flags(issues)  # Use flags to inform layout selection structure_result <- bid_structure(   previous_stage = anticipate_result,   telemetry_flags = flags ) # Legacy approach still works legacy_notices <- bid_ingest_telemetry(\"path/to/telemetry.sqlite\") length(legacy_notices)  # Behaves like list of Notice stages  # But now also provides enhanced features as_tibble(legacy_notices)  # Tidy issues view bid_flags(legacy_notices)  # Extract global flags"},{"path":"https://jrwinget.github.io/bidux/articles/introduction-to-bid.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Introduction to the BID Framework","text":"Behavioral Insight Design (BID) framework guides developers integrating behavioral science UI/UX design. helps understanding behavioral tendencies, psychological principles, common biases affect user interactions. five stages BID framework : 1. Interpret User’s Need: Clarify core question build data narrative. 2. Notice Problem: Identify friction points areas high cognitive load. 3. Anticipate User Behavior: Mitigate biases anchoring framing. 4. Structure Dashboard: Organize layout design enhance usability. 5. Validate & Empower User: Summarize insights facilitate collaborative decision-making. vignette introduces core ideas behind stage interact create effective, bias-aware dashboards. Visit github.com/jrwinget/bid-framework resources information BID framework.","code":""},{"path":"https://jrwinget.github.io/bidux/articles/practical-examples.html","id":"introduction-real-dashboard-problems-real-solutions","dir":"Articles","previous_headings":"","what":"Introduction: Real Dashboard Problems, Real Solutions","title":"Practical Examples: Before and After Dashboard Transformations","text":"vignette walks common dashboard scenarios data scientists Shiny developers encounter, showing BID framework transforms user experience maintaining analytical rigor. example includes: : technical-focused approach Problem: users actually experience BID Solution: Systematic application behavioral science : Improved user experience code examples","code":""},{"path":[]},{"path":"https://jrwinget.github.io/bidux/articles/practical-examples.html","id":"the-scenario","dir":"Articles","previous_headings":"Example 1: The “Everything Dashboard” Problem","what":"The Scenario","title":"Practical Examples: Before and After Dashboard Transformations","text":"’re data scientist SaaS company. stakeholders asked “dashboard shows everything user engagement.” thorough, built exactly .","code":""},{"path":"https://jrwinget.github.io/bidux/articles/practical-examples.html","id":"before-technical-excellence-user-confusion","dir":"Articles","previous_headings":"Example 1: The “Everything Dashboard” Problem","what":"Before: Technical Excellence, User Confusion","title":"Practical Examples: Before and After Dashboard Transformations","text":"","code":"# The \"show everything\" approach ui_before <- navbarPage(   \"User Engagement Analytics\",    tabPanel(     \"Overview\",     fluidRow(       # 12 KPIs across the top       column(2, valueBoxOutput(\"dau\")),       column(2, valueBoxOutput(\"wau\")),       column(2, valueBoxOutput(\"mau\")),       column(2, valueBoxOutput(\"retention\")),       column(2, valueBoxOutput(\"churn\")),       column(2, valueBoxOutput(\"ltv\"))     ),     fluidRow(       column(2, valueBoxOutput(\"sessions\")),       column(2, valueBoxOutput(\"session_duration\")),       column(2, valueBoxOutput(\"pages_per_session\")),       column(2, valueBoxOutput(\"bounce_rate\")),       column(2, valueBoxOutput(\"conversion\")),       column(2, valueBoxOutput(\"revenue\"))     ),      # Multiple complex charts     fluidRow(       column(6, plotOutput(\"engagement_trend\", height = \"400px\")),       column(6, plotOutput(\"cohort_analysis\", height = \"400px\"))     ),     fluidRow(       column(4, plotOutput(\"funnel_chart\")),       column(4, plotOutput(\"retention_curve\")),       column(4, plotOutput(\"ltv_distribution\"))     )   ),    tabPanel(\"Segments\", \"More detailed segmentation...\"),   tabPanel(\"Cohorts\", \"Cohort analysis details...\"),   tabPanel(\"Funnels\", \"Conversion funnel details...\"),   tabPanel(\"Revenue\", \"Revenue analytics...\"),   tabPanel(\"Product\", \"Product usage analytics...\") )"},{"path":"https://jrwinget.github.io/bidux/articles/practical-examples.html","id":"the-problem-cognitive-overload","dir":"Articles","previous_headings":"Example 1: The “Everything Dashboard” Problem","what":"The Problem: Cognitive Overload","title":"Practical Examples: Before and After Dashboard Transformations","text":"User feedback: “can’t find ’m looking ” “’s overwhelming” ’s happening: - 12+ metrics compete attention simultaneously - clear hierarchy importance - Users don’t know look first - Analysis paralysis many options","code":""},{"path":"https://jrwinget.github.io/bidux/articles/practical-examples.html","id":"bid-framework-solution","dir":"Articles","previous_headings":"Example 1: The “Everything Dashboard” Problem","what":"BID Framework Solution","title":"Practical Examples: Before and After Dashboard Transformations","text":"Let’s apply systematic BID approach:","code":"# Stage 1: Interpret - Understand the real user need interpret_result <- bid_interpret(   central_question = \"How is our user engagement trending, and what needs attention?\",   data_story = list(     hook = \"User engagement metrics are spread across multiple systems\",     context = \"Leadership needs quick insights for weekly business reviews\",     tension = \"Current dashboards take too long to interpret\",     resolution = \"Provide immediate key insights with drill-down capability\"   ),   user_personas = list(     list(       name = \"Sarah (Product Manager)\",       goals = \"Quickly spot concerning trends and dive deeper when needed\",       pain_points = \"Too many metrics to process in limited meeting time\",       technical_level = \"Intermediate\"     ),     list(       name = \"Mike (Executive)\",       goals = \"Understand overall health at a glance\",       pain_points = \"Gets lost in details when just needs the big picture\",       technical_level = \"Basic\"     )   ) )  # Stage 2: Notice - Identify the specific problem notice_result <- bid_notice(   previous_stage = interpret_result,   problem = \"Users experience information overload with 12+ simultaneous metrics\",   evidence = \"User interviews show 80% struggle to prioritize information, average time-to-insight is 5+ minutes\" )  # Stage 3: Anticipate - Consider cognitive biases anticipate_result <- bid_anticipate(   previous_stage = notice_result,   bias_mitigations = list(     attention_bias = \"Use size and color to direct focus to most important metrics first\",     choice_overload = \"Implement progressive disclosure - show key metrics, hide advanced analytics until requested\",     anchoring = \"Lead with the most important business metric to set proper context\"   ) )  # Stage 4: Structure - Organize for cognitive efficiency structure_result <- bid_structure(previous_stage = anticipate_result)  # Stage 5: Validate - Ensure actionable insights validate_result <- bid_validate(   previous_stage = structure_result,   summary_panel = \"Executive summary highlighting key trends and required actions\",   collaboration = \"Enable commenting and sharing of specific insights\",   next_steps = c(     \"Focus on the primary engagement metric trend\",     \"Investigate any red-flag indicators\",     \"Use drill-down for detailed analysis only when needed\"   ) )"},{"path":"https://jrwinget.github.io/bidux/articles/practical-examples.html","id":"after-cognitively-optimized-dashboard","dir":"Articles","previous_headings":"Example 1: The “Everything Dashboard” Problem","what":"After: Cognitively Optimized Dashboard","title":"Practical Examples: Before and After Dashboard Transformations","text":"Key improvements: Reduced cognitive load: 1 primary score vs. 12 competing metrics Clear hierarchy: important information first Progressive disclosure: Details available overwhelming Actionable insights: Clear focus areas next steps","code":"# The BID-informed approach: Progressive disclosure with clear hierarchy ui_after <- page_fillable(   theme = bs_theme(version = 5),    # Primary insight first (addresses anchoring bias)   layout_columns(     col_widths = c(8, 4),      # Key insight panel     card(       card_header(         \"📈 Engagement Health Score\",         class = \"bg-primary text-white\"       ),       layout_columns(         value_box(           title = \"Overall Score\",           value = \"87/100\",           showcase = bs_icon(\"speedometer2\", size = \"2em\"),           theme = \"success\",           p(             \"↑ 5 points vs. last month\",             style = \"font-size: 0.9em; color: #666;\"           )         ),         div(           h5(\"Key Drivers\", style = \"margin-bottom: 10px;\"),           tags$ul(             tags$li(\"DAU trending up (+12%)\"),             tags$li(\"Retention stable (73%)\"),             tags$li(\"⚠️ Session duration declining (-8%)\")           )         )       )     ),      # Action panel     card(       card_header(\"🎯 Focus Areas\"),       div(         tags$div(           class = \"alert alert-warning\",           tags$strong(\"Attention needed:\"),           br(),           \"Session duration declining. Investigate user experience.\"         ),         actionButton(           \"investigate_sessions\",           \"Investigate Session Trends\",           class = \"btn btn-warning btn-sm\"         )       )     )   ),    # Secondary metrics (progressive disclosure)   card(     card_header(       div(         style = \"display: flex; justify-content: space-between; align-items: center;\",         span(\"📊 Detailed Metrics\"),         actionButton(           \"toggle_details\",           \"Show Details\",           class = \"btn btn-outline-secondary btn-sm\"         )       )     ),      # Hidden by default, shown on demand     conditionalPanel(       condition = \"input.toggle_details % 2 == 1\",       layout_columns(         col_widths = c(3, 3, 3, 3),         value_box(\"DAU\", \"45.2K\", icon = \"people\"),         value_box(\"Retention\", \"73%\", icon = \"arrow-clockwise\"),         value_box(\"Sessions\", \"2.1M\", icon = \"activity\"),         value_box(\"Revenue\", \"$127K\", icon = \"currency-dollar\")       ),        # Charts appear only when details are requested       layout_columns(         col_widths = c(6, 6),         card(           card_header(\"Engagement Trend\"),           plotOutput(\"engagement_trend_focused\", height = \"300px\")         ),         card(           card_header(\"Key Drivers Analysis\"),           plotOutput(\"drivers_analysis\", height = \"300px\")         )       )     )   ) )"},{"path":[]},{"path":"https://jrwinget.github.io/bidux/articles/practical-examples.html","id":"the-scenario-1","dir":"Articles","previous_headings":"Example 2: The “Data Dump” Report Problem","what":"The Scenario","title":"Practical Examples: Before and After Dashboard Transformations","text":"’ve built comprehensive sales dashboard shows everything sales team possibly need. ’s technically perfect nobody uses .","code":""},{"path":"https://jrwinget.github.io/bidux/articles/practical-examples.html","id":"before-all-data-no-insights","dir":"Articles","previous_headings":"Example 2: The “Data Dump” Report Problem","what":"Before: All Data, No Insights","title":"Practical Examples: Before and After Dashboard Transformations","text":"","code":"ui_sales_before <- fluidPage(   titlePanel(\"Q4 Sales Performance Dashboard\"),    # Massive filter section   sidebarLayout(     sidebarPanel(       dateRangeInput(\"date_range\", \"Date Range\"),       selectInput(\"region\", \"Region\", choices = regions, multiple = TRUE),       selectInput(         \"product\",         \"Product Line\",         choices = products,         multiple = TRUE       ),       selectInput(\"salesperson\", \"Sales Rep\", choices = reps, multiple = TRUE),       selectInput(         \"customer_segment\",         \"Customer Segment\",         choices = segments,         multiple = TRUE       ),       selectInput(         \"deal_size\",         \"Deal Size\",         choices = deal_sizes,         multiple = TRUE       ),       checkboxGroupInput(\"deal_stage\", \"Deal Stages\", choices = stages),       numericInput(\"min_value\", \"Minimum Deal Value\", value = 0),       numericInput(\"max_value\", \"Maximum Deal Value\", value = 1000000),       radioButtons(\"currency\", \"Currency\", choices = c(\"USD\", \"EUR\", \"GBP\")),       actionButton(\"apply_filters\", \"Apply Filters\", class = \"btn-primary\")     ),      mainPanel(       tabsetPanel(         tabPanel(           \"Summary\",           fluidRow(             column(3, valueBoxOutput(\"total_revenue\")),             column(3, valueBoxOutput(\"deal_count\")),             column(3, valueBoxOutput(\"avg_deal_size\")),             column(3, valueBoxOutput(\"win_rate\"))           ),           plotOutput(\"revenue_chart\", height = \"600px\")         ),         tabPanel(\"By Region\", dataTableOutput(\"region_table\")),         tabPanel(\"By Product\", dataTableOutput(\"product_table\")),         tabPanel(\"By Rep\", dataTableOutput(\"rep_table\")),         tabPanel(\"Pipeline\", dataTableOutput(\"pipeline_table\")),         tabPanel(\"Forecasting\", plotOutput(\"forecast_chart\"))       )     )   ) )"},{"path":"https://jrwinget.github.io/bidux/articles/practical-examples.html","id":"the-problem-analysis-paralysis","dir":"Articles","previous_headings":"Example 2: The “Data Dump” Report Problem","what":"The Problem: Analysis Paralysis","title":"Practical Examples: Before and After Dashboard Transformations","text":"User feedback: “Takes forever find need” “just export Excel instead”","code":""},{"path":"https://jrwinget.github.io/bidux/articles/practical-examples.html","id":"bid-solution-user-centric-design","dir":"Articles","previous_headings":"Example 2: The “Data Dump” Report Problem","what":"BID Solution: User-Centric Design","title":"Practical Examples: Before and After Dashboard Transformations","text":"","code":"# Apply BID framework focusing on sales manager workflow sales_interpret <- bid_interpret(   central_question = \"What deals need my attention this week?\",   data_story = list(     hook = \"Sales managers spend 2+ hours weekly creating status reports\",     context = \"They need to quickly identify at-risk deals and top opportunities\",     tension = \"Current data requires extensive filtering and analysis\",     resolution = \"Provide intelligent prioritization with drill-down capability\"   ),   user_personas = list(     list(       name = \"Jennifer (Regional Sales Manager)\",       goals = \"Identify at-risk deals, spot top opportunities, prepare for team meetings\",       pain_points = \"Too much filtering required to find actionable insights\",       technical_level = \"Intermediate\"     )   ) )  sales_notice <- bid_notice(   previous_stage = sales_interpret,   problem = \"Sales managers overwhelmed by filter complexity and data volume\",   evidence = \"Users spend average 15 minutes per session just setting up filters, 40% abandon before getting insights\" )  sales_anticipate <- bid_anticipate(   previous_stage = sales_notice,   bias_mitigations = list(     recency_bias = \"Show deals by urgency, not just recent activity\",     confirmation_bias = \"Highlight both positive and concerning trends\",     choice_overload = \"Limit initial choices to most common use cases\"   ) )  sales_structure <- bid_structure(previous_stage = sales_anticipate)"},{"path":"https://jrwinget.github.io/bidux/articles/practical-examples.html","id":"after-insight-driven-sales-dashboard","dir":"Articles","previous_headings":"Example 2: The “Data Dump” Report Problem","what":"After: Insight-Driven Sales Dashboard","title":"Practical Examples: Before and After Dashboard Transformations","text":"Key improvements: Intelligent prioritization: Shows needs attention first Reduced choices: Smart defaults instead overwhelming filters Action-oriented: Clear next steps, just data Progressive complexity: Simple view first, details demand","code":"ui_sales_after <- page_navbar(   title = \"Sales Command Center\",   theme = bs_theme(version = 5, preset = \"bootstrap\"),    nav_panel(     \"🚨 Needs Attention\",     layout_columns(       # Immediate action items       card(         card_header(           \"🔥 Urgent - Deals at Risk\",           class = \"bg-danger text-white\"         ),         card_body(           p(\"3 deals worth $340K need immediate attention\"),           layout_columns(             col_widths = c(6, 6),             div(               h6(\"MegaCorp Deal - $180K\"),               p(                 \"❌ No activity in 14 days\",                 style = \"color: #dc3545; margin: 0;\"               ),               p(\"Owner: Mike Chen\", style = \"font-size: 0.9em; color: #666;\")             ),             div(               actionButton(                 \"view_megacorp\",                 \"View Details\",                 class = \"btn btn-sm btn-outline-danger\"               ),               actionButton(                 \"contact_mike\",                 \"Contact Mike\",                 class = \"btn btn-sm btn-danger\"               )             )           )         )       ),        # Opportunities       card(         card_header(\"⭐ Hot Opportunities\", class = \"bg-success text-white\"),         card_body(           p(\"2 deals worth $280K ready to close\"),           actionButton(             \"view_opportunities\",             \"Review Opportunities\",             class = \"btn btn-success btn-sm\"           )         )       )     ),      # Smart filters (only show when needed)     conditionalPanel(       condition = \"input.show_filters\",       card(         card_header(\"🔍 Refine Focus\"),         layout_columns(           col_widths = c(3, 3, 3, 3),           selectInput(\"quick_region\", \"Region\", choices = c(\"All\", regions)),           selectInput(             \"quick_timeframe\",             \"Timeframe\",             choices = c(\"This Week\", \"This Month\", \"This Quarter\")           ),           selectInput(             \"quick_value\",             \"Deal Size\",             choices = c(\"All\", \">$50K\", \">$100K\", \">$250K\")           ),           actionButton(             \"show_all_filters\",             \"More Filters...\",             class = \"btn btn-outline-secondary btn-sm\"           )         )       )     )   ),    nav_panel(     \"📊 Performance\",     layout_columns(       col_widths = c(4, 4, 4),       value_box(         \"This Month\",         \"$1.2M\",         \"vs. $980K target (+22%)\",         showcase = bs_icon(\"graph-up\"),         theme = \"success\"       ),       value_box(         \"Pipeline Health\",         \"Strong\",         \"3.2x coverage ratio\",         showcase = bs_icon(\"speedometer2\"),         theme = \"info\"       ),       value_box(         \"Team Status\",         \"On Track\",         \"8 of 10 reps hitting quota\",         showcase = bs_icon(\"people\"),         theme = \"success\"       )     ),      card(       card_header(\"📈 Key Trends\"),       plotOutput(\"performance_trends\", height = \"400px\")     )   ),    nav_panel(     \"🎯 Team Focus\",     # Team-specific insights     p(\"Individual rep performance and coaching opportunities...\")   ) )"},{"path":[]},{"path":"https://jrwinget.github.io/bidux/articles/practical-examples.html","id":"the-scenario-2","dir":"Articles","previous_headings":"Example 3: The “Technical Metrics” Challenge","what":"The Scenario","title":"Practical Examples: Before and After Dashboard Transformations","text":"’re monitoring application performance detailed technical metrics. dashboard perfect engineers executives get lost.","code":""},{"path":"https://jrwinget.github.io/bidux/articles/practical-examples.html","id":"bid-solution-audience-aware-design","dir":"Articles","previous_headings":"Example 3: The “Technical Metrics” Challenge","what":"BID Solution: Audience-Aware Design","title":"Practical Examples: Before and After Dashboard Transformations","text":"","code":"# Interpret stage: Understand different user needs technical_interpret <- bid_interpret(   central_question = \"How is our application performing and what needs attention?\",   user_personas = list(     list(       name = \"DevOps Engineer\",       goals = \"Identify performance bottlenecks and system issues\",       pain_points = \"Needs detailed metrics and historical trends\",       technical_level = \"Expert\"     ),     list(       name = \"Engineering Manager\",       goals = \"Understand overall system health and team priorities\",       pain_points = \"Needs summary view but ability to drill down\",       technical_level = \"Advanced\"     ),     list(       name = \"Executive\",       goals = \"Understand business impact of technical issues\",       pain_points = \"Technical details are overwhelming\",       technical_level = \"Basic\"     )   ) )"},{"path":"https://jrwinget.github.io/bidux/articles/practical-examples.html","id":"after-multi-audience-technical-dashboard","dir":"Articles","previous_headings":"Example 3: The “Technical Metrics” Challenge","what":"After: Multi-Audience Technical Dashboard","title":"Practical Examples: Before and After Dashboard Transformations","text":"Key insight: data, different presentations based user cognitive needs technical expertise.","code":"# Adaptive interface based on user role ui_technical_after <- page_sidebar(   sidebar = sidebar(     # Role selector affects entire interface     radioButtons(       \"user_role\",       \"View Mode:\",       choices = c(         \"Executive Summary\" = \"executive\",         \"Management View\" = \"manager\",         \"Technical Details\" = \"engineer\"       ),       selected = \"executive\"     )   ),    # Executive view: Business impact focus   conditionalPanel(     condition = \"input.user_role == 'executive'\",     h2(\"🟢 System Health: Good\"),      layout_columns(       col_widths = c(6, 6),       card(         card_header(\"Business Impact\"),         value_box(           \"Service Availability\",           \"99.8%\",           \"Within SLA targets\",           theme = \"success\"         ),         value_box(           \"User Experience\",           \"Good\",           \"Page loads < 2 seconds\",           theme = \"success\"         )       ),       card(         card_header(\"Action Items\"),         div(           class = \"alert alert-info\",           \"✅ No critical issues requiring immediate attention\"         ),         p(\"Next scheduled maintenance: Friday 2am\")       )     )   ),    # Manager view: Balance of summary and detail   conditionalPanel(     condition = \"input.user_role == 'manager'\",     layout_columns(       col_widths = c(3, 3, 3, 3),       value_box(\"Uptime\", \"99.8%\", theme = \"success\"),       value_box(\"Response Time\", \"1.2s\", theme = \"success\"),       value_box(\"Error Rate\", \"0.02%\", theme = \"success\"),       value_box(\"Throughput\", \"15K/min\", theme = \"info\")     ),      card(       card_header(\"System Trends\"),       plotOutput(\"system_trends\", height = \"300px\")     ),      card(       card_header(\"Team Alerts\"),       p(\"2 minor alerts resolved this week\"),       actionButton(\"view_alerts\", \"View Alert History\")     )   ),    # Engineer view: Full technical detail   conditionalPanel(     condition = \"input.user_role == 'engineer'\",     # Comprehensive technical metrics     tabsetPanel(       tabPanel(\"Performance\", \"Detailed performance metrics...\"),       tabPanel(\"Infrastructure\", \"Server and database metrics...\"),       tabPanel(\"Alerts\", \"Full alert history and configuration...\"),       tabPanel(\"Logs\", \"System logs and debugging info...\")     )   ) )"},{"path":[]},{"path":"https://jrwinget.github.io/bidux/articles/practical-examples.html","id":"start-with-user-intent-not-data-structure","dir":"Articles","previous_headings":"Best Practices Summary","what":"1. Start with User Intent, Not Data Structure","title":"Practical Examples: Before and After Dashboard Transformations","text":"","code":"# ❌ Data-structure driven ui_wrong <- tabPanel(   \"Database Tables\",   tabPanel(\"Users Table\", dataTableOutput(\"users\")),   tabPanel(\"Orders Table\", dataTableOutput(\"orders\")),   tabPanel(\"Products Table\", dataTableOutput(\"products\")) )  # ✅ User-intent driven ui_right <- tabPanel(   \"Customer Insights\",   card_body(     h4(\"What customers need your attention?\"),     # Show actionable customer insights   ) )"},{"path":"https://jrwinget.github.io/bidux/articles/practical-examples.html","id":"progressive-disclosure-over-information-density","dir":"Articles","previous_headings":"Best Practices Summary","what":"2. Progressive Disclosure Over Information Density","title":"Practical Examples: Before and After Dashboard Transformations","text":"","code":"# ❌ Everything visible at once ui_dense <- fluidRow(   column(2, metric1),   column(2, metric2),   column(2, metric3),   column(2, metric4),   column(2, metric5),   column(2, metric6) )  # ✅ Key information first, details on demand ui_progressive <- div(   value_box(\"Key Metric\", \"Primary value\"),   actionButton(\"show_details\", \"View Supporting Metrics\"),   conditionalPanel(     condition = \"input.show_details\",     # Additional metrics here   ) )"},{"path":"https://jrwinget.github.io/bidux/articles/practical-examples.html","id":"context-over-raw-numbers","dir":"Articles","previous_headings":"Best Practices Summary","what":"3. Context Over Raw Numbers","title":"Practical Examples: Before and After Dashboard Transformations","text":"","code":"# ❌ Raw number without meaning valueBox(\"Revenue\", \"$127,432\")  # ✅ Number with context and meaning value_box(   \"Revenue Progress\",   \"$127K\",   \"22% above $104K target\",   showcase = bs_icon(\"graph-up\"),   theme = \"success\" )"},{"path":"https://jrwinget.github.io/bidux/articles/practical-examples.html","id":"next-steps","dir":"Articles","previous_headings":"","what":"Next Steps","title":"Practical Examples: Before and After Dashboard Transformations","text":"Pick one existing dashboard apply BID framework Start Stage 1 (Interpret) - really understand users’ goals Test real users - measure time--insight task completion Iterate systematically - use experimental rigor apply data analysis Remember: goal isn’t become UX expert, ’s apply analytical thinking user experience create effective data products. Use bid_concepts() explore behavioral science principles, check behavioral-science-primer vignette deeper understanding psychological principles behind improvements.","code":""},{"path":"https://jrwinget.github.io/bidux/articles/telemetry-integration.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Integrating shiny.telemetry with bidux","text":"bidux package provides powerful tools analyze real user behavior data shiny.telemetry automatically identify UX friction points. Think /B testing UX design—can measure impact design changes user behavior rigor apply data analysis. power telemetry + BID: Instead guessing users struggle , can systematically identify friction points real usage data, apply behavioral science principles fix . creates powerful feedback loop actual usage patterns drive design improvements BID framework. New 0.3.1: Enhanced telemetry workflow hybrid objects streamlined API better integration tidy data workflows.","code":""},{"path":"https://jrwinget.github.io/bidux/articles/telemetry-integration.html","id":"modern-telemetry-api-0-3-1","dir":"Articles","previous_headings":"Overview","what":"Modern Telemetry API (0.3.1+)","title":"Integrating shiny.telemetry with bidux","text":"new bid_telemetry() function provides clean, tidy approach telemetry analysis:","code":"library(bidux) library(dplyr)  # Modern approach: get tidy issues tibble issues <- bid_telemetry(\"telemetry.sqlite\") print(issues)  # Shows organized issue summary  # Triage critical issues critical <- issues |>   filter(severity == \"critical\") |>   slice_head(n = 3)  # Convert to Notice stages with bridge functions notices <- bid_notices(   issues = critical,   previous_stage = interpret_result )  # Extract telemetry flags for layout optimization flags <- bid_flags(issues) structure_result <- bid_structure(   previous_stage = anticipate_result,   telemetry_flags = flags )"},{"path":"https://jrwinget.github.io/bidux/articles/telemetry-integration.html","id":"legacy-compatibility","dir":"Articles","previous_headings":"Overview","what":"Legacy Compatibility","title":"Integrating shiny.telemetry with bidux","text":"bid_ingest_telemetry() function now returns hybrid object maintains full backward compatibility:","code":"# Legacy approach still works exactly as before legacy_notices <- bid_ingest_telemetry(\"telemetry.sqlite\") length(legacy_notices)  # Behaves like list of Notice stages legacy_notices[[1]]     # Access individual Notice objects  # But now also provides enhanced functionality as_tibble(legacy_notices)  # Get tidy issues view bid_flags(legacy_notices)  # Extract global telemetry flags"},{"path":"https://jrwinget.github.io/bidux/articles/telemetry-integration.html","id":"prerequisites","dir":"Articles","previous_headings":"","what":"Prerequisites","title":"Integrating shiny.telemetry with bidux","text":"First, ensure shiny.telemetry set Shiny application:","code":"library(shiny) library(shiny.telemetry)  # Initialize telemetry telemetry <- Telemetry$new()  ui <- fluidPage(   use_telemetry(), # Add telemetry JavaScript    titlePanel(\"Sales Dashboard\"),   sidebarLayout(     sidebarPanel(       selectInput(         \"region\",         \"Region:\",         choices = c(\"North\", \"South\", \"East\", \"West\")       ),       dateRangeInput(\"date_range\", \"Date Range:\"),       selectInput(         \"product_category\",         \"Product Category:\",         choices = c(\"All\", \"Electronics\", \"Clothing\", \"Food\")       ),       actionButton(\"refresh\", \"Refresh Data\")     ),     mainPanel(       tabsetPanel(         tabPanel(\"Overview\", plotOutput(\"overview_plot\")),         tabPanel(\"Details\", dataTableOutput(\"details_table\")),         tabPanel(\"Settings\", uiOutput(\"settings_ui\"))       )     )   ) )  server <- function(input, output, session) {   # Start telemetry tracking   telemetry$start_session()    # Your app logic here... }  shinyApp(ui, server)"},{"path":"https://jrwinget.github.io/bidux/articles/telemetry-integration.html","id":"analyzing-telemetry-data","dir":"Articles","previous_headings":"","what":"Analyzing Telemetry Data","title":"Integrating shiny.telemetry with bidux","text":"collecting telemetry data users, use bid_ingest_telemetry() identify UX issues:","code":"library(bidux)  # Analyze telemetry from SQLite database (default) issues <- bid_ingest_telemetry(\"telemetry.sqlite\")  # Or from JSON log file issues <- bid_ingest_telemetry(\"telemetry.log\", format = \"json\")  # Review identified issues length(issues) names(issues)"},{"path":"https://jrwinget.github.io/bidux/articles/telemetry-integration.html","id":"understanding-the-analysis","dir":"Articles","previous_headings":"","what":"Understanding the Analysis","title":"Integrating shiny.telemetry with bidux","text":"function analyzes five key friction indicators:","code":""},{"path":"https://jrwinget.github.io/bidux/articles/telemetry-integration.html","id":"unused-or-under-used-inputs","dir":"Articles","previous_headings":"Understanding the Analysis","what":"1. Unused or Under-used Inputs","title":"Integrating shiny.telemetry with bidux","text":"Identifies UI controls users rarely never interact : suggests region filter might : Hidden hard find relevant users’ tasks Confusing intimidating","code":"# Example: Region filter is never used issues$unused_input_region #> BID Framework - Notice Stage #> Problem: Users are not interacting with the 'region' input control #> Theory: Hick's Law (auto-suggested) #> Evidence: Telemetry shows 0 out of 847 sessions where 'region' was changed"},{"path":"https://jrwinget.github.io/bidux/articles/telemetry-integration.html","id":"delayed-first-interactions","dir":"Articles","previous_headings":"Understanding the Analysis","what":"2. Delayed First Interactions","title":"Integrating shiny.telemetry with bidux","text":"Detects users take long start using dashboard: indicates users might : Overwhelmed initial view Unsure start Looking information ’s readily apparent","code":"issues$delayed_interaction #> BID Framework - Notice Stage #> Problem: Users take a long time before making their first interaction with the dashboard #> Theory: Information Scent (auto-suggested) #> Evidence: Median time to first input is 45 seconds, and 10% of sessions had no interactions at all"},{"path":"https://jrwinget.github.io/bidux/articles/telemetry-integration.html","id":"frequent-errors","dir":"Articles","previous_headings":"Understanding the Analysis","what":"3. Frequent Errors","title":"Integrating shiny.telemetry with bidux","text":"Identifies systematic errors disrupt user experience: reveals: Reliability issues specific features Input validation problems Performance bottlenecks","code":"issues$error_1 #> BID Framework - Notice Stage #> Problem: Users encounter errors when using the dashboard #> Theory: Norman's Gulf of Evaluation (auto-suggested) #> Evidence: Error 'Data query failed' occurred 127 times in 15.0% of sessions (in output 'overview_plot'), often after changing 'date_range'"},{"path":"https://jrwinget.github.io/bidux/articles/telemetry-integration.html","id":"navigation-drop-offs","dir":"Articles","previous_headings":"Understanding the Analysis","what":"4. Navigation Drop-offs","title":"Integrating shiny.telemetry with bidux","text":"Finds pages tabs users rarely visit: Low visit rates suggest: Poor information scent Hidden unclear navigation Irrelevant content","code":"issues$navigation_settings_tab #> BID Framework - Notice Stage #> Problem: The 'settings_tab' page/tab is rarely visited by users #> Theory: Information Architecture (auto-suggested) #> Evidence: Only 42 sessions (5.0%) visited 'settings_tab', and 90% of those sessions ended there"},{"path":"https://jrwinget.github.io/bidux/articles/telemetry-integration.html","id":"confusion-patterns","dir":"Articles","previous_headings":"Understanding the Analysis","what":"5. Confusion Patterns","title":"Integrating shiny.telemetry with bidux","text":"Detects rapid repeated changes indicating user confusion: suggests: Unclear feedback values change Unexpected behavior Poor affordances","code":"issues$confusion_date_range #> BID Framework - Notice Stage #> Problem: Users show signs of confusion when interacting with 'date_range' #> Theory: Feedback Loops (auto-suggested) #> Evidence: 8 sessions showed rapid repeated changes (avg 6 changes in 7.5 seconds), suggesting users are unsure about the input's behavior"},{"path":"https://jrwinget.github.io/bidux/articles/telemetry-integration.html","id":"customizing-analysis-thresholds","dir":"Articles","previous_headings":"","what":"Customizing Analysis Thresholds","title":"Integrating shiny.telemetry with bidux","text":"can adjust sensitivity analysis:","code":"issues <- bid_ingest_telemetry(   \"telemetry.sqlite\",   thresholds = list(     unused_input_threshold = 0.1, # Flag if <10% of sessions use input     delay_threshold_seconds = 60, # Flag if >60s before first interaction     error_rate_threshold = 0.05, # Flag if >5% of sessions have errors     navigation_threshold = 0.3, # Flag if <30% visit a page     rapid_change_window = 5, # Look for 5 changes within...     rapid_change_count = 3 # ...3 seconds   ) )"},{"path":"https://jrwinget.github.io/bidux/articles/telemetry-integration.html","id":"bridge-functions-and-sugar-syntax-0-3-1","dir":"Articles","previous_headings":"","what":"Bridge Functions and Sugar Syntax (0.3.1+)","title":"Integrating shiny.telemetry with bidux","text":"new API provides convenient bridge functions connect telemetry issues BID stages:","code":""},{"path":"https://jrwinget.github.io/bidux/articles/telemetry-integration.html","id":"individual-issue-handling","dir":"Articles","previous_headings":"Bridge Functions and Sugar Syntax (0.3.1+)","what":"Individual Issue Handling","title":"Integrating shiny.telemetry with bidux","text":"","code":"# Process a single high-priority issue priority_issue <- issues |>   filter(severity == \"critical\") |>   slice_head(n = 1)  # Create Notice directly from issue notice_result <- bid_notice_issue(   issue = priority_issue,   previous_stage = interpret_result,   override = list(     problem = \"Custom problem description if needed\"   ) )  # Sugar function for quick addressing notice_sugar <- bid_address(   issue = priority_issue,   previous_stage = interpret_result )"},{"path":"https://jrwinget.github.io/bidux/articles/telemetry-integration.html","id":"batch-processing","dir":"Articles","previous_headings":"Bridge Functions and Sugar Syntax (0.3.1+)","what":"Batch Processing","title":"Integrating shiny.telemetry with bidux","text":"","code":"# Process multiple issues at once high_priority <- issues |>   filter(severity %in% c(\"critical\", \"high\"))  # Convert all to Notice stages notice_list <- bid_notices(   issues = high_priority,   previous_stage = interpret_result,   filter = function(x) x$severity == \"critical\"  # Additional filtering )  # Pipeline approach - process first N issues pipeline_notices <- bid_pipeline(   issues = high_priority,   previous_stage = interpret_result,   max = 3  # Limit to 3 most critical issues )"},{"path":"https://jrwinget.github.io/bidux/articles/telemetry-integration.html","id":"telemetry-informed-structure-selection","dir":"Articles","previous_headings":"Bridge Functions and Sugar Syntax (0.3.1+)","what":"Telemetry-Informed Structure Selection","title":"Integrating shiny.telemetry with bidux","text":"","code":"# Extract global flags from telemetry data flags <- bid_flags(issues) #> List includes: has_navigation_issues, high_error_rate, user_confusion_patterns  # Use flags to inform layout selection structure_result <- bid_structure(   previous_stage = anticipate_result,   telemetry_flags = flags  # Influences layout choice and suggestion scoring )  # The layout selection will avoid problematic patterns based on your data # e.g., if flags$has_navigation_issues == TRUE, tabs layout gets lower priority"},{"path":"https://jrwinget.github.io/bidux/articles/telemetry-integration.html","id":"integrating-with-bid-workflow","dir":"Articles","previous_headings":"","what":"Integrating with BID Workflow","title":"Integrating shiny.telemetry with bidux","text":"Use identified issues drive BID process:","code":"# Take the most critical issue critical_issue <- issues$error_1  # Start with interpretation interpret_result <- bid_interpret(   central_question = \"How can we prevent data query errors?\",   data_story = list(     hook = \"15% of users encounter errors\",     context = \"Errors occur after date range changes\",     tension = \"Users lose trust when queries fail\",     resolution = \"Implement robust error handling and loading states\"   ) )  # Notice the specific problem notice_result <- bid_notice(   previous_stage = interpret_result,   problem = critical_issue$problem,   evidence = critical_issue$evidence )  # Anticipate user behavior and biases anticipate_result <- bid_anticipate(   previous_stage = notice_result,   bias_mitigations = list(     anchoring = \"Show loading states to set proper expectations\",     confirmation_bias = \"Display error context to help users understand issues\"   ) )  # Structure improvements structure_result <- bid_structure(   previous_stage = anticipate_result )  # Validate and provide next steps validate_result <- bid_validate(   previous_stage = structure_result,   summary_panel = \"Error handling improvements with clear user feedback\",   next_steps = c(     \"Implement loading states\",     \"Add error context\",     \"Test with users\"   ) )"},{"path":"https://jrwinget.github.io/bidux/articles/telemetry-integration.html","id":"real-world-example-e-commerce-dashboard-optimization","dir":"Articles","previous_headings":"","what":"Real-World Example: E-commerce Dashboard Optimization","title":"Integrating shiny.telemetry with bidux","text":"Let’s walk complete example using telemetry data improve e-commerce dashboard. shows go raw user behavior data concrete UX improvements.","code":""},{"path":"https://jrwinget.github.io/bidux/articles/telemetry-integration.html","id":"the-scenario","dir":"Articles","previous_headings":"Real-World Example: E-commerce Dashboard Optimization","what":"The Scenario","title":"Integrating shiny.telemetry with bidux","text":"’ve built e-commerce analytics dashboard business stakeholders. 3 months production, users complaining ’s “hard use” can’t specific ’s wrong.","code":""},{"path":"https://jrwinget.github.io/bidux/articles/telemetry-integration.html","id":"step-1-diagnose-with-telemetry-data","dir":"Articles","previous_headings":"Real-World Example: E-commerce Dashboard Optimization","what":"Step 1: Diagnose with Telemetry Data","title":"Integrating shiny.telemetry with bidux","text":"","code":"# Analyze 3 months of user behavior data issues <- bid_telemetry(\"ecommerce_dashboard_telemetry.sqlite\")  # Review the systematic analysis print(issues) #> # BID Telemetry Issues: 8 issues identified #> # Severity breakdown: 2 critical, 3 high, 2 medium, 1 low #> # #> # Critical Issues: #> # 1. delayed_interaction: Users take 47 seconds before first interaction #> # 2. unused_input_advanced_filters: Only 3% of users interact with advanced filter panel #> # #> # High Priority Issues: #> # 3. error_data_loading: 23% of sessions encounter \"Data query failed\" error #> # 4. navigation_settings_tab: Only 8% visit settings, 85% of those sessions end there #> # 5. confusion_date_range: Rapid repeated changes suggest user confusion  # Examine the most critical issue in detail critical_issue <- issues |>   filter(severity == \"critical\") |>   slice_head(n = 1)  print(critical_issue$evidence) #> \"Median time to first input is 47 seconds, and 12% of sessions had no interactions at all. #>  This suggests users are overwhelmed by the initial interface or unclear about where to start.\""},{"path":"https://jrwinget.github.io/bidux/articles/telemetry-integration.html","id":"step-2-apply-bid-framework-systematically","dir":"Articles","previous_headings":"Real-World Example: E-commerce Dashboard Optimization","what":"Step 2: Apply BID Framework Systematically","title":"Integrating shiny.telemetry with bidux","text":"","code":"# Start with interpretation of the business context interpret_stage <- bid_interpret(   central_question = \"How can we make e-commerce insights more accessible to busy stakeholders?\",   data_story = list(     hook = \"Business teams struggle to get quick insights from our analytics dashboard\",     context = \"Stakeholders have 10-15 minutes between meetings to check performance\",     tension = \"Current interface requires 47+ seconds just to orient and start using\",     resolution = \"Provide immediate value with progressive disclosure for deeper analysis\"   ),   user_personas = list(     list(       name = \"Marketing Manager\",       goals = \"Quick campaign performance insights\",       pain_points = \"Too much information, unclear where to start\",       technical_level = \"Intermediate\"     ),     list(       name = \"Executive\",       goals = \"High-level business health check\",       pain_points = \"Gets lost in technical details\",       technical_level = \"Basic\"     )   ) )  # Convert telemetry issues to BID Notice stages using bridge functions notice_stages <- bid_notices(   issues = critical_issue,   previous_stage = interpret_stage )  # Apply behavioral science to anticipate user behavior anticipate_stage <- bid_anticipate(   previous_stage = notice_stages[[1]],   bias_mitigations = list(     choice_overload = \"Reduce initial options, use progressive disclosure\",     attention_bias = \"Use visual hierarchy to guide user focus\",     anchoring = \"Lead with most important business metric\"   ) )  # Use telemetry flags to inform structure decisions flags <- bid_flags(issues) structure_stage <- bid_structure(   previous_stage = anticipate_stage,   telemetry_flags = flags  # This influences layout selection )  # Define success criteria and validation approach validate_stage <- bid_validate(   previous_stage = structure_stage,   summary_panel = \"Executive summary with key insights and trend indicators\",   collaboration = \"Enable stakeholders to share insights and add context\",   next_steps = c(     \"Implement simplified landing page with key metrics\",     \"Add progressive disclosure for detailed analytics\",     \"Create role-based views for different user types\",     \"Set up telemetry tracking to measure improvement\"   ) )"},{"path":"https://jrwinget.github.io/bidux/articles/telemetry-integration.html","id":"step-3-implement-evidence-based-improvements","dir":"Articles","previous_headings":"Real-World Example: E-commerce Dashboard Optimization","what":"Step 3: Implement Evidence-Based Improvements","title":"Integrating shiny.telemetry with bidux","text":"","code":"# Before: Information overload (what telemetry revealed users struggled with) ui_before <- dashboardPage(   dashboardHeader(title = \"E-commerce Analytics\"),   dashboardSidebar(     # 15+ filter options immediately visible     selectInput(\"date_range\", \"Date Range\", choices = date_options),     selectInput(\"product_category\", \"Category\", choices = categories, multiple = TRUE),     selectInput(\"channel\", \"Sales Channel\", choices = channels, multiple = TRUE),     selectInput(\"region\", \"Region\", choices = regions, multiple = TRUE),     selectInput(\"customer_segment\", \"Customer Type\", choices = segments, multiple = TRUE),     # ... 10 more filters     actionButton(\"apply_filters\", \"Apply Filters\")   ),   dashboardBody(     # 12 value boxes competing for attention     fluidRow(       valueBoxOutput(\"revenue\"), valueBoxOutput(\"orders\"),       valueBoxOutput(\"aov\"), valueBoxOutput(\"conversion\"),       valueBoxOutput(\"traffic\"), valueBoxOutput(\"bounce_rate\"),       # ... 6 more value boxes     ),     # Multiple complex charts     fluidRow(       plotOutput(\"revenue_trend\"), plotOutput(\"category_performance\"),       plotOutput(\"channel_analysis\"), plotOutput(\"customer_segments\")     )   ) )  # After: BID-informed design addressing telemetry insights ui_after <- page_fillable(   theme = bs_theme(version = 5, preset = \"bootstrap\"),    # Address delayed interaction issue: Immediate value on landing   layout_columns(     col_widths = c(8, 4),      # Primary business health (addresses anchoring bias)     card(       card_header(\"🎯 Business Performance\", class = \"bg-primary text-white\"),       layout_columns(         col_widths = c(6, 6),         value_box(           \"Revenue Today\",           \"$47.2K\",           \"vs. $43.1K yesterday (+9.5%)\",           showcase = bs_icon(\"graph-up\"),           theme = \"success\"         ),         div(           h5(\"Key Insights\", style = \"margin-bottom: 15px;\"),           tags$ul(             tags$li(\"Mobile traffic up 15%\"),             tags$li(\"Electronics category leading\"),             tags$li(\"⚠️ Cart abandonment rate increased\")           ),           actionButton(\"investigate_abandonment\", \"Investigate\",                       class = \"btn btn-warning btn-sm\")         )       )     ),      # Quick actions (addresses choice overload)     card(       card_header(\"⚡ Quick Actions\"),       div(         actionButton(           \"todays_performance\",           \"Today's Performance\",           class = \"btn btn-primary btn-block mb-2\"         ),         actionButton(           \"weekly_trends\",           \"Weekly Trends\",           class = \"btn btn-secondary btn-block mb-2\"         ),         actionButton(           \"campaign_results\",           \"Campaign Results\",           class = \"btn btn-info btn-block mb-2\"         ),         hr(),         p(           \"Need something specific?\",           style = \"font-size: 0.9em; color: #666;\"         ),         actionButton(           \"show_filters\",           \"Custom Analysis\",           class = \"btn btn-outline-secondary btn-sm\"         )       )     )   ),    # Advanced options hidden by default (progressive disclosure)   conditionalPanel(     condition = \"input.show_filters\",     card(       card_header(\"🔍 Custom Analysis\"),       p(\"Filter and explore your data:\", style = \"margin-bottom: 15px;\"),       layout_columns(         col_widths = c(3, 3, 3, 3),         selectInput(           \"time_period\",           \"Time Period\",           choices = c(\"Today\", \"This Week\", \"This Month\"),           selected = \"Today\"         ),         selectInput(           \"focus_area\",           \"Focus Area\",           choices = c(\"Revenue\", \"Traffic\", \"Conversions\", \"Customers\")         ),         selectInput(           \"comparison\",           \"Compare To\",           choices = c(\"Previous Period\", \"Same Period Last Year\", \"Target\")         ),         actionButton(\"apply_custom\", \"Analyze\", class = \"btn btn-primary\")       )     )   ),    # Results area appears based on user choices   div(id = \"results_area\", style = \"margin-top: 20px;\") )"},{"path":"https://jrwinget.github.io/bidux/articles/telemetry-integration.html","id":"step-4-measure-the-impact","dir":"Articles","previous_headings":"Real-World Example: E-commerce Dashboard Optimization","what":"Step 4: Measure the Impact","title":"Integrating shiny.telemetry with bidux","text":"","code":"# After implementing changes, collect new telemetry data issues_after <- bid_telemetry(   \"ecommerce_dashboard_telemetry_after_changes.sqlite\" )  # Compare before/after metrics improvement_metrics <- tibble(   metric = c(     \"Time to first interaction\",     \"Session abandonment rate\",     \"User satisfaction score\",     \"Task completion rate\"   ),   before = c(\"47 seconds\", \"12%\", \"6.2/10\", \"68%\"),   after = c(\"8 seconds\", \"3%\", \"8.1/10\", \"87%\"),   improvement = c(\"-83%\", \"-75%\", \"+31%\", \"+28%\") )  print(improvement_metrics)"},{"path":"https://jrwinget.github.io/bidux/articles/telemetry-integration.html","id":"example-complete-analysis-using-0-3-1-api","dir":"Articles","previous_headings":"","what":"Example: Complete Analysis Using 0.3.1 API","title":"Integrating shiny.telemetry with bidux","text":"’s complete workflow using streamlined modern API:","code":"# 1. Modern telemetry ingestion issues <- bid_telemetry(\"telemetry.sqlite\")  # 2. Triage issues using tidy workflow print(issues)  # Review issue summary  # Focus on critical issues critical_issues <- issues |>   filter(severity == \"critical\") |>   arrange(desc(user_impact))  # 3. Create a comprehensive improvement plan using bridge functions if (nrow(critical_issues) > 0) {   # Address top critical issue   top_issue <- critical_issues |> slice_head(n = 1)    # Start BID workflow   interpret_stage <- bid_interpret(     central_question = \"How can we address the most critical UX issue?\",     data_story = list(       hook = \"Critical issues identified from user behavior data\",       context = \"Telemetry reveals specific friction points\",       tension = \"Users struggling with core functionality\",       resolution = \"Data-driven improvements to user experience\"     )   )    # Use bridge function to convert issue to Notice   notice_stage <- bid_notice_issue(     issue = top_issue,     previous_stage = interpret_stage   )    improvement_plan <- notice_stage |>     bid_anticipate(       bias_mitigations = list(         choice_overload = \"Hide advanced filters until needed\",         default_effect = \"Pre-select most common filter values\"       )     ) |>     bid_structure(telemetry_flags = bid_flags(issues)) |>     bid_validate(       summary_panel = \"Simplified filtering with progressive disclosure\",       next_steps = c(         \"Remove unused filters\",         \"Implement progressive disclosure\",         \"Add contextual help\",         \"Re-test with telemetry after changes\"       )     ) }  # 4. Generate report improvement_report <- bid_report(improvement_plan, format = \"html\")"},{"path":"https://jrwinget.github.io/bidux/articles/telemetry-integration.html","id":"best-practices","dir":"Articles","previous_headings":"","what":"Best Practices","title":"Integrating shiny.telemetry with bidux","text":"Collect Sufficient Data: Ensure telemetry least 50-100 sessions analysis reliable patterns. Regular Analysis: Run telemetry analysis periodically (e.g., monthly) catch emerging issues. Combine Qualitative Data: Use telemetry insights alongside user interviews usability testing. Track Improvements: implementing changes, collect new telemetry verify improvements: Document Patterns: Build knowledge base common patterns domain:","code":"# Before changes issues_before <- bid_ingest_telemetry(\"telemetry_before.sqlite\")  # After implementing improvements issues_after <- bid_ingest_telemetry(\"telemetry_after.sqlite\")  # Compare issue counts cat(\"Issues before:\", length(issues_before), \"\\n\") cat(\"Issues after:\", length(issues_after), \"\\n\") # Save recurring patterns for future reference telemetry_patterns <- list(   date_filter_confusion = \"Users often struggle with date range inputs - consider using presets\",   tab_discovery = \"Secondary tabs have low discovery - consider better visual hierarchy\",   error_recovery = \"Users abandon after errors - implement graceful error handling\" )"},{"path":"https://jrwinget.github.io/bidux/articles/telemetry-integration.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Integrating shiny.telemetry with bidux","text":"bid_ingest_telemetry() function bridges gap user behavior data design decisions. automatically identifying friction points real usage patterns, provides concrete, evidence-based starting points BID framework, ultimately leading user-friendly Shiny applications.","code":""},{"path":"https://jrwinget.github.io/bidux/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jeremy Winget. Author, maintainer.","code":""},{"path":"https://jrwinget.github.io/bidux/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Winget J (2025). bidux: Behavioral Insight Design: Toolkit Integrating Behavioral Science UI/UX Design. R package version 0.3.1.9000, https://jrwinget.github.io/bidux/.","code":"@Manual{,   title = {bidux: Behavioral Insight Design: A Toolkit for Integrating Behavioral Science in UI/UX Design},   author = {Jeremy Winget},   year = {2025},   note = {R package version 0.3.1.9000},   url = {https://jrwinget.github.io/bidux/}, }"},{"path":[]},{"path":"https://jrwinget.github.io/bidux/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Behavioral Insight Design: A Toolkit for Integrating Behavioral Science in UI/UX Design","text":"bidux package helps Shiny developers create effective dashboards using Behavioral Insight Design (BID) Framework. ’ve ever wondered users struggle carefully crafted dashboards, beautifully visualized data doesn’t drive decisions expected, package . core insight: Technical excellence ≠ User success. Even sophisticated analysis can fail users can’t quickly understand act . BID framework bridges gap integrating behavioral science, UX best practices, data storytelling techniques systematic 5-stage process: Interpret User’s Need - Like defining research question understanding data Notice Problem - Like identifying data quality issues analytical bottlenecks Anticipate User Behavior - Like checking statistical biases skew results Structure Dashboard - Like choosing right visualization model architecture Validate & Empower User - Like testing model ensuring stakeholders can act results","code":""},{"path":"https://jrwinget.github.io/bidux/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Behavioral Insight Design: A Toolkit for Integrating Behavioral Science in UI/UX Design","text":"can install released version bidux CRAN : development version GitHub :","code":"install.packages(\"bidux\") # install.packages(\"pak\") pak::pak(\"jrwinget/bidux\")"},{"path":"https://jrwinget.github.io/bidux/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Behavioral Insight Design: A Toolkit for Integrating Behavioral Science in UI/UX Design","text":"","code":"library(bidux)  # Document a complete BID process process <- bid_interpret(   central_question = \"How are our marketing campaigns performing across different channels?\",   data_story = list(     hook = \"Recent campaign performance varies significantly across channels\",     context = \"We've invested in 6 different marketing channels over the past quarter\",     tension = \"ROI metrics show inconsistent results, with some channels underperforming\",     resolution = \"Identify top-performing channels and key performance drivers\"   ) ) |>   bid_notice(     problem = \"Users are overwhelmed by too many filter options and struggle to find relevant insights\",     evidence = \"User testing shows 65% of first-time users fail to complete their intended task within 2 minutes\"   ) |>   bid_anticipate(     bias_mitigations = list(       anchoring = \"Include previous period performance as reference points\",       framing = \"Provide toggle between ROI improvement vs. ROI gap views\"     )   ) |>   bid_structure() |>   bid_validate(     summary_panel = \"Executive summary highlighting top and bottom performers, key trends, and recommended actions\",     next_steps = c(       \"Review performance of bottom 2 channels\",       \"Increase budget for top-performing channel\",       \"Schedule team meeting to discuss optimization strategy\"     )   )  # View implementation suggestions for specific packages bid_suggest_components(process, package = \"bslib\") bid_suggest_components(process, package = \"reactable\")  # Generate comprehensive reports bid_report(process, format = \"html\") bid_report(process, format = \"markdown\")"},{"path":"https://jrwinget.github.io/bidux/index.html","id":"data-driven-ux-with-telemetry","dir":"","previous_headings":"","what":"Data-Driven UX with Telemetry","title":"Behavioral Insight Design: A Toolkit for Integrating Behavioral Science in UI/UX Design","text":"New 0.3.1: Enhanced telemetry workflow transforms real user behavior data actionable BID insights. bid_telemetry() function automatically identifies five key friction indicators: Unused Inputs: UI controls rarely interacted Delayed Interactions: Long time--first-action patterns Frequent Errors: Recurring error patterns disrupt workflows Navigation Drop-offs: Pages tabs users rarely visit Confusion Patterns: Rapid repeated changes indicating user uncertainty Legacy bid_ingest_telemetry() function maintains full backward compatibility providing enhanced functionality hybrid objects.","code":"# Modern approach: analyze telemetry data issues <- bid_telemetry(\"telemetry.sqlite\") print(issues)  # Shows organized issue summary with severity levels  # Focus on critical issues using tidy workflows critical_issues <- issues |>   filter(severity == \"critical\") |>   arrange(desc(user_impact))  # Convert high-priority issues to BID Notice stages notices <- bid_notices(   issues = critical_issues,   previous_stage = interpret_result )  # Use telemetry flags to inform structure decisions flags <- bid_flags(issues) structure_result <- bid_structure(   previous_stage = anticipate_result,   telemetry_flags = flags  # Influences layout selection )"},{"path":[]},{"path":"https://jrwinget.github.io/bidux/index.html","id":"behavioral-science-integration","dir":"","previous_headings":"Key Features","what":"Behavioral Science Integration","title":"Behavioral Insight Design: A Toolkit for Integrating Behavioral Science in UI/UX Design","text":"Bias Mitigation: Address anchoring, framing, confirmation bias, choice overload Cognitive Load Management: Implement progressive disclosure visual hierarchy Peak-End Rule: Structure experiences positive, actionable endings","code":""},{"path":"https://jrwinget.github.io/bidux/index.html","id":"implementation-support","dir":"","previous_headings":"Key Features","what":"Implementation Support","title":"Behavioral Insight Design: A Toolkit for Integrating Behavioral Science in UI/UX Design","text":"Component Suggestions: Get tailored recommendations bslib, reactable, echarts4r, Layout Selection: Automatic layout recommendations based content telemetry flags Concept Dictionary: Access 50+ behavioral science concepts implementation tips","code":""},{"path":"https://jrwinget.github.io/bidux/index.html","id":"real-user-data-integration","dir":"","previous_headings":"Key Features","what":"Real User Data Integration","title":"Behavioral Insight Design: A Toolkit for Integrating Behavioral Science in UI/UX Design","text":"Telemetry Analysis: Transform usage patterns design insights Evidence-Based Design: Ground design decisions actual user behavior Iterative Improvement: Track UX improvements /telemetry comparison","code":""},{"path":"https://jrwinget.github.io/bidux/index.html","id":"learning-more","dir":"","previous_headings":"","what":"Learning More","title":"Behavioral Insight Design: A Toolkit for Integrating Behavioral Science in UI/UX Design","text":"BID framework based established behavioral science UX design principles. Explore concept dictionary:","code":"# Browse all available concepts bid_concepts() |>   select(concept, category, description)  # Get detailed information about specific concepts bid_concept(\"Processing Fluency\") bid_concept(\"Hick's Law\")  # Search for concepts by keyword bid_concepts(\"cognitive\") |>   select(concept, implementation_tips)"},{"path":"https://jrwinget.github.io/bidux/index.html","id":"getting-help","dir":"","previous_headings":"","what":"Getting Help","title":"Behavioral Insight Design: A Toolkit for Integrating Behavioral Science in UI/UX Design","text":"Browse documentation: help(package = \"bidux\") vignette(\"behavioral-science-primer\"): Behavioral science data scientists vignette(\"introduction--bid\"): Framework overview core principles vignette(\"telemetry-integration\"): Data-driven UX workflows vignette(\"practical-examples\"): Practical dashboard examples vignette(\"getting-started\"): Complete walk-examples vignette(\"concepts-reference\"): Behavioral science concepts practical implementation vignette(\"advanced-workflows\"): Advanced BID workflows Visit BID framework repository: https://github.com/jrwinget/bid-framework","code":""},{"path":"https://jrwinget.github.io/bidux/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Behavioral Insight Design: A Toolkit for Integrating Behavioral Science in UI/UX Design","text":"Please note bidux project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/adjust_suggestion_score.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply context-based scoring adjustments — adjust_suggestion_score","title":"Apply context-based scoring adjustments — adjust_suggestion_score","text":"Apply context-based scoring adjustments Apply context-based scoring adjustments","code":""},{"path":"https://jrwinget.github.io/bidux/reference/adjust_suggestion_score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply context-based scoring adjustments — adjust_suggestion_score","text":"","code":"adjust_suggestion_score(suggestion, previous_stage, chosen_layout, concept)  adjust_suggestion_score(suggestion, previous_stage, chosen_layout, concept)"},{"path":"https://jrwinget.github.io/bidux/reference/apply_suggestion_rules.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply suggestion rules to context data — apply_suggestion_rules","title":"Apply suggestion rules to context data — apply_suggestion_rules","text":"Evaluates suggestion rules provided context data returns applicable suggestions. Used generate_stage_suggestions() consistent suggestion generation.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/apply_suggestion_rules.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply suggestion rules to context data — apply_suggestion_rules","text":"","code":"apply_suggestion_rules(stage_name, context_data, rules_list = NULL)"},{"path":"https://jrwinget.github.io/bidux/reference/apply_suggestion_rules.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply suggestion rules to context data — apply_suggestion_rules","text":"stage_name Name BID stage context_data Named list stage-specific context rules_list Optional custom rules list (defaults consolidated rules)","code":""},{"path":"https://jrwinget.github.io/bidux/reference/apply_suggestion_rules.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply suggestion rules to context data — apply_suggestion_rules","text":"Character vector applicable suggestions","code":""},{"path":"https://jrwinget.github.io/bidux/reference/as_tibble.bid_issues.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert bid_issues object to tibble — as_tibble.bid_issues","title":"Convert bid_issues object to tibble — as_tibble.bid_issues","text":"Extracts tidy issues tibble bid_issues object analysis visualization. provides structured view telemetry issues metadata prioritization reporting.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/as_tibble.bid_issues.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert bid_issues object to tibble — as_tibble.bid_issues","text":"","code":"# S3 method for class 'bid_issues' as_tibble(x, ...)"},{"path":"https://jrwinget.github.io/bidux/reference/as_tibble.bid_issues.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert bid_issues object to tibble — as_tibble.bid_issues","text":"x bid_issues object bid_ingest_telemetry() ... Additional arguments (unused)","code":""},{"path":"https://jrwinget.github.io/bidux/reference/as_tibble.bid_issues.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert bid_issues object to tibble — as_tibble.bid_issues","text":"tibble issue metadata including severity, impact, descriptions","code":""},{"path":"https://jrwinget.github.io/bidux/reference/as_tibble.bid_stage.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert bid_stage to tibble — as_tibble.bid_stage","title":"Convert bid_stage to tibble — as_tibble.bid_stage","text":"Convert bid_stage tibble","code":""},{"path":"https://jrwinget.github.io/bidux/reference/as_tibble.bid_stage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert bid_stage to tibble — as_tibble.bid_stage","text":"","code":"# S3 method for class 'bid_stage' as_tibble(x, ...)"},{"path":"https://jrwinget.github.io/bidux/reference/as_tibble.bid_stage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert bid_stage to tibble — as_tibble.bid_stage","text":"x bid_stage object ... Additional arguments (unused)","code":""},{"path":"https://jrwinget.github.io/bidux/reference/as_tibble.bid_stage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert bid_stage to tibble — as_tibble.bid_stage","text":"tibble","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_address.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Notice stage from single telemetry issue (sugar) — bid_address","title":"Create Notice stage from single telemetry issue (sugar) — bid_address","text":"Convenience function combines issue selection Notice creation one step. Useful quick workflows want address specific issue immediately.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_address.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Notice stage from single telemetry issue (sugar) — bid_address","text":"","code":"bid_address(issue, previous_stage, ...)"},{"path":"https://jrwinget.github.io/bidux/reference/bid_address.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Notice stage from single telemetry issue (sugar) — bid_address","text":"issue single row bid_telemetry() output previous_stage Previous BID stage (typically bid_interpret) ... Additional arguments passed bid_notice_issue()","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_address.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Notice stage from single telemetry issue (sugar) — bid_address","text":"bid_stage object Notice stage","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_address.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Notice stage from single telemetry issue (sugar) — bid_address","text":"","code":"if (FALSE) { # \\dontrun{ issues <- bid_telemetry(\"data.sqlite\") interpret <- bid_interpret(\"How can we improve user experience?\")  # Address the highest impact issue top_issue <- issues[which.max(issues$impact_rate), ] notice <- bid_address(top_issue, interpret) } # }"},{"path":"https://jrwinget.github.io/bidux/reference/bid_anticipate.html","id":null,"dir":"Reference","previous_headings":"","what":"Document User Behavior Anticipation Stage in BID Framework — bid_anticipate","title":"Document User Behavior Anticipation Stage in BID Framework — bid_anticipate","text":"function documents anticipated user behavior listing bias mitigation strategies related anchoring, framing, confirmation bias, etc. also supports adding interaction hints visual feedback elements.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_anticipate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Document User Behavior Anticipation Stage in BID Framework — bid_anticipate","text":"","code":"bid_anticipate(   previous_stage,   bias_mitigations = NULL,   include_accessibility = TRUE,   ... )"},{"path":"https://jrwinget.github.io/bidux/reference/bid_anticipate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Document User Behavior Anticipation Stage in BID Framework — bid_anticipate","text":"previous_stage tibble list output earlier BID stage function. bias_mitigations named list bias mitigation strategies. NULL, function suggest bias mitigations based information previous stages. include_accessibility Logical indicating whether include accessibility mitigations. Default TRUE. ... Additional parameters. 'interaction_principles' provided, ignored warning.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_anticipate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Document User Behavior Anticipation Stage in BID Framework — bid_anticipate","text":"tibble containing documented information \"Anticipate\" stage.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_anticipate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Document User Behavior Anticipation Stage in BID Framework — bid_anticipate","text":"","code":"interpret_stage <- bid_interpret(   central_question = \"How can we improve selection efficiency?\",   data_story = list(     hook = \"Too many options\",     context = \"Excessive choices\",      tension = \"User frustration\",     resolution = \"Simplify menu\"   ) ) #> Stage 1 (Interpret) completed. #>   - Central question: How can we improve selection efficiency? #>   - Your data story has all key elements. Focus on making each component compelling and relevant. #>   - Your central question is appropriately scoped. #>   - No user personas defined   notice_stage <- bid_notice(   previous_stage = interpret_stage,   problem = \"Issue with dropdown menus\",   evidence = \"User testing indicated delays\" ) #> Auto-suggested theory: Hick's Law (confidence: 90%) #> Stage 2 (Notice) completed. (40% complete) #>   - Problem: Issue with dropdown menus #>   - Theory: Hick's Law (auto-suggested) #>   - Evidence: User testing indicated delays #>   - Theory confidence: 90% #>   - Next: Use bid_anticipate() for Stage 3   structure_info <- bid_structure(previous_stage = notice_stage) #> ℹ Auto-selected layout: breathable #> ℹ Selected 'breathable' as safe default to ensure clean, uncluttered layout. #> Warning: Layout auto-selection is deprecated and will be removed in bidux 0.4.0. The BID framework will focus on concept-based suggestions instead. Existing code will continue to work until 0.4.0. #> ℹ Tip: Learn more about any concept via bid_concept(\"<concept>\"). #> ℹ Stage numbering has been corrected in bidux 0.3.1: #>   Anticipate is now Stage 3, Structure is now Stage 4 #>   This change improves logical workflow progression #>   All existing code remains backward compatible #> Stage 4 (Structure) completed. #>   - Auto-selected layout: breathable #>   - Concept groups generated: 4 #>   - Total concepts: 4   # Let the function suggest bias mitigations based on previous stages bid_anticipate(previous_stage = structure_info) #> Warning: Layout-specific bias mitigations are deprecated and will be removed in bidux 0.4.0. Consider using concept-based bias mitigations instead. #> Automatically suggested bias mitigations: attention bias, belief perseverance, cognitive load, accessibility. #> Concept 'attention bias' not found #> Found partial match: Cognitive Load Theory #> Found partial match: Accessibility Contrast #> Stage 3 (Anticipate) completed. #>   - Bias mitigations: 4 defined #>   - Accessibility considerations included #>   - Key suggestions: attention bias mitigation: Consider how this bias affects user decisions., belief perseverance mitigation: Proactively show content that might disprove initial assumptions., cognitive load mitigation: Use tabs or collapsible sections to organize complex information.  #> BID Framework - Anticipate Stage #> Generated: 2025-09-22 21:00:49  #> Progress: 60 % (3/5)  #>  #> Bias Mitigations: 4 strategies defined  #>  #>  Suggestions: attention bias mitigation: Consider how this bias affects user decisions. belief perseverance mitigation: Proactively show content that might disprove initial assumptions. cognitive load mitigation: Use tabs or collapsible sections to organize complex information. accessibility mitigation: Test color combinations with WebAIM's contrast checker to meet WCAG standards. Consider also addressing these common biases: anchoring, framing, confirmation accessibility considerations have been included in bias mitigations.  #>  #>  Use summary() for detailed information   # with accessibility included (default) and custom bias mitigations anticipate_result <- bid_anticipate(   previous_stage = structure_info,   bias_mitigations = list(     anchoring = \"Use context-aware references\",     framing = \"Toggle between positive and negative framing\"   ),   include_accessibility = TRUE ) #> Added accessibility mitigation based on layout context. #> Found partial match: Anchoring Effect #> Found partial match: Framing & Loss Aversion #> Found partial match: Accessibility Contrast #> Stage 3 (Anticipate) completed. #>   - Bias mitigations: 3 defined #>   - Accessibility considerations included #>   - Key suggestions: anchoring mitigation: Always show reference points like previous period, budget, or industry average., framing mitigation: Toggle between progress (65% complete) and gap (35% remaining) framing., accessibility mitigation: Test color combinations with WebAIM's contrast checker to meet WCAG standards.   summary(anticipate_result) #> === BID Framework: Anticipate Stage Summary === #>  #> Metadata: #>    stage_number : 3  #>    total_stages : 5  #>    validation_status : completed  #>    bias_count : 3  #>    include_accessibility : Yes  #>    layout : breathable  #>    concepts_count : 4  #>    auto_generated_biases : No  #>    stage_number_previous : 4  #>  #> Stage Data: #>    stage : Anticipate  #>    bias_mitigations : anchoring: Use context-aware references; framing: Toggle between positive and...  #>    accessibility : accessibility mitigation not specified  #>    previous_layout : breathable  #>    previous_concepts : Cognitive Load Theory, Visual Hierarchy, Progressive Disclosure, Hick's Law  #>    suggestions : anchoring mitigation: Always show reference points like previous period, budg...  #>  #> Generated: 2025-09-22 21:00:49"},{"path":"https://jrwinget.github.io/bidux/reference/bid_concept.html","id":null,"dir":"Reference","previous_headings":"","what":"Get detailed information about a specific concept — bid_concept","title":"Get detailed information about a specific concept — bid_concept","text":"Returns detailed information specific BID framework concept, including implementation recommendations based concept's stage.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_concept.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get detailed information about a specific concept — bid_concept","text":"","code":"bid_concept(concept_name, add_recommendations = TRUE)"},{"path":"https://jrwinget.github.io/bidux/reference/bid_concept.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get detailed information about a specific concept — bid_concept","text":"concept_name character string exact partial concept name add_recommendations Logical indicating whether add stage-specific recommendations","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_concept.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get detailed information about a specific concept — bid_concept","text":"tibble detailed concept information","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_concepts.html","id":null,"dir":"Reference","previous_headings":"","what":"Search BID Framework Concepts — bid_concepts","title":"Search BID Framework Concepts — bid_concepts","text":"Search behavioral science UX concepts used BID framework. Returns concepts matching search term along descriptions, categories, implementation guidance.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_concepts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search BID Framework Concepts — bid_concepts","text":"","code":"bid_concepts(search = NULL, fuzzy_match = TRUE, max_distance = 2)"},{"path":"https://jrwinget.github.io/bidux/reference/bid_concepts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search BID Framework Concepts — bid_concepts","text":"search character string search . NULL empty, returns concepts. fuzzy_match Logical indicating whether use fuzzy string matching (default: TRUE) max_distance Maximum string distance fuzzy matching (default: 2)","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_concepts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search BID Framework Concepts — bid_concepts","text":"tibble containing matching concepts details","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_flags.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract telemetry flags from bid_issues object — bid_flags","title":"Extract telemetry flags from bid_issues object — bid_flags","text":"Extracts global telemetry flags metadata bid_issues object. flags provide boolean indicators different types issues can used conditional logic downstream BID stages.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_flags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract telemetry flags from bid_issues object — bid_flags","text":"","code":"bid_flags(x)  # S3 method for class 'bid_issues' bid_flags(x)  # Default S3 method bid_flags(x)"},{"path":"https://jrwinget.github.io/bidux/reference/bid_flags.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract telemetry flags from bid_issues object — bid_flags","text":"x bid_issues object bid_ingest_telemetry() object flags attribute","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_flags.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract telemetry flags from bid_issues object — bid_flags","text":"named list boolean flags metadata","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_ingest_telemetry.html","id":null,"dir":"Reference","previous_headings":"","what":"Ingest telemetry data and identify UX friction points — bid_ingest_telemetry","title":"Ingest telemetry data and identify UX friction points — bid_ingest_telemetry","text":"function ingests telemetry data shiny.telemetry output (SQLite JSON) automatically identifies potential UX issues, translating BID framework Notice stages. returns hybrid object backward-compatible list Notice stages also providing enhanced functionality tidy tibble access flags extraction.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_ingest_telemetry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ingest telemetry data and identify UX friction points — bid_ingest_telemetry","text":"","code":"bid_ingest_telemetry(path, format = NULL, thresholds = list())"},{"path":"https://jrwinget.github.io/bidux/reference/bid_ingest_telemetry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ingest telemetry data and identify UX friction points — bid_ingest_telemetry","text":"path File path telemetry data (SQLite database JSON log file) format Optional format specification (\"sqlite\" \"json\"). NULL, auto-detected file extension. thresholds Optional list threshold parameters: - unused_input_threshold: percentage sessions input considered unused (default: 0.05) - delay_threshold_seconds: seconds delay considered problematic (default: 30) - error_rate_threshold: percentage sessions errors considered problematic (default: 0.1) - navigation_threshold: percentage sessions visiting page considered underused (default: 0.2) - rapid_change_window: seconds within multiple changes indicate confusion (default: 10) - rapid_change_count: number changes within window flag confusion (default: 5)","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_ingest_telemetry.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ingest telemetry data and identify UX friction points — bid_ingest_telemetry","text":"hybrid object class c(\"bid_issues\", \"list\") containing bid_stage objects identified issue \"Notice\" stage. object includes: Legacy list Named list bid_stage objects (e.g., \"unused_input_region\", \"delayed_interaction\") issues_tbl Attached tidy tibble issue metadata flags Global telemetry flags named list created_at Timestamp object created","code":"Use as_tibble() to access the tidy issues data, bid_flags() to extract flags,     and legacy list access for backward compatibility."},{"path":"https://jrwinget.github.io/bidux/reference/bid_ingest_telemetry.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ingest telemetry data and identify UX friction points — bid_ingest_telemetry","text":"","code":"if (FALSE) { # \\dontrun{ # Analyze SQLite telemetry database issues <- bid_ingest_telemetry(\"telemetry.sqlite\")  # Analyze JSON log with custom thresholds issues <- bid_ingest_telemetry(   \"telemetry.log\",   format = \"json\",   thresholds = list(     unused_input_threshold = 0.1,     delay_threshold_seconds = 60   ) )  # Use results in BID workflow if (length(issues) > 0) {   # Take first issue and continue with BID process   interpret_result <- bid_interpret(     previous_stage = issues[[1]],     central_question = \"How can we improve user engagement?\"   ) } } # }"},{"path":"https://jrwinget.github.io/bidux/reference/bid_interpret.html","id":null,"dir":"Reference","previous_headings":"","what":"Document User Interpretation Stage in BID Framework — bid_interpret","title":"Document User Interpretation Stage in BID Framework — bid_interpret","text":"function documents interpretation user needs, capturing central question data storytelling narrative. represents stage 1 BID framework.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_interpret.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Document User Interpretation Stage in BID Framework — bid_interpret","text":"","code":"bid_interpret(   previous_stage = NULL,   central_question,   data_story = NULL,   user_personas = NULL )"},{"path":"https://jrwinget.github.io/bidux/reference/bid_interpret.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Document User Interpretation Stage in BID Framework — bid_interpret","text":"previous_stage Optional tibble list output earlier BID stage function. Since Interpret first stage BID framework, typically NULL can accept previous stage output iteration scenarios. central_question Required. character string representing main question answered. NULL, suggested based previous stage information. data_story list containing elements hook, context, tension, resolution, optionally audience, metrics, visual_approach. NULL, elements suggested based previous stage. user_personas Optional list user personas consider design.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_interpret.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Document User Interpretation Stage in BID Framework — bid_interpret","text":"tibble containing documented information \"Interpret\" stage.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_interpret.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Document User Interpretation Stage in BID Framework — bid_interpret","text":"","code":"# Basic usage interpret_result <- bid_interpret(   central_question = \"What drives the decline in user engagement?\",   data_story = list(     hook = \"Declining trend in engagement\",     context = \"Previous high engagement levels\",     tension = \"Unexpected drop\",     resolution = \"Investigate new UI changes\"   ) ) #> Stage 1 (Interpret) completed. #>   - Central question: What drives the decline in user engagement? #>   - Your data story has all key elements. Focus on making each component compelling and relevant. #>   - Your central question is appropriately scoped. #>   - No user personas defined   # With user personas interpret_personas <- bid_interpret(   central_question = \"How can we improve data discovery?\",   data_story = list(     hook = \"Users are missing key insights\",     context = \"Critical data is available but overlooked\",     tension = \"Time-sensitive decisions are delayed\",     resolution = \"Highlight key metrics more effectively\"   ),   user_personas = list(     list(       name = \"Sara, Data Analyst\",       goals = \"Needs to quickly find patterns in data\",       pain_points = \"Gets overwhelmed by too many visualizations\",       technical_level = \"Advanced\"     ),     list(       name = \"Marcus, Executive\",       goals = \"Wants high-level insights at a glance\",       pain_points = \"Limited time to analyze detailed reports\",       technical_level = \"Basic\"     )   ) ) #> Stage 1 (Interpret) completed. #>   - Central question: How can we improve data discovery? #>   - Your data story has all key elements. Focus on making each component compelling and relevant. #>   - Your central question is appropriately scoped. #>   - User personas: 2 defined   summary(interpret_personas) #> === BID Framework: Interpret Stage Summary === #>  #> Metadata: #>    stage_number : 1  #>    total_stages : 5  #>    validation_status : completed  #>    has_central_question : Yes  #>    story_completeness : 1  #>    personas_count : 2  #>    auto_generated_question : No  #>    auto_generated_story : No  #>  #> Stage Data: #>    stage : Interpret  #>    central_question : How can we improve data discovery?  #>    hook : Users are missing key insights  #>    context : Critical data is available but overlooked  #>    tension : Time-sensitive decisions are delayed  #>    resolution : Highlight key metrics more effectively  #>    personas : [{\"name\":[\"Sara, Data Analyst\"],\"goals\":[\"Needs to quickly find patterns in d...  #>    suggestions : Your data story has all key elements. Focus on making each component compelli...  #>  #> Generated: 2025-09-22 21:00:50"},{"path":"https://jrwinget.github.io/bidux/reference/bid_notice.html","id":null,"dir":"Reference","previous_headings":"","what":"Document User Notice Stage in BID Framework — bid_notice","title":"Document User Notice Stage in BID Framework — bid_notice","text":"function documents observation problem identification stage. represents stage 2 BID framework now returns structured bid_stage object enhanced metadata external mapping support.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_notice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Document User Notice Stage in BID Framework — bid_notice","text":"","code":"bid_notice(previous_stage, problem, theory = NULL, evidence = NULL, ...)"},{"path":"https://jrwinget.github.io/bidux/reference/bid_notice.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Document User Notice Stage in BID Framework — bid_notice","text":"previous_stage tibble list output previous BID stage function (typically bid_interpret). problem character string describing observed user problem. theory character string describing behavioral theory might explain problem. NULL, auto-suggested using external theory mappings. evidence character string describing evidence supporting problem. ... Additional parameters. Deprecated parameters (e.g., 'target_audience') generate warnings provided.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_notice.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Document User Notice Stage in BID Framework — bid_notice","text":"bid_stage object containing documented information \"Notice\" stage enhanced metadata validation.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_notice.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Document User Notice Stage in BID Framework — bid_notice","text":"","code":"interpret_result <- bid_interpret(   central_question = \"How can we improve user task completion?\",   data_story = list(     hook = \"Users are struggling with complex interfaces\",     resolution = \"Simplify key interactions\"   ) ) #> Stage 1 (Interpret) completed. #>   - Central question: How can we improve user task completion? #>   - Your data story is taking shape (50%). Consider adding: context, tension. #>   - Your central question is appropriately scoped. #>   - No user personas defined   # Auto-suggested theory bid_notice(   previous_stage = interpret_result,   problem = \"Users struggling with complex dropdowns and too many options\",   evidence = \"User testing shows 65% abandonment rate on filter selection\" ) #> Auto-suggested theory: Hick's Law (confidence: 90%) #> Stage 2 (Notice) completed. (40% complete) #>   - Problem: Users struggling with complex dropdowns and too many options #>   - Theory: Hick's Law (auto-suggested) #>   - Evidence: User testing shows 65% abandonment rate on filter selection #>   - Theory confidence: 90% #>   - Next: Use bid_anticipate() for Stage 3  #> BID Framework - Notice Stage #> Generated: 2025-09-22 21:00:50  #> Progress: 40 % (2/5)  #>  #> Problem: Users struggling with complex dropdowns and too many options  #> Theory: Hick's Law (auto-suggested)  #> Evidence: User testing shows 65% abandonment rate on filter selection  #>  #>  Suggestions: Ensure your problem description is specific and supported by strong evidence  #>  #>  Use summary() for detailed information   # With explicit theory notice_result <- bid_notice(   previous_stage = interpret_result,   problem = \"Mobile interface is difficult to navigate\",   theory = \"Fitts's Law\",   evidence = \"Mobile users report frustration with small touch targets\" ) #> Stage 2 (Notice) completed. (40% complete) #>   - Problem: Mobile interface is difficult to navigate #>   - Theory: Fitts's Law #>   - Evidence: Mobile users report frustration with small touch targets #>   - Next: Use bid_anticipate() for Stage 3   summary(notice_result) #> === BID Framework: Notice Stage Summary === #>  #> Metadata: #>    stage_number : 2  #>    total_stages : 5  #>    validation_status : completed  #>    auto_suggested_theory : No  #>    theory_confidence : 1  #>    problem_length : 41  #>    evidence_length : 56  #>    custom_mappings_used : No  #>  #> Stage Data: #>    stage : Notice  #>    problem : Mobile interface is difficult to navigate  #>    theory : Fitts's Law  #>    evidence : Mobile users report frustration with small touch targets  #>    suggestions : Ensure your problem description is specific and supported by strong evidence  #>  #> Generated: 2025-09-22 21:00:50"},{"path":"https://jrwinget.github.io/bidux/reference/bid_notice_issue.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Notice stage from individual telemetry issue — bid_notice_issue","title":"Create Notice stage from individual telemetry issue — bid_notice_issue","text":"Bridge function converts single telemetry issue row BID Notice stage. allows seamless integration telemetry analysis BID framework.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_notice_issue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Notice stage from individual telemetry issue — bid_notice_issue","text":"","code":"bid_notice_issue(issue, previous_stage = NULL, override = list())"},{"path":"https://jrwinget.github.io/bidux/reference/bid_notice_issue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Notice stage from individual telemetry issue — bid_notice_issue","text":"issue single row bid_telemetry() output issues tibble previous_stage Optional previous BID stage (typically bid_interpret) override List values override issue (problem, evidence, theory)","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_notice_issue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Notice stage from individual telemetry issue — bid_notice_issue","text":"bid_stage object Notice stage","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_notice_issue.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Notice stage from individual telemetry issue — bid_notice_issue","text":"","code":"if (FALSE) { # \\dontrun{ issues <- bid_telemetry(\"data.sqlite\") interpret <- bid_interpret(\"How can we reduce user friction?\")  # Convert first issue to Notice stage notice <- bid_notice_issue(issues[1, ], previous_stage = interpret)  # Override problem description notice <- bid_notice_issue(   issues[1, ],    previous_stage = interpret,   override = list(problem = \"Custom problem description\") ) } # }"},{"path":"https://jrwinget.github.io/bidux/reference/bid_notices.html","id":null,"dir":"Reference","previous_headings":"","what":"Create multiple Notice stages from telemetry issues — bid_notices","title":"Create multiple Notice stages from telemetry issues — bid_notices","text":"Bridge function converts multiple telemetry issues Notice stages. Provides filtering limiting options managing large issue sets.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_notices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create multiple Notice stages from telemetry issues — bid_notices","text":"","code":"bid_notices(issues, filter = NULL, previous_stage = NULL, max_issues = 5, ...)"},{"path":"https://jrwinget.github.io/bidux/reference/bid_notices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create multiple Notice stages from telemetry issues — bid_notices","text":"issues tibble bid_telemetry() output filter Optional filter expression subsetting issues (e.g., severity == \"critical\") previous_stage Optional previous BID stage (typically bid_interpret) max_issues Maximum number issues convert (default: 5) ... Additional arguments passed bid_notice_issue()","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_notices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create multiple Notice stages from telemetry issues — bid_notices","text":"named list bid_stage objects Notice stage","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_notices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create multiple Notice stages from telemetry issues — bid_notices","text":"","code":"if (FALSE) { # \\dontrun{ issues <- bid_telemetry(\"data.sqlite\") interpret <- bid_interpret(\"How can we reduce user friction?\")  # Convert all critical issues notices <- bid_notices(issues, filter = severity == \"critical\", interpret)  # Convert top 3 issues by impact top_issues <- issues[order(-issues$impact_rate), ][1:3, ] notices <- bid_notices(top_issues, previous_stage = interpret) } # }"},{"path":"https://jrwinget.github.io/bidux/reference/bid_pipeline.html","id":null,"dir":"Reference","previous_headings":"","what":"Create pipeline of Notice stages from top telemetry issues (sugar) — bid_pipeline","title":"Create pipeline of Notice stages from top telemetry issues (sugar) — bid_pipeline","text":"Convenience function creates pipeline Notice stages highest priority telemetry issues. Useful systematic issue resolution workflows.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_pipeline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create pipeline of Notice stages from top telemetry issues (sugar) — bid_pipeline","text":"","code":"bid_pipeline(issues, previous_stage, max = 3, ...)"},{"path":"https://jrwinget.github.io/bidux/reference/bid_pipeline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create pipeline of Notice stages from top telemetry issues (sugar) — bid_pipeline","text":"issues tibble bid_telemetry() output previous_stage Previous BID stage (typically bid_interpret) max Maximum number issues include pipeline (default: 3) ... Additional arguments passed bid_notices()","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_pipeline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create pipeline of Notice stages from top telemetry issues (sugar) — bid_pipeline","text":"named list bid_stage objects Notice stage","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_pipeline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create pipeline of Notice stages from top telemetry issues (sugar) — bid_pipeline","text":"","code":"if (FALSE) { # \\dontrun{ issues <- bid_telemetry(\"data.sqlite\") interpret <- bid_interpret(\"How can we systematically improve UX?\")  # Create pipeline for top 3 issues notice_pipeline <- bid_pipeline(issues, interpret, max = 3)  # Continue with first issue in pipeline anticipate <- bid_anticipate(previous_stage = notice_pipeline[[1]]) } # }"},{"path":"https://jrwinget.github.io/bidux/reference/bid_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate BID Framework Report — bid_report","title":"Generate BID Framework Report — bid_report","text":"Creates comprehensive report completed BID framework process. report summarizes stages provides recommendations implementation.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate BID Framework Report — bid_report","text":"","code":"bid_report(   validate_stage,   format = c(\"text\", \"html\", \"markdown\"),   include_diagrams = TRUE )"},{"path":"https://jrwinget.github.io/bidux/reference/bid_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate BID Framework Report — bid_report","text":"validate_stage tibble output bid_validate(). format Output format: \"text\", \"html\", \"markdown\" include_diagrams Logical, whether include ASCII diagrams report (default: TRUE)","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate BID Framework Report — bid_report","text":"formatted report summarizing entire BID process","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_report.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate BID Framework Report — bid_report","text":"","code":"if (interactive()) {   # After completing all 5 stages   validation_result <- bid_validate(...)    # Generate a text report   bid_report(validation_result)    # Generate an HTML report   bid_report(validation_result, format = \"html\")    # Generate a markdown report without diagrams   bid_report(     validation_result,     format = \"markdown\",     include_diagrams = FALSE   ) }"},{"path":"https://jrwinget.github.io/bidux/reference/bid_result.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for BID result collection objects — bid_result","title":"Constructor for BID result collection objects — bid_result","text":"Constructor BID result collection objects","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_result.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for BID result collection objects — bid_result","text":"","code":"bid_result(stages)"},{"path":"https://jrwinget.github.io/bidux/reference/bid_result.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for BID result collection objects — bid_result","text":"stages List bid_stage objects","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_result.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for BID result collection objects — bid_result","text":"Object class 'bid_result'","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_stage.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for BID stage objects — bid_stage","title":"Constructor for BID stage objects — bid_stage","text":"Constructor BID stage objects","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_stage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for BID stage objects — bid_stage","text":"","code":"bid_stage(stage, data, metadata = list())"},{"path":"https://jrwinget.github.io/bidux/reference/bid_stage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for BID stage objects — bid_stage","text":"stage Character string indicating stage name data Tibble containing stage data metadata List containing additional metadata","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_stage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for BID stage objects — bid_stage","text":"Object class 'bid_stage'","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_structure.html","id":null,"dir":"Reference","previous_headings":"","what":"Document Dashboard Structure Stage in BID Framework — bid_structure","title":"Document Dashboard Structure Stage in BID Framework — bid_structure","text":"function documents structure dashboard automatic layout selection generates ranked, concept-grouped actionable UI/UX suggestions. Layout intelligently chosen based content analysis previous stages using deterministic heuristics. Returns structured recommendations specific component pointers implementation rationales.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_structure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Document Dashboard Structure Stage in BID Framework — bid_structure","text":"","code":"bid_structure(previous_stage, concepts = NULL, telemetry_flags = NULL, ...)"},{"path":"https://jrwinget.github.io/bidux/reference/bid_structure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Document Dashboard Structure Stage in BID Framework — bid_structure","text":"previous_stage tibble list output earlier BID stage function. concepts character vector additional BID concepts include. Concepts can provided natural language (e.g., \"Principle Proximity\") underscores (e.g., \"principle_of_proximity\"). function uses fuzzy matching identify concepts. NULL, detect relevant concepts previous stages automatically. telemetry_flags Optional named list telemetry flags bid_flags(). Used adjust layout choice suggestion scoring based observed user behavior patterns. ... Additional parameters. layout provided via ..., function abort helpful error message.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_structure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Document Dashboard Structure Stage in BID Framework — bid_structure","text":"bid_stage object containing: stage \"Structure\" layout Auto-selected layout type suggestions List concept groups ranked suggestions concepts Comma-separated string concepts used","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_structure.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Document Dashboard Structure Stage in BID Framework — bid_structure","text":"Layout Auto-Selection: backwards compatibility versions < 0.3.0; removed 0.4.0. Uses deterministic heuristics analyze content previous stages select appropriate layout: breathable: information overload/confusion patterns dual_process: overview vs detail needs grid: grouping/comparison requirements card: modular/chunked content tabs: categorical organization (unless telemetry shows issues) Suggestion Engine: Generates ranked, actionable recommendations grouped UX concepts. suggestion includes specific Shiny/bslib components, implementation details, rationale. Suggestions scored based relevance, layout appropriateness, contextual factors.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_structure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Document Dashboard Structure Stage in BID Framework — bid_structure","text":"","code":"notice_result <- bid_interpret(   central_question = \"How can we simplify data presentation?\",   data_story = list(     hook = \"Data is too complex\",     context = \"Overloaded with charts\",     tension = \"Confusing layout\",     resolution = \"Introduce clear grouping\"   ) ) |>   bid_notice(     problem = \"Users struggle with information overload\",     evidence = \"Survey results indicate delays\"   ) #> Stage 1 (Interpret) completed. #>   - Central question: How can we simplify data presentation? #>   - Your data story has all key elements. Focus on making each component compelling and relevant. #>   - Your central question is appropriately scoped. #>   - No user personas defined  #> Auto-suggested theory: Processing Fluency (confidence: 70%) #> Stage 2 (Notice) completed. (40% complete) #>   - Problem: Users struggle with information overload #>   - Theory: Processing Fluency (auto-suggested) #>   - Evidence: Survey results indicate delays #>   - Theory confidence: 70% #>   - Next: Use bid_anticipate() for Stage 3   # Auto-selected layout with concept-grouped suggestions structure_result <- bid_structure(previous_stage = notice_result) #> ℹ Auto-selected layout: breathable #> ℹ Detected information overload patterns; choosing 'breathable' to reduce cognitive load. #> Warning: Layout auto-selection is deprecated and will be removed in bidux 0.4.0. The BID framework will focus on concept-based suggestions instead. Existing code will continue to work until 0.4.0. #> ℹ Tip: Learn more about any concept via bid_concept(\"<concept>\"). #> Stage 4 (Structure) completed. #>   - Auto-selected layout: breathable #>   - Concept groups generated: 4 #>   - Total concepts: 4  print(structure_result$layout)  # Auto-selected layout #> [1] \"breathable\" \"breathable\" \"breathable\" \"breathable\" print(structure_result$suggestions)  # Ranked suggestions by concept #> [[1]] #> [[1]]$concept #> [1] \"Cognitive Load Theory\" #>  #> [[1]]$suggestions #> [[1]]$suggestions[[1]] #> [[1]]$suggestions[[1]]$title #> [1] \"Limit initial choices\" #>  #> [[1]]$suggestions[[1]]$details #> [1] \"Show only core filters by default; defer advanced options to secondary views or accordions.\" #>  #> [[1]]$suggestions[[1]]$components #> [1] \"bslib::accordion\"            \"shiny::conditionalPanel\"     #> [3] \"shiny::updateSelectizeInput\" #>  #> [[1]]$suggestions[[1]]$rationale #> [1] \"Reduces initial cognitive load for new users while preserving functionality.\" #>  #> [[1]]$suggestions[[1]]$score #> [1] 1 #>  #>  #> [[1]]$suggestions[[2]] #> [[1]]$suggestions[[2]]$title #> [1] \"Use progressive complexity\" #>  #> [[1]]$suggestions[[2]]$details #> [1] \"Start with simple views and allow users to add complexity incrementally.\" #>  #> [[1]]$suggestions[[2]]$components #> [1] \"shiny::tabsetPanel\"  \"bslib::accordion\"    \"shiny::actionButton\" #>  #> [[1]]$suggestions[[2]]$rationale #> [1] \"Prevents overwhelming users with too many options at once.\" #>  #> [[1]]$suggestions[[2]]$score #> [1] 0.91 #>  #>  #> [[1]]$suggestions[[3]] #> [[1]]$suggestions[[3]]$title #> [1] \"Provide smart defaults\" #>  #> [[1]]$suggestions[[3]]$details #> [1] \"Pre-select commonly used filters and settings to reduce decision fatigue.\" #>  #> [[1]]$suggestions[[3]]$components #> [1] \"shiny::selectInput\"   \"shiny::checkboxInput\" \"bslib::input_switch\"  #>  #> [[1]]$suggestions[[3]]$rationale #> [1] \"Leverages the Default Effect to reduce cognitive burden.\" #>  #> [[1]]$suggestions[[3]]$score #> [1] 0.88 #>  #>  #>  #>  #> [[2]] #> [[2]]$concept #> [1] \"Visual Hierarchy\" #>  #> [[2]]$suggestions #> [[2]]$suggestions[[1]] #> [[2]]$suggestions[[1]]$title #> [1] \"Establish clear information priority\" #>  #> [[2]]$suggestions[[1]]$details #> [1] \"Use size, color, and spacing to guide attention to key metrics first.\" #>  #> [[2]]$suggestions[[1]]$components #> [1] \"bslib::card\"      \"shiny::h1\"        \"shiny::h2\"        \"bslib::value_box\" #>  #> [[2]]$suggestions[[1]]$rationale #> [1] \"Helps users quickly identify what matters most in the interface.\" #>  #> [[2]]$suggestions[[1]]$score #> [1] 0.9 #>  #>  #> [[2]]$suggestions[[2]] #> [[2]]$suggestions[[2]]$title #> [1] \"Group related content visually\" #>  #> [[2]]$suggestions[[2]]$details #> [1] \"Use consistent spacing and visual containers to show relationships.\" #>  #> [[2]]$suggestions[[2]]$components #> [1] \"bslib::layout_columns\" \"bslib::card\"           \"shiny::fluidRow\"       #>  #> [[2]]$suggestions[[2]]$rationale #> [1] \"Leverages Gestalt principles to reduce cognitive processing.\" #>  #> [[2]]$suggestions[[2]]$score #> [1] 0.87 #>  #>  #>  #>  #> [[3]] #> [[3]]$concept #> [1] \"Progressive Disclosure\" #>  #> [[3]]$suggestions #> [[3]]$suggestions[[1]] #> [[3]]$suggestions[[1]]$title #> [1] \"Use collapsible advanced filters\" #>  #> [[3]]$suggestions[[1]]$details #> [1] \"Place seldom-used filters in accordion sections or 'Show more' toggles.\" #>  #> [[3]]$suggestions[[1]]$components #> [1] \"bslib::accordion\"        \"shiny::conditionalPanel\" #>  #> [[3]]$suggestions[[1]]$rationale #> [1] \"Reveals complexity on demand without overwhelming the interface.\" #>  #> [[3]]$suggestions[[1]]$score #> [1] 0.88 #>  #>  #> [[3]]$suggestions[[2]] #> [[3]]$suggestions[[2]]$title #> [1] \"Implement drill-down navigation\" #>  #> [[3]]$suggestions[[2]]$details #> [1] \"Allow users to start with summaries and progressively reveal details.\" #>  #> [[3]]$suggestions[[2]]$components #> [1] \"shiny::actionButton\"  \"DT::datatable\"        \"reactable::reactable\" #>  #> [[3]]$suggestions[[2]]$rationale #> [1] \"Matches user mental models of exploration from general to specific.\" #>  #> [[3]]$suggestions[[2]]$score #> [1] 0.84 #>  #>  #>  #>  #> [[4]] #> [[4]]$concept #> [1] \"Processing Fluency\" #>  #> [[4]]$suggestions #> [[4]]$suggestions[[1]] #> [[4]]$suggestions[[1]]$title #> [1] \"Apply Processing Fluency principles\" #>  #> [[4]]$suggestions[[1]]$details #> [1] \"Consider how Processing Fluency applies to your breathable layout design.\" #>  #> [[4]]$suggestions[[1]]$components #> [1] \"bslib::card\"           \"shiny::fluidRow\"       \"bslib::layout_columns\" #>  #> [[4]]$suggestions[[1]]$rationale #> [1] \"Systematic application of Processing Fluency can improve user experience.\" #>  #> [[4]]$suggestions[[1]]$score #> [1] 0.75 #>  #>  #>  #>   summary(structure_result) #> === BID Framework: Structure Stage Summary === #>  #> Metadata: #>    layout_type : breathable  #>    auto_selected_layout : Yes  #>    concepts_count : 4  #>    suggestion_groups_count : 4  #>    stage_number : 4  #>    stage_number_previous : 3  #>    total_stages : 5  #>  #> Stage Data: #>    stage : Structure  #>    layout : breathable  #>    concepts : Cognitive Load Theory, Visual Hierarchy, Progressive Disclosure, Processing F...  #>    previous_problem : Users struggle with information overload  #>    previous_theory : Processing Fluency  #>    suggestions : list(concept = \"Cognitive Load Theory\", suggestions = list(list(title = \"Limi...  #>  #> Generated: 2025-09-22 21:00:51"},{"path":"https://jrwinget.github.io/bidux/reference/bid_suggest_components.html","id":null,"dir":"Reference","previous_headings":"","what":"Suggest UI Components Based on BID Framework Analysis — bid_suggest_components","title":"Suggest UI Components Based on BID Framework Analysis — bid_suggest_components","text":"function analyzes results BID framework stages suggests appropriate UI components popular R packages like shiny, bslib, DT, etc. suggestions based design principles user needs identified BID process.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_suggest_components.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Suggest UI Components Based on BID Framework Analysis — bid_suggest_components","text":"","code":"bid_suggest_components(bid_stage, package = NULL)"},{"path":"https://jrwinget.github.io/bidux/reference/bid_suggest_components.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Suggest UI Components Based on BID Framework Analysis — bid_suggest_components","text":"bid_stage tibble output BID framework stage function package Optional character string specifying package focus suggestions . Options include \"shiny\", \"bslib\", \"DT\", \"plotly\", \"reactable\", \"htmlwidgets\". NULL, suggestions packages provided.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_suggest_components.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Suggest UI Components Based on BID Framework Analysis — bid_suggest_components","text":"tibble containing component suggestions relevance scores","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_suggest_components.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Suggest UI Components Based on BID Framework Analysis — bid_suggest_components","text":"","code":"if (interactive()) {   # After completing BID stages   notice_result <- bid_notice(     problem = \"Users struggle with complex data\",     theory = \"Cognitive Load Theory\"   )    # Get all component suggestions   bid_suggest_components(notice_result)    # Get only bslib suggestions   bid_suggest_components(notice_result, package = \"bslib\")    # Get shiny-specific suggestions   bid_suggest_components(notice_result, package = \"shiny\") }"},{"path":"https://jrwinget.github.io/bidux/reference/bid_telemetry.html","id":null,"dir":"Reference","previous_headings":"","what":"Concise telemetry analysis with tidy output — bid_telemetry","title":"Concise telemetry analysis with tidy output — bid_telemetry","text":"Preferred modern interface telemetry analysis. Returns clean tibble identified issues without legacy list structure. Use function new workflows need backward compatibility.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_telemetry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concise telemetry analysis with tidy output — bid_telemetry","text":"","code":"bid_telemetry(path, format = NULL, thresholds = list())"},{"path":"https://jrwinget.github.io/bidux/reference/bid_telemetry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concise telemetry analysis with tidy output — bid_telemetry","text":"path File path telemetry data (SQLite database JSON log file) format Optional format specification (\"sqlite\" \"json\"). NULL, auto-detected file extension. thresholds Optional list threshold parameters: - unused_input_threshold: percentage sessions input considered unused (default: 0.05) - delay_threshold_seconds: seconds delay considered problematic (default: 30) - error_rate_threshold: percentage sessions errors considered problematic (default: 0.1) - navigation_threshold: percentage sessions visiting page considered underused (default: 0.2) - rapid_change_window: seconds within multiple changes indicate confusion (default: 10) - rapid_change_count: number changes within window flag confusion (default: 5)","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_telemetry.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Concise telemetry analysis with tidy output — bid_telemetry","text":"tibble class \"bid_issues_tbl\" structured issue metadata","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_telemetry.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Concise telemetry analysis with tidy output — bid_telemetry","text":"","code":"if (FALSE) { # \\dontrun{ # Modern workflow issues <- bid_telemetry(\"telemetry.sqlite\") high_priority <- issues[issues$severity %in% c(\"critical\", \"high\"), ]  # Use with bridges for BID workflow   top_issue <- issues[1, ] notice <- bid_notice_issue(top_issue, previous_stage = interpret_stage) } # }"},{"path":"https://jrwinget.github.io/bidux/reference/bid_validate.html","id":null,"dir":"Reference","previous_headings":"","what":"Document User Validation Stage in BID Framework — bid_validate","title":"Document User Validation Stage in BID Framework — bid_validate","text":"function documents validation stage, user tests refines dashboard. represents stage 5 BID framework.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_validate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Document User Validation Stage in BID Framework — bid_validate","text":"","code":"bid_validate(   previous_stage,   summary_panel = NULL,   collaboration = NULL,   next_steps = NULL,   include_exp_design = TRUE,   include_telemetry = TRUE,   telemetry_refs = NULL,   include_empower_tools = TRUE )"},{"path":"https://jrwinget.github.io/bidux/reference/bid_validate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Document User Validation Stage in BID Framework — bid_validate","text":"previous_stage tibble list output earlier BID stage function. summary_panel character string describing final summary panel key insight presentation. collaboration character string describing dashboard enables collaboration sharing. next_steps character vector string describing recommended next steps implementation iteration. include_exp_design Logical indicating whether include experiment design suggestions. Default TRUE. include_telemetry Logical indicating whether include telemetry tracking monitoring suggestions. Default TRUE. telemetry_refs Optional character vector named list specifying specific telemetry reference points include validation steps. provided, integrated telemetry tracking recommendations provenance information. include_empower_tools Logical indicating whether include context-aware empowerment tool suggestions. Default TRUE.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_validate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Document User Validation Stage in BID Framework — bid_validate","text":"tibble containing documented information \"Validate\" stage.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_validate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Document User Validation Stage in BID Framework — bid_validate","text":"","code":"validate_result <- bid_interpret(     central_question = \"How can we improve delivery efficiency?\",     data_story = list(       hook = \"Too many delays\",       context = \"Excessive shipments\",       tension = \"User frustration\",       resolution = \"Increase delivery channels\"     )   ) |>   bid_notice(     problem  = \"Issue with dropdown menus\",     evidence = \"User testing indicated delays\"   ) |>   bid_anticipate(     bias_mitigations = list(       anchoring = \"Provide reference points\",       framing = \"Use gain-framed messaging\"     )   ) |>   bid_structure() |>   bid_validate(    include_exp_design = FALSE,    include_telemetry = TRUE,    include_empower_tools = TRUE   ) #> Stage 1 (Interpret) completed. #>   - Central question: How can we improve delivery efficiency? #>   - Your data story has all key elements. Focus on making each component compelling and relevant. #>   - Your central question is appropriately scoped. #>   - No user personas defined  #> Auto-suggested theory: Hick's Law (confidence: 90%) #> Stage 2 (Notice) completed. (40% complete) #>   - Problem: Issue with dropdown menus #>   - Theory: Hick's Law (auto-suggested) #>   - Evidence: User testing indicated delays #>   - Theory confidence: 90% #>   - Next: Use bid_anticipate() for Stage 3  #> Added accessibility mitigation based on layout context. #> Found partial match: Anchoring Effect #> Found partial match: Framing & Loss Aversion #> Found partial match: Accessibility Contrast #> Stage 3 (Anticipate) completed. #>   - Bias mitigations: 3 defined #>   - Accessibility considerations included #>   - Key suggestions: anchoring mitigation: Always show reference points like previous period, budget, or industry average., framing mitigation: Toggle between progress (65% complete) and gap (35% remaining) framing., accessibility mitigation: Test color combinations with WebAIM's contrast checker to meet WCAG standards.  #> ℹ Auto-selected layout: breathable #> ℹ Selected 'breathable' as safe default to ensure clean, uncluttered layout. #> Warning: Layout auto-selection is deprecated and will be removed in bidux 0.4.0. The BID framework will focus on concept-based suggestions instead. Existing code will continue to work until 0.4.0. #> ℹ Tip: Learn more about any concept via bid_concept(\"<concept>\"). #> Stage 4 (Structure) completed. #>   - Auto-selected layout: breathable #>   - Concept groups generated: 3 #>   - Total concepts: 3  #> ℹ Suggested summary panel: Dashboard provides clear summary of key insights with actionable recommendations #> ℹ Suggested collaboration features: Enable team sharing and collaborative decision-making features #> ℹ Suggested next steps: #> • Conduct user testing with target audience to validate design decisions #> • Implement the structured layout with proper visual hierarchy #> • Test accessibility features across different devices and assistive #> technologies #> • Implement telemetry tracking for user interactions and pain points #> • Set up monitoring dashboards to track key performance indicators #> • Plan post-launch telemetry analysis to validate design improvements #> • Document successful patterns and lessons learned for future projects #> • Plan iterative improvements based on user feedback and analytics #> Stage 5 (Validate) completed. #>   - Summary panel: Dashboard provides clear summary of key insight... #>   - Collaboration: Enable team sharing and collaborative decision-... #>   - Next steps: 8 items defined #>   - Consider adding user empowerment tools to enhance collaboration   summary(validate_result) #> === BID Framework: Validate Stage Summary === #>  #> Metadata: #>    stage_number : 5  #>    total_stages : 5  #>    validation_status : completed  #>    has_summary_panel : Yes  #>    has_collaboration : Yes  #>    next_steps_count : 8  #>    include_exp_design : No  #>    include_telemetry : Yes  #>    include_empower_tools : Yes  #>  #> Stage Data: #>    stage : Validate  #>    summary_panel : Dashboard provides clear summary of key insights with actionable recommendations  #>    collaboration : Enable team sharing and collaborative decision-making features  #>    next_steps : Conduct user testing with target audience to validate design decisions; Imple...  #>    previous_bias : anchoring: Provide reference points; framing: Use gain-framed messaging; acce...  #>    previous_layout : breathable  #>    previous_concepts : Cognitive Load Theory, Visual Hierarchy, Progressive Disclosure  #>    suggestions : Consider adding user empowerment tools to enhance collaboration  #>  #> Generated: 2025-09-22 21:00:52"},{"path":"https://jrwinget.github.io/bidux/reference/bidux-package.html","id":null,"dir":"Reference","previous_headings":"","what":"bidux: Behavioral Insight Design: A Toolkit for Integrating Behavioral Science in UI/UX Design — bidux-package","title":"bidux: Behavioral Insight Design: A Toolkit for Integrating Behavioral Science in UI/UX Design — bidux-package","text":"Provides framework toolkit guide 'shiny' developers implementing Behavioral Insight Design (BID) framework. package offers functions documenting five stages (Notice, Interpret, Structure, Anticipate, Validate), along comprehensive concept dictionary.","code":""},{"path":[]},{"path":"https://jrwinget.github.io/bidux/reference/bidux-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"bidux: Behavioral Insight Design: A Toolkit for Integrating Behavioral Science in UI/UX Design — bidux-package","text":"Maintainer: Jeremy Winget contact@jrwinget.com (ORCID)","code":""},{"path":"https://jrwinget.github.io/bidux/reference/build_concept_group.html","id":null,"dir":"Reference","previous_headings":"","what":"Build suggestions for a specific concept — build_concept_group","title":"Build suggestions for a specific concept — build_concept_group","text":"Build suggestions specific concept Build suggestions specific concept","code":""},{"path":"https://jrwinget.github.io/bidux/reference/build_concept_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build suggestions for a specific concept — build_concept_group","text":"","code":"build_concept_group(concept, chosen_layout, previous_stage)  build_concept_group(concept, chosen_layout, previous_stage)"},{"path":"https://jrwinget.github.io/bidux/reference/build_concept_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build suggestions for a specific concept — build_concept_group","text":"concept Name concept generate suggestions chosen_layout Selected layout type previous_stage Previous stage data","code":""},{"path":"https://jrwinget.github.io/bidux/reference/build_concept_group.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build suggestions for a specific concept — build_concept_group","text":"List concept name suggestions List concept name suggestions","code":""},{"path":"https://jrwinget.github.io/bidux/reference/build_groups_with_suggestions.html","id":null,"dir":"Reference","previous_headings":"","what":"Build suggestion groups organized by concept — build_groups_with_suggestions","title":"Build suggestion groups organized by concept — build_groups_with_suggestions","text":"Build suggestion groups organized concept Build suggestion groups organized concept","code":""},{"path":"https://jrwinget.github.io/bidux/reference/build_groups_with_suggestions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build suggestion groups organized by concept — build_groups_with_suggestions","text":"","code":"build_groups_with_suggestions(concepts_final, chosen_layout, previous_stage)  build_groups_with_suggestions(concepts_final, chosen_layout, previous_stage)"},{"path":"https://jrwinget.github.io/bidux/reference/build_groups_with_suggestions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build suggestion groups organized by concept — build_groups_with_suggestions","text":"concepts_final Final list concepts generate suggestions chosen_layout Selected layout type previous_stage Previous stage data context","code":""},{"path":"https://jrwinget.github.io/bidux/reference/build_groups_with_suggestions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build suggestion groups organized by concept — build_groups_with_suggestions","text":"List concept groups suggestions List concept groups suggestions","code":""},{"path":"https://jrwinget.github.io/bidux/reference/create_confusion_notice.html","id":null,"dir":"Reference","previous_headings":"","what":"Create notice stage for confusion patterns — create_confusion_notice","title":"Create notice stage for confusion patterns — create_confusion_notice","text":"Create notice stage confusion patterns","code":""},{"path":"https://jrwinget.github.io/bidux/reference/create_confusion_notice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create notice stage for confusion patterns — create_confusion_notice","text":"","code":"create_confusion_notice(confusion_info, total_sessions)"},{"path":"https://jrwinget.github.io/bidux/reference/create_confusion_notice.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create notice stage for confusion patterns — create_confusion_notice","text":"confusion_info List confusion pattern information total_sessions Total number sessions","code":""},{"path":"https://jrwinget.github.io/bidux/reference/create_confusion_notice.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create notice stage for confusion patterns — create_confusion_notice","text":"bid_stage object","code":""},{"path":"https://jrwinget.github.io/bidux/reference/create_delay_notice.html","id":null,"dir":"Reference","previous_headings":"","what":"Create notice stage for delayed interactions — create_delay_notice","title":"Create notice stage for delayed interactions — create_delay_notice","text":"Create notice stage delayed interactions","code":""},{"path":"https://jrwinget.github.io/bidux/reference/create_delay_notice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create notice stage for delayed interactions — create_delay_notice","text":"","code":"create_delay_notice(delay_info, total_sessions, threshold)"},{"path":"https://jrwinget.github.io/bidux/reference/create_delay_notice.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create notice stage for delayed interactions — create_delay_notice","text":"delay_info List delay statistics total_sessions Total number sessions threshold Threshold used analysis","code":""},{"path":"https://jrwinget.github.io/bidux/reference/create_delay_notice.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create notice stage for delayed interactions — create_delay_notice","text":"bid_stage object","code":""},{"path":"https://jrwinget.github.io/bidux/reference/create_error_notice.html","id":null,"dir":"Reference","previous_headings":"","what":"Create notice stage for error patterns — create_error_notice","title":"Create notice stage for error patterns — create_error_notice","text":"Create notice stage error patterns","code":""},{"path":"https://jrwinget.github.io/bidux/reference/create_error_notice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create notice stage for error patterns — create_error_notice","text":"","code":"create_error_notice(error_info, total_sessions)"},{"path":"https://jrwinget.github.io/bidux/reference/create_error_notice.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create notice stage for error patterns — create_error_notice","text":"error_info List error pattern information total_sessions Total number sessions","code":""},{"path":"https://jrwinget.github.io/bidux/reference/create_error_notice.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create notice stage for error patterns — create_error_notice","text":"bid_stage object","code":""},{"path":"https://jrwinget.github.io/bidux/reference/create_navigation_notice.html","id":null,"dir":"Reference","previous_headings":"","what":"Create notice stage for navigation issues — create_navigation_notice","title":"Create notice stage for navigation issues — create_navigation_notice","text":"Create notice stage navigation issues","code":""},{"path":"https://jrwinget.github.io/bidux/reference/create_navigation_notice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create notice stage for navigation issues — create_navigation_notice","text":"","code":"create_navigation_notice(nav_info, total_sessions)"},{"path":"https://jrwinget.github.io/bidux/reference/create_navigation_notice.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create notice stage for navigation issues — create_navigation_notice","text":"nav_info List navigation pattern information total_sessions Total number sessions","code":""},{"path":"https://jrwinget.github.io/bidux/reference/create_navigation_notice.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create notice stage for navigation issues — create_navigation_notice","text":"bid_stage object","code":""},{"path":"https://jrwinget.github.io/bidux/reference/create_unused_input_notice.html","id":null,"dir":"Reference","previous_headings":"","what":"Create notice stage for unused input — create_unused_input_notice","title":"Create notice stage for unused input — create_unused_input_notice","text":"Create notice stage unused input","code":""},{"path":"https://jrwinget.github.io/bidux/reference/create_unused_input_notice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create notice stage for unused input — create_unused_input_notice","text":"","code":"create_unused_input_notice(input_info, total_sessions)"},{"path":"https://jrwinget.github.io/bidux/reference/create_unused_input_notice.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create notice stage for unused input — create_unused_input_notice","text":"input_info List input usage information total_sessions Total number sessions","code":""},{"path":"https://jrwinget.github.io/bidux/reference/create_unused_input_notice.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create notice stage for unused input — create_unused_input_notice","text":"bid_stage object","code":""},{"path":"https://jrwinget.github.io/bidux/reference/deduplicate_warnings_suggestions.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove duplicate warning-suggestion pairs — deduplicate_warnings_suggestions","title":"Remove duplicate warning-suggestion pairs — deduplicate_warnings_suggestions","text":"Identifies removes redundant warnings warning message duplicates information already provided suggestions. Helps clean verbose output preferring actionable suggestions warnings.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/deduplicate_warnings_suggestions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove duplicate warning-suggestion pairs — deduplicate_warnings_suggestions","text":"","code":"deduplicate_warnings_suggestions(   warnings,   suggestions,   similarity_threshold = 0.7 )"},{"path":"https://jrwinget.github.io/bidux/reference/deduplicate_warnings_suggestions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove duplicate warning-suggestion pairs — deduplicate_warnings_suggestions","text":"warnings Character vector warning messages suggestions Character vector suggestion messages similarity_threshold Similarity threshold detecting duplicates (0-1)","code":""},{"path":"https://jrwinget.github.io/bidux/reference/deduplicate_warnings_suggestions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove duplicate warning-suggestion pairs — deduplicate_warnings_suggestions","text":"List cleaned warnings suggestions","code":""},{"path":"https://jrwinget.github.io/bidux/reference/detect_telemetry_format.html","id":null,"dir":"Reference","previous_headings":"","what":"Auto-detect telemetry format from file extension — detect_telemetry_format","title":"Auto-detect telemetry format from file extension — detect_telemetry_format","text":"Auto-detect telemetry format file extension","code":""},{"path":"https://jrwinget.github.io/bidux/reference/detect_telemetry_format.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Auto-detect telemetry format from file extension — detect_telemetry_format","text":"","code":"detect_telemetry_format(path)"},{"path":"https://jrwinget.github.io/bidux/reference/detect_telemetry_format.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Auto-detect telemetry format from file extension — detect_telemetry_format","text":"path File path","code":""},{"path":"https://jrwinget.github.io/bidux/reference/detect_telemetry_format.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Auto-detect telemetry format from file extension — detect_telemetry_format","text":"Format string (\"sqlite\" \"json\")","code":""},{"path":"https://jrwinget.github.io/bidux/reference/dot-calculate_severity_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate severity metrics for an issue — .calculate_severity_metrics","title":"Calculate severity metrics for an issue — .calculate_severity_metrics","text":"Calculate severity metrics issue","code":""},{"path":"https://jrwinget.github.io/bidux/reference/dot-calculate_severity_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate severity metrics for an issue — .calculate_severity_metrics","text":"","code":".calculate_severity_metrics(issue_key, events, total_sessions)"},{"path":"https://jrwinget.github.io/bidux/reference/dot-calculate_severity_metrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate severity metrics for an issue — .calculate_severity_metrics","text":"issue_key String identifier issue events Raw events data frame total_sessions Total number sessions","code":""},{"path":"https://jrwinget.github.io/bidux/reference/dot-calculate_severity_metrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate severity metrics for an issue — .calculate_severity_metrics","text":"List severity, affected_sessions, impact_rate","code":""},{"path":"https://jrwinget.github.io/bidux/reference/dot-classify_issue_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Classify issue type from issue key — .classify_issue_type","title":"Classify issue type from issue key — .classify_issue_type","text":"Classify issue type issue key","code":""},{"path":"https://jrwinget.github.io/bidux/reference/dot-classify_issue_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Classify issue type from issue key — .classify_issue_type","text":"","code":".classify_issue_type(issue_key)"},{"path":"https://jrwinget.github.io/bidux/reference/dot-classify_issue_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classify issue type from issue key — .classify_issue_type","text":"issue_key String identifier issue","code":""},{"path":"https://jrwinget.github.io/bidux/reference/dot-classify_issue_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Classify issue type from issue key — .classify_issue_type","text":"Classified issue type","code":""},{"path":"https://jrwinget.github.io/bidux/reference/dot-create_issues_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Create tidy issues tibble from notice issues list — .create_issues_tibble","title":"Create tidy issues tibble from notice issues list — .create_issues_tibble","text":"Create tidy issues tibble notice issues list","code":""},{"path":"https://jrwinget.github.io/bidux/reference/dot-create_issues_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create tidy issues tibble from notice issues list — .create_issues_tibble","text":"","code":".create_issues_tibble(notice_issues, total_sessions, events)"},{"path":"https://jrwinget.github.io/bidux/reference/dot-create_issues_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create tidy issues tibble from notice issues list — .create_issues_tibble","text":"notice_issues List bid_stage objects telemetry analysis total_sessions Total number sessions analyzed events Raw events data frame","code":""},{"path":"https://jrwinget.github.io/bidux/reference/dot-create_issues_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create tidy issues tibble from notice issues list — .create_issues_tibble","text":"Tibble structured issue metadata","code":""},{"path":"https://jrwinget.github.io/bidux/reference/dot-flags_from_issues.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract global telemetry flags from issues and events — .flags_from_issues","title":"Extract global telemetry flags from issues and events — .flags_from_issues","text":"Extract global telemetry flags issues events","code":""},{"path":"https://jrwinget.github.io/bidux/reference/dot-flags_from_issues.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract global telemetry flags from issues and events — .flags_from_issues","text":"","code":".flags_from_issues(issues_tbl, events, thresholds)"},{"path":"https://jrwinget.github.io/bidux/reference/dot-flags_from_issues.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract global telemetry flags from issues and events — .flags_from_issues","text":"issues_tbl Tidy issues tibble events Raw events data frame thresholds Threshold parameters used analysis","code":""},{"path":"https://jrwinget.github.io/bidux/reference/dot-flags_from_issues.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract global telemetry flags from issues and events — .flags_from_issues","text":"Named list boolean flags","code":""},{"path":"https://jrwinget.github.io/bidux/reference/dot-suggest_theory_from_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Suggest theory from text with confidence scoring and messaging — .suggest_theory_from_text","title":"Suggest theory from text with confidence scoring and messaging — .suggest_theory_from_text","text":"Internal helper wraps suggest_theory_from_mappings additional confidence scoring user messaging. Factored reuse across different BID functions.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/dot-suggest_theory_from_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Suggest theory from text with confidence scoring and messaging — .suggest_theory_from_text","text":"","code":".suggest_theory_from_text(   problem_text,   evidence_text = NULL,   mappings = NULL,   show_message = TRUE )"},{"path":"https://jrwinget.github.io/bidux/reference/dot-suggest_theory_from_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Suggest theory from text with confidence scoring and messaging — .suggest_theory_from_text","text":"problem_text Clean problem description text evidence_text Clean evidence description text mappings Optional custom theory mappings show_message Whether display auto-suggestion message (default TRUE)","code":""},{"path":"https://jrwinget.github.io/bidux/reference/dot-suggest_theory_from_text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Suggest theory from text with confidence scoring and messaging — .suggest_theory_from_text","text":"List theory, confidence, auto_suggested flag","code":""},{"path":"https://jrwinget.github.io/bidux/reference/extract_stage.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract specific stage from bid_result — extract_stage","title":"Extract specific stage from bid_result — extract_stage","text":"Extract specific stage bid_result","code":""},{"path":"https://jrwinget.github.io/bidux/reference/extract_stage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract specific stage from bid_result — extract_stage","text":"","code":"extract_stage(workflow, stage)"},{"path":"https://jrwinget.github.io/bidux/reference/extract_stage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract specific stage from bid_result — extract_stage","text":"workflow bid_result object stage Character string stage name","code":""},{"path":"https://jrwinget.github.io/bidux/reference/extract_stage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract specific stage from bid_result — extract_stage","text":"bid_stage object NULL found","code":""},{"path":"https://jrwinget.github.io/bidux/reference/extract_stage1_theory.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract theory concepts from Stage 1 (Notice) — extract_stage1_theory","title":"Extract theory concepts from Stage 1 (Notice) — extract_stage1_theory","text":"Extract theory concepts Stage 1 (Notice) Extract theory concepts Stage 1 (Notice)","code":""},{"path":"https://jrwinget.github.io/bidux/reference/extract_stage1_theory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract theory concepts from Stage 1 (Notice) — extract_stage1_theory","text":"","code":"extract_stage1_theory(previous_stage)  extract_stage1_theory(previous_stage)"},{"path":"https://jrwinget.github.io/bidux/reference/extract_stage1_theory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract theory concepts from Stage 1 (Notice) — extract_stage1_theory","text":"previous_stage Previous stage data","code":""},{"path":"https://jrwinget.github.io/bidux/reference/extract_stage1_theory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract theory concepts from Stage 1 (Notice) — extract_stage1_theory","text":"Character vector theory-based concepts Character vector theory-based concepts","code":""},{"path":"https://jrwinget.github.io/bidux/reference/find_confusion_patterns.html","id":null,"dir":"Reference","previous_headings":"","what":"Find confusion patterns (rapid repeated changes) — find_confusion_patterns","title":"Find confusion patterns (rapid repeated changes) — find_confusion_patterns","text":"Find confusion patterns (rapid repeated changes)","code":""},{"path":"https://jrwinget.github.io/bidux/reference/find_confusion_patterns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find confusion patterns (rapid repeated changes) — find_confusion_patterns","text":"","code":"find_confusion_patterns(events, window_seconds = 10, min_changes = 5)"},{"path":"https://jrwinget.github.io/bidux/reference/find_confusion_patterns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find confusion patterns (rapid repeated changes) — find_confusion_patterns","text":"events Telemetry events data frame window_seconds Time window seconds min_changes Minimum changes flag confusion","code":""},{"path":"https://jrwinget.github.io/bidux/reference/find_confusion_patterns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find confusion patterns (rapid repeated changes) — find_confusion_patterns","text":"List confusion patterns","code":""},{"path":"https://jrwinget.github.io/bidux/reference/find_delayed_sessions.html","id":null,"dir":"Reference","previous_headings":"","what":"Find sessions with delayed first interaction — find_delayed_sessions","title":"Find sessions with delayed first interaction — find_delayed_sessions","text":"Find sessions delayed first interaction","code":""},{"path":"https://jrwinget.github.io/bidux/reference/find_delayed_sessions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find sessions with delayed first interaction — find_delayed_sessions","text":"","code":"find_delayed_sessions(events, threshold_seconds = 30)"},{"path":"https://jrwinget.github.io/bidux/reference/find_delayed_sessions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find sessions with delayed first interaction — find_delayed_sessions","text":"events Telemetry events data frame threshold_seconds Delay threshold seconds","code":""},{"path":"https://jrwinget.github.io/bidux/reference/find_delayed_sessions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find sessions with delayed first interaction — find_delayed_sessions","text":"List delay statistics","code":""},{"path":"https://jrwinget.github.io/bidux/reference/find_error_patterns.html","id":null,"dir":"Reference","previous_headings":"","what":"Find error patterns in telemetry — find_error_patterns","title":"Find error patterns in telemetry — find_error_patterns","text":"Find error patterns telemetry","code":""},{"path":"https://jrwinget.github.io/bidux/reference/find_error_patterns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find error patterns in telemetry — find_error_patterns","text":"","code":"find_error_patterns(events, threshold_rate = 0.1)"},{"path":"https://jrwinget.github.io/bidux/reference/find_error_patterns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find error patterns in telemetry — find_error_patterns","text":"events Telemetry events data frame threshold_rate Error rate threshold","code":""},{"path":"https://jrwinget.github.io/bidux/reference/find_error_patterns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find error patterns in telemetry — find_error_patterns","text":"List error patterns","code":""},{"path":"https://jrwinget.github.io/bidux/reference/find_navigation_dropoffs.html","id":null,"dir":"Reference","previous_headings":"","what":"Find navigation drop-offs or underused pages — find_navigation_dropoffs","title":"Find navigation drop-offs or underused pages — find_navigation_dropoffs","text":"Find navigation drop-offs underused pages","code":""},{"path":"https://jrwinget.github.io/bidux/reference/find_navigation_dropoffs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find navigation drop-offs or underused pages — find_navigation_dropoffs","text":"","code":"find_navigation_dropoffs(events, threshold = 0.2)"},{"path":"https://jrwinget.github.io/bidux/reference/find_navigation_dropoffs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find navigation drop-offs or underused pages — find_navigation_dropoffs","text":"events Telemetry events data frame threshold Minimum visit rate threshold","code":""},{"path":"https://jrwinget.github.io/bidux/reference/find_navigation_dropoffs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find navigation drop-offs or underused pages — find_navigation_dropoffs","text":"List navigation issues","code":""},{"path":"https://jrwinget.github.io/bidux/reference/find_unused_inputs.html","id":null,"dir":"Reference","previous_headings":"","what":"Find unused or under-used inputs — find_unused_inputs","title":"Find unused or under-used inputs — find_unused_inputs","text":"Find unused -used inputs","code":""},{"path":"https://jrwinget.github.io/bidux/reference/find_unused_inputs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find unused or under-used inputs — find_unused_inputs","text":"","code":"find_unused_inputs(events, threshold = 0.05)"},{"path":"https://jrwinget.github.io/bidux/reference/find_unused_inputs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find unused or under-used inputs — find_unused_inputs","text":"events Telemetry events data frame threshold Percentage threshold considering input unused","code":""},{"path":"https://jrwinget.github.io/bidux/reference/find_unused_inputs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find unused or under-used inputs — find_unused_inputs","text":"List unused input information","code":""},{"path":"https://jrwinget.github.io/bidux/reference/format_label.html","id":null,"dir":"Reference","previous_headings":"","what":"Format field label based on output format — format_label","title":"Format field label based on output format — format_label","text":"Format field label based output format","code":""},{"path":"https://jrwinget.github.io/bidux/reference/format_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format field label based on output format — format_label","text":"","code":"format_label(label, format, type = \"field\")"},{"path":"https://jrwinget.github.io/bidux/reference/format_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format field label based on output format — format_label","text":"label Base label text format Output format (\"markdown\" \"text\") type Label type (\"header\", \"field\", \"section\")","code":""},{"path":"https://jrwinget.github.io/bidux/reference/format_label.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format field label based on output format — format_label","text":"Formatted label string","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_accessibility_recommendations.html","id":null,"dir":"Reference","previous_headings":"","what":"Get accessibility recommendations for a given context — get_accessibility_recommendations","title":"Get accessibility recommendations for a given context — get_accessibility_recommendations","text":"Get accessibility recommendations given context","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_accessibility_recommendations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get accessibility recommendations for a given context — get_accessibility_recommendations","text":"","code":"get_accessibility_recommendations(context = \"\", guidelines = NULL)"},{"path":"https://jrwinget.github.io/bidux/reference/get_accessibility_recommendations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get accessibility recommendations for a given context — get_accessibility_recommendations","text":"context Character string describing interface context guidelines Optional custom accessibility guidelines","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_accessibility_recommendations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get accessibility recommendations for a given context — get_accessibility_recommendations","text":"Character vector relevant accessibility recommendations","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_cognitive_load_suggestions.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Cognitive Load Theory suggestions — get_cognitive_load_suggestions","title":"Generate Cognitive Load Theory suggestions — get_cognitive_load_suggestions","text":"Generate Cognitive Load Theory suggestions Generate Cognitive Load Theory suggestions","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_cognitive_load_suggestions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Cognitive Load Theory suggestions — get_cognitive_load_suggestions","text":"","code":"get_cognitive_load_suggestions(chosen_layout, previous_stage)  get_cognitive_load_suggestions(chosen_layout, previous_stage)"},{"path":"https://jrwinget.github.io/bidux/reference/get_concept_bias_mappings.html","id":null,"dir":"Reference","previous_headings":"","what":"Get bias mitigation strategies for concepts — get_concept_bias_mappings","title":"Get bias mitigation strategies for concepts — get_concept_bias_mappings","text":"Get bias mitigation strategies concepts","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_concept_bias_mappings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get bias mitigation strategies for concepts — get_concept_bias_mappings","text":"","code":"get_concept_bias_mappings(concepts, mappings = NULL)"},{"path":"https://jrwinget.github.io/bidux/reference/get_concept_bias_mappings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get bias mitigation strategies for concepts — get_concept_bias_mappings","text":"concepts Character vector concept names mappings Optional custom concept-bias mappings","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_concept_bias_mappings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get bias mitigation strategies for concepts — get_concept_bias_mappings","text":"Data frame relevant bias mappings","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_concepts_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function to get concepts data from external files — get_concepts_data","title":"Internal function to get concepts data from external files — get_concepts_data","text":"Internal function get concepts data external files","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_concepts_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function to get concepts data from external files — get_concepts_data","text":"","code":"get_concepts_data()"},{"path":"https://jrwinget.github.io/bidux/reference/get_concepts_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal function to get concepts data from external files — get_concepts_data","text":"tibble BID framework concepts","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_consolidated_suggestion_rules.html","id":null,"dir":"Reference","previous_headings":"","what":"Centralized Suggestion Rules for BID Framework — get_consolidated_suggestion_rules","title":"Centralized Suggestion Rules for BID Framework — get_consolidated_suggestion_rules","text":"file consolidates simple suggestion rules Interpret, Notice, Validate stages reduce duplication provide consistent messaging across BID framework. Get consolidated suggestion rules BID stages Returns structured list suggestion rules BID stage. rules help generate consistent, context-aware suggestions based user input patterns common issues.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_consolidated_suggestion_rules.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Centralized Suggestion Rules for BID Framework — get_consolidated_suggestion_rules","text":"","code":"get_consolidated_suggestion_rules()"},{"path":"https://jrwinget.github.io/bidux/reference/get_consolidated_suggestion_rules.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Centralized Suggestion Rules for BID Framework — get_consolidated_suggestion_rules","text":"Named list suggestion rules stage","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_default_concepts_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get default concepts data (fallback when external file unavailable) — get_default_concepts_data","title":"Get default concepts data (fallback when external file unavailable) — get_default_concepts_data","text":"Get default concepts data (fallback external file unavailable)","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_default_concepts_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get default concepts data (fallback when external file unavailable) — get_default_concepts_data","text":"","code":"get_default_concepts_data()"},{"path":"https://jrwinget.github.io/bidux/reference/get_default_concepts_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get default concepts data (fallback when external file unavailable) — get_default_concepts_data","text":"tibble default BID framework concepts","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_default_layout_mappings.html","id":null,"dir":"Reference","previous_headings":"","what":"Get default layout mappings (fallback) — get_default_layout_mappings","title":"Get default layout mappings (fallback) — get_default_layout_mappings","text":"Get default layout mappings (fallback)","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_default_layout_mappings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get default layout mappings (fallback) — get_default_layout_mappings","text":"","code":"get_default_layout_mappings()"},{"path":"https://jrwinget.github.io/bidux/reference/get_default_layout_mappings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get default layout mappings (fallback) — get_default_layout_mappings","text":"Data frame default layout mappings","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_default_theory_mappings.html","id":null,"dir":"Reference","previous_headings":"","what":"Get default theory mappings (fallback) — get_default_theory_mappings","title":"Get default theory mappings (fallback) — get_default_theory_mappings","text":"Get default theory mappings (fallback)","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_default_theory_mappings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get default theory mappings (fallback) — get_default_theory_mappings","text":"","code":"get_default_theory_mappings()"},{"path":"https://jrwinget.github.io/bidux/reference/get_default_theory_mappings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get default theory mappings (fallback) — get_default_theory_mappings","text":"Data frame default theory mappings","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_dual_processing_suggestions.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Dual-Processing Theory suggestions — get_dual_processing_suggestions","title":"Generate Dual-Processing Theory suggestions — get_dual_processing_suggestions","text":"Generate Dual-Processing Theory suggestions Generate Dual-Processing Theory suggestions","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_dual_processing_suggestions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Dual-Processing Theory suggestions — get_dual_processing_suggestions","text":"","code":"get_dual_processing_suggestions(chosen_layout, previous_stage)  get_dual_processing_suggestions(chosen_layout, previous_stage)"},{"path":"https://jrwinget.github.io/bidux/reference/get_fallback_suggestion.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate fallback suggestions for stages without specific rules — get_fallback_suggestion","title":"Generate fallback suggestions for stages without specific rules — get_fallback_suggestion","text":"Provides generic helpful suggestions BID stages specific rules defined rules match context.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_fallback_suggestion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate fallback suggestions for stages without specific rules — get_fallback_suggestion","text":"","code":"get_fallback_suggestion(stage_name)"},{"path":"https://jrwinget.github.io/bidux/reference/get_fallback_suggestion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate fallback suggestions for stages without specific rules — get_fallback_suggestion","text":"stage_name Name BID stage","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_fallback_suggestion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate fallback suggestions for stages without specific rules — get_fallback_suggestion","text":"Character string fallback suggestion","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_generic_suggestions.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate generic suggestions for unrecognized concepts — get_generic_suggestions","title":"Generate generic suggestions for unrecognized concepts — get_generic_suggestions","text":"Generate generic suggestions unrecognized concepts Generate generic suggestions unrecognized concepts","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_generic_suggestions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate generic suggestions for unrecognized concepts — get_generic_suggestions","text":"","code":"get_generic_suggestions(concept, chosen_layout, previous_stage)  get_generic_suggestions(concept, chosen_layout, previous_stage)"},{"path":"https://jrwinget.github.io/bidux/reference/get_information_scent_suggestions.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Information Scent suggestions — get_information_scent_suggestions","title":"Generate Information Scent suggestions — get_information_scent_suggestions","text":"Generate Information Scent suggestions Generate Information Scent suggestions","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_information_scent_suggestions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Information Scent suggestions — get_information_scent_suggestions","text":"","code":"get_information_scent_suggestions(chosen_layout, previous_stage)  get_information_scent_suggestions(chosen_layout, previous_stage)"},{"path":"https://jrwinget.github.io/bidux/reference/get_layout_concepts.html","id":null,"dir":"Reference","previous_headings":"","what":"Get concepts recommended for a layout — get_layout_concepts","title":"Get concepts recommended for a layout — get_layout_concepts","text":"Get concepts recommended layout","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_layout_concepts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get concepts recommended for a layout — get_layout_concepts","text":"","code":"get_layout_concepts(layout, mappings = NULL)"},{"path":"https://jrwinget.github.io/bidux/reference/get_layout_concepts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get concepts recommended for a layout — get_layout_concepts","text":"layout Character string indicating layout type mappings Optional custom layout mappings","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_layout_concepts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get concepts recommended for a layout — get_layout_concepts","text":"Character vector recommended concepts","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Get metadata from bid_stage object — get_metadata","title":"Get metadata from bid_stage object — get_metadata","text":"Get metadata bid_stage object","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get metadata from bid_stage object — get_metadata","text":"","code":"get_metadata(x)"},{"path":"https://jrwinget.github.io/bidux/reference/get_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get metadata from bid_stage object — get_metadata","text":"x bid_stage object","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get metadata from bid_stage object — get_metadata","text":"List metadata","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_onboarding_suggestions.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate User Onboarding suggestions — get_onboarding_suggestions","title":"Generate User Onboarding suggestions — get_onboarding_suggestions","text":"Generate User Onboarding suggestions Generate User Onboarding suggestions","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_onboarding_suggestions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate User Onboarding suggestions — get_onboarding_suggestions","text":"","code":"get_onboarding_suggestions(chosen_layout, previous_stage)  get_onboarding_suggestions(chosen_layout, previous_stage)"},{"path":"https://jrwinget.github.io/bidux/reference/get_progressive_disclosure_suggestions.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Progressive Disclosure suggestions — get_progressive_disclosure_suggestions","title":"Generate Progressive Disclosure suggestions — get_progressive_disclosure_suggestions","text":"Generate Progressive Disclosure suggestions Generate Progressive Disclosure suggestions","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_progressive_disclosure_suggestions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Progressive Disclosure suggestions — get_progressive_disclosure_suggestions","text":"","code":"get_progressive_disclosure_suggestions(chosen_layout, previous_stage)  get_progressive_disclosure_suggestions(chosen_layout, previous_stage)"},{"path":"https://jrwinget.github.io/bidux/reference/get_proximity_suggestions.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Principle of Proximity suggestions — get_proximity_suggestions","title":"Generate Principle of Proximity suggestions — get_proximity_suggestions","text":"Generate Principle Proximity suggestions Generate Principle Proximity suggestions","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_proximity_suggestions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Principle of Proximity suggestions — get_proximity_suggestions","text":"","code":"get_proximity_suggestions(chosen_layout, previous_stage)  get_proximity_suggestions(chosen_layout, previous_stage)"},{"path":"https://jrwinget.github.io/bidux/reference/get_stage.html","id":null,"dir":"Reference","previous_headings":"","what":"Get stage name from bid_stage object — get_stage","title":"Get stage name from bid_stage object — get_stage","text":"Get stage name bid_stage object","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_stage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get stage name from bid_stage object — get_stage","text":"","code":"get_stage(x)"},{"path":"https://jrwinget.github.io/bidux/reference/get_stage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get stage name from bid_stage object — get_stage","text":"x bid_stage object","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_stage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get stage name from bid_stage object — get_stage","text":"Character string stage name","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_visual_hierarchy_suggestions.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Visual Hierarchy suggestions — get_visual_hierarchy_suggestions","title":"Generate Visual Hierarchy suggestions — get_visual_hierarchy_suggestions","text":"Generate Visual Hierarchy suggestions Generate Visual Hierarchy suggestions","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_visual_hierarchy_suggestions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Visual Hierarchy suggestions — get_visual_hierarchy_suggestions","text":"","code":"get_visual_hierarchy_suggestions(chosen_layout, previous_stage)  get_visual_hierarchy_suggestions(chosen_layout, previous_stage)"},{"path":"https://jrwinget.github.io/bidux/reference/infer_concepts_from_story.html","id":null,"dir":"Reference","previous_headings":"","what":"Infer concepts from Stage 2 (Interpret) story elements — infer_concepts_from_story","title":"Infer concepts from Stage 2 (Interpret) story elements — infer_concepts_from_story","text":"Infer concepts Stage 2 (Interpret) story elements Infer concepts Stage 2 (Interpret) story elements","code":""},{"path":"https://jrwinget.github.io/bidux/reference/infer_concepts_from_story.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Infer concepts from Stage 2 (Interpret) story elements — infer_concepts_from_story","text":"","code":"infer_concepts_from_story(previous_stage)  infer_concepts_from_story(previous_stage)"},{"path":"https://jrwinget.github.io/bidux/reference/infer_concepts_from_story.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Infer concepts from Stage 2 (Interpret) story elements — infer_concepts_from_story","text":"previous_stage Previous stage data","code":""},{"path":"https://jrwinget.github.io/bidux/reference/infer_concepts_from_story.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Infer concepts from Stage 2 (Interpret) story elements — infer_concepts_from_story","text":"Character vector story-inferred concepts Character vector story-inferred concepts","code":""},{"path":"https://jrwinget.github.io/bidux/reference/is_bid_stage.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if object is a bid_stage — is_bid_stage","title":"Check if object is a bid_stage — is_bid_stage","text":"Check object bid_stage","code":""},{"path":"https://jrwinget.github.io/bidux/reference/is_bid_stage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if object is a bid_stage — is_bid_stage","text":"","code":"is_bid_stage(x)"},{"path":"https://jrwinget.github.io/bidux/reference/is_bid_stage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if object is a bid_stage — is_bid_stage","text":"x Object test","code":""},{"path":"https://jrwinget.github.io/bidux/reference/is_bid_stage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if object is a bid_stage — is_bid_stage","text":"Logical indicating object bid_stage","code":""},{"path":"https://jrwinget.github.io/bidux/reference/is_complete.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if workflow is complete (has all 5 stages) — is_complete","title":"Check if workflow is complete (has all 5 stages) — is_complete","text":"Check workflow complete (5 stages)","code":""},{"path":"https://jrwinget.github.io/bidux/reference/is_complete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if workflow is complete (has all 5 stages) — is_complete","text":"","code":"is_complete(x)"},{"path":"https://jrwinget.github.io/bidux/reference/is_complete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if workflow is complete (has all 5 stages) — is_complete","text":"x bid_result object","code":""},{"path":"https://jrwinget.github.io/bidux/reference/is_complete.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if workflow is complete (has all 5 stages) — is_complete","text":"Logical indicating workflow complete","code":""},{"path":"https://jrwinget.github.io/bidux/reference/layout_rationale.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate layout selection rationale — layout_rationale","title":"Generate layout selection rationale — layout_rationale","text":"Provides concise explanation particular layout chosen based content analysis previous stage.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/layout_rationale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate layout selection rationale — layout_rationale","text":"","code":"layout_rationale(previous_stage, chosen)"},{"path":"https://jrwinget.github.io/bidux/reference/layout_rationale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate layout selection rationale — layout_rationale","text":"previous_stage tibble list output earlier BID stage chosen Character string chosen layout type","code":""},{"path":"https://jrwinget.github.io/bidux/reference/layout_rationale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate layout selection rationale — layout_rationale","text":"Character string explanation layout choice","code":""},{"path":"https://jrwinget.github.io/bidux/reference/load_accessibility_guidelines.html","id":null,"dir":"Reference","previous_headings":"","what":"Load accessibility guidelines — load_accessibility_guidelines","title":"Load accessibility guidelines — load_accessibility_guidelines","text":"Load accessibility guidelines","code":""},{"path":"https://jrwinget.github.io/bidux/reference/load_accessibility_guidelines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load accessibility guidelines — load_accessibility_guidelines","text":"","code":"load_accessibility_guidelines(custom_guidelines = NULL)"},{"path":"https://jrwinget.github.io/bidux/reference/load_accessibility_guidelines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load accessibility guidelines — load_accessibility_guidelines","text":"custom_guidelines Optional custom guidelines data frame","code":""},{"path":"https://jrwinget.github.io/bidux/reference/load_accessibility_guidelines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load accessibility guidelines — load_accessibility_guidelines","text":"Data frame accessibility guidelines","code":""},{"path":"https://jrwinget.github.io/bidux/reference/load_concept_bias_mappings.html","id":null,"dir":"Reference","previous_headings":"","what":"Load concept-bias mappings — load_concept_bias_mappings","title":"Load concept-bias mappings — load_concept_bias_mappings","text":"Load concept-bias mappings","code":""},{"path":"https://jrwinget.github.io/bidux/reference/load_concept_bias_mappings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load concept-bias mappings — load_concept_bias_mappings","text":"","code":"load_concept_bias_mappings(custom_mappings = NULL)"},{"path":"https://jrwinget.github.io/bidux/reference/load_concept_bias_mappings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load concept-bias mappings — load_concept_bias_mappings","text":"custom_mappings Optional custom mappings data frame","code":""},{"path":"https://jrwinget.github.io/bidux/reference/load_concept_bias_mappings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load concept-bias mappings — load_concept_bias_mappings","text":"Data frame concept-bias mappings","code":""},{"path":"https://jrwinget.github.io/bidux/reference/load_layout_mappings.html","id":null,"dir":"Reference","previous_headings":"","what":"Load layout-concept mappings — load_layout_mappings","title":"Load layout-concept mappings — load_layout_mappings","text":"Load layout-concept mappings","code":""},{"path":"https://jrwinget.github.io/bidux/reference/load_layout_mappings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load layout-concept mappings — load_layout_mappings","text":"","code":"load_layout_mappings(custom_mappings = NULL)"},{"path":"https://jrwinget.github.io/bidux/reference/load_layout_mappings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load layout-concept mappings — load_layout_mappings","text":"custom_mappings Optional custom mappings data frame","code":""},{"path":"https://jrwinget.github.io/bidux/reference/load_layout_mappings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load layout-concept mappings — load_layout_mappings","text":"Data frame layout-concept mappings","code":""},{"path":"https://jrwinget.github.io/bidux/reference/load_theory_mappings.html","id":null,"dir":"Reference","previous_headings":"","what":"Load theory mappings from external file or use defaults — load_theory_mappings","title":"Load theory mappings from external file or use defaults — load_theory_mappings","text":"Load theory mappings external file use defaults","code":""},{"path":"https://jrwinget.github.io/bidux/reference/load_theory_mappings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load theory mappings from external file or use defaults — load_theory_mappings","text":"","code":"load_theory_mappings(custom_mappings = NULL)"},{"path":"https://jrwinget.github.io/bidux/reference/load_theory_mappings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load theory mappings from external file or use defaults — load_theory_mappings","text":"custom_mappings Optional custom mappings data frame","code":""},{"path":"https://jrwinget.github.io/bidux/reference/load_theory_mappings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load theory mappings from external file or use defaults — load_theory_mappings","text":"Data frame theory mappings","code":""},{"path":"https://jrwinget.github.io/bidux/reference/new_bid_result.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a BID result collection object (internal constructor) — new_bid_result","title":"Create a BID result collection object (internal constructor) — new_bid_result","text":"Create BID result collection object (internal constructor)","code":""},{"path":"https://jrwinget.github.io/bidux/reference/new_bid_result.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a BID result collection object (internal constructor) — new_bid_result","text":"","code":"new_bid_result(stages)"},{"path":"https://jrwinget.github.io/bidux/reference/new_bid_result.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a BID result collection object (internal constructor) — new_bid_result","text":"stages List bid_stage objects","code":""},{"path":"https://jrwinget.github.io/bidux/reference/new_bid_result.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a BID result collection object (internal constructor) — new_bid_result","text":"Object class 'bid_result'","code":""},{"path":"https://jrwinget.github.io/bidux/reference/new_bid_stage.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a BID stage result object (internal constructor) — new_bid_stage","title":"Create a BID stage result object (internal constructor) — new_bid_stage","text":"Create BID stage result object (internal constructor)","code":""},{"path":"https://jrwinget.github.io/bidux/reference/new_bid_stage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a BID stage result object (internal constructor) — new_bid_stage","text":"","code":"new_bid_stage(stage, data, metadata = list())"},{"path":"https://jrwinget.github.io/bidux/reference/new_bid_stage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a BID stage result object (internal constructor) — new_bid_stage","text":"stage Character string indicating stage name data Tibble containing stage data metadata List containing additional metadata","code":""},{"path":"https://jrwinget.github.io/bidux/reference/new_bid_stage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a BID stage result object (internal constructor) — new_bid_stage","text":"Object class 'bid_stage'","code":""},{"path":"https://jrwinget.github.io/bidux/reference/normalize_telemetry_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize telemetry column names — normalize_telemetry_columns","title":"Normalize telemetry column names — normalize_telemetry_columns","text":"Normalize telemetry column names","code":""},{"path":"https://jrwinget.github.io/bidux/reference/normalize_telemetry_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize telemetry column names — normalize_telemetry_columns","text":"","code":"normalize_telemetry_columns(events)"},{"path":"https://jrwinget.github.io/bidux/reference/normalize_telemetry_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize telemetry column names — normalize_telemetry_columns","text":"events Raw events data frame","code":""},{"path":"https://jrwinget.github.io/bidux/reference/normalize_telemetry_columns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize telemetry column names — normalize_telemetry_columns","text":"Normalized data frame","code":""},{"path":"https://jrwinget.github.io/bidux/reference/print.bid_issues.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for bid_issues objects — print.bid_issues","title":"Print method for bid_issues objects — print.bid_issues","text":"Displays triage view telemetry issues severity-based prioritization provides reminder legacy list access backward compatibility.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/print.bid_issues.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for bid_issues objects — print.bid_issues","text":"","code":"# S3 method for class 'bid_issues' print(x, ...)"},{"path":"https://jrwinget.github.io/bidux/reference/print.bid_issues.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for bid_issues objects — print.bid_issues","text":"x bid_issues object bid_ingest_telemetry() ... Additional arguments (unused)","code":""},{"path":"https://jrwinget.github.io/bidux/reference/print.bid_issues.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print method for bid_issues objects — print.bid_issues","text":"Invisible x (chaining)","code":""},{"path":"https://jrwinget.github.io/bidux/reference/print.bid_result.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for BID result objects — print.bid_result","title":"Print method for BID result objects — print.bid_result","text":"Print method BID result objects","code":""},{"path":"https://jrwinget.github.io/bidux/reference/print.bid_result.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for BID result objects — print.bid_result","text":"","code":"# S3 method for class 'bid_result' print(x, ...)"},{"path":"https://jrwinget.github.io/bidux/reference/print.bid_result.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for BID result objects — print.bid_result","text":"x bid_result object ... Additional arguments","code":""},{"path":"https://jrwinget.github.io/bidux/reference/print.bid_result.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print method for BID result objects — print.bid_result","text":"Returns input bid_result object invisibly (class: c(\"bid_result\", \"list\")). method called side effects: printing workflow overview console showing completion status, stage progression, key information completed BID stage. invisible return supports method chaining emphasizing console summary output.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/print.bid_stage.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for BID stage objects — print.bid_stage","title":"Print method for BID stage objects — print.bid_stage","text":"Print method BID stage objects","code":""},{"path":"https://jrwinget.github.io/bidux/reference/print.bid_stage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for BID stage objects — print.bid_stage","text":"","code":"# S3 method for class 'bid_stage' print(x, ...)"},{"path":"https://jrwinget.github.io/bidux/reference/print.bid_stage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for BID stage objects — print.bid_stage","text":"x bid_stage object ... Additional arguments","code":""},{"path":"https://jrwinget.github.io/bidux/reference/print.bid_stage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print method for BID stage objects — print.bid_stage","text":"Returns input bid_stage object invisibly (class: c(\"bid_stage\", \"tbl_df\", \"tbl\", \"data.frame\")). method called side effects: printing formatted summary BID stage console, including stage progress, key stage-specific information, usage suggestions. invisible return allows method chaining maintaining primary purpose console output.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/rank_and_sort_suggestions.html","id":null,"dir":"Reference","previous_headings":"","what":"Rank and sort suggestions within each group — rank_and_sort_suggestions","title":"Rank and sort suggestions within each group — rank_and_sort_suggestions","text":"Rank sort suggestions within group Rank sort suggestions within group","code":""},{"path":"https://jrwinget.github.io/bidux/reference/rank_and_sort_suggestions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rank and sort suggestions within each group — rank_and_sort_suggestions","text":"","code":"rank_and_sort_suggestions(groups, previous_stage, chosen_layout)  rank_and_sort_suggestions(groups, previous_stage, chosen_layout)"},{"path":"https://jrwinget.github.io/bidux/reference/rank_and_sort_suggestions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rank and sort suggestions within each group — rank_and_sort_suggestions","text":"groups List concept groups suggestions previous_stage Previous stage data scoring adjustments chosen_layout Selected layout type","code":""},{"path":"https://jrwinget.github.io/bidux/reference/rank_and_sort_suggestions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rank and sort suggestions within each group — rank_and_sort_suggestions","text":"List groups ranked suggestions List groups ranked suggestions","code":""},{"path":"https://jrwinget.github.io/bidux/reference/read_telemetry_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Read telemetry data from file — read_telemetry_data","title":"Read telemetry data from file — read_telemetry_data","text":"Read telemetry data file","code":""},{"path":"https://jrwinget.github.io/bidux/reference/read_telemetry_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read telemetry data from file — read_telemetry_data","text":"","code":"read_telemetry_data(path, format)"},{"path":"https://jrwinget.github.io/bidux/reference/read_telemetry_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read telemetry data from file — read_telemetry_data","text":"path File path format Format (\"sqlite\" \"json\")","code":""},{"path":"https://jrwinget.github.io/bidux/reference/read_telemetry_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read telemetry data from file — read_telemetry_data","text":"Data frame events","code":""},{"path":"https://jrwinget.github.io/bidux/reference/read_telemetry_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Read telemetry from JSON log file — read_telemetry_json","title":"Read telemetry from JSON log file — read_telemetry_json","text":"Read telemetry JSON log file","code":""},{"path":"https://jrwinget.github.io/bidux/reference/read_telemetry_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read telemetry from JSON log file — read_telemetry_json","text":"","code":"read_telemetry_json(path)"},{"path":"https://jrwinget.github.io/bidux/reference/read_telemetry_json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read telemetry from JSON log file — read_telemetry_json","text":"path JSON log file path","code":""},{"path":"https://jrwinget.github.io/bidux/reference/read_telemetry_json.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read telemetry from JSON log file — read_telemetry_json","text":"Data frame events","code":""},{"path":"https://jrwinget.github.io/bidux/reference/read_telemetry_sqlite.html","id":null,"dir":"Reference","previous_headings":"","what":"Read telemetry from SQLite database — read_telemetry_sqlite","title":"Read telemetry from SQLite database — read_telemetry_sqlite","text":"Read telemetry SQLite database","code":""},{"path":"https://jrwinget.github.io/bidux/reference/read_telemetry_sqlite.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read telemetry from SQLite database — read_telemetry_sqlite","text":"","code":"read_telemetry_sqlite(path)"},{"path":"https://jrwinget.github.io/bidux/reference/read_telemetry_sqlite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read telemetry from SQLite database — read_telemetry_sqlite","text":"path SQLite database path","code":""},{"path":"https://jrwinget.github.io/bidux/reference/read_telemetry_sqlite.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read telemetry from SQLite database — read_telemetry_sqlite","text":"Data frame events","code":""},{"path":"https://jrwinget.github.io/bidux/reference/safe_lower.html","id":null,"dir":"Reference","previous_headings":"","what":"Safely convert text to lowercase with null handling — safe_lower","title":"Safely convert text to lowercase with null handling — safe_lower","text":"Helper function safely converts text lowercase handling NULL, NA, non-character values gracefully.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/safe_lower.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Safely convert text to lowercase with null handling — safe_lower","text":"","code":"safe_lower(x)"},{"path":"https://jrwinget.github.io/bidux/reference/safe_lower.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Safely convert text to lowercase with null handling — safe_lower","text":"x Input value convert lowercase string","code":""},{"path":"https://jrwinget.github.io/bidux/reference/safe_lower.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Safely convert text to lowercase with null handling — safe_lower","text":"Character string lowercase, empty string input NULL/NA","code":""},{"path":"https://jrwinget.github.io/bidux/reference/safe_stage_data_story_access.html","id":null,"dir":"Reference","previous_headings":"","what":"Safe access to data_story elements from previous stage — safe_stage_data_story_access","title":"Safe access to data_story elements from previous stage — safe_stage_data_story_access","text":"Safe access data_story elements previous stage","code":""},{"path":"https://jrwinget.github.io/bidux/reference/safe_stage_data_story_access.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Safe access to data_story elements from previous stage — safe_stage_data_story_access","text":"","code":"safe_stage_data_story_access(previous_stage, element)"},{"path":"https://jrwinget.github.io/bidux/reference/safe_stage_data_story_access.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Safe access to data_story elements from previous stage — safe_stage_data_story_access","text":"previous_stage Previous stage data element Name data_story element access","code":""},{"path":"https://jrwinget.github.io/bidux/reference/safe_stage_data_story_access.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Safe access to data_story elements from previous stage — safe_stage_data_story_access","text":"Character string empty string found","code":""},{"path":"https://jrwinget.github.io/bidux/reference/structure_suggestions.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate ranked, concept-grouped, actionable UI/UX suggestions — structure_suggestions","title":"Generate ranked, concept-grouped, actionable UI/UX suggestions — structure_suggestions","text":"Creates structured suggestions organized UX concepts specific component recommendations rationales. Suggestions ranked relevance grouped concept systematic implementation. Creates structured suggestions organized UX concepts specific component recommendations rationales. Suggestions ranked relevance grouped concept systematic implementation.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/structure_suggestions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate ranked, concept-grouped, actionable UI/UX suggestions — structure_suggestions","text":"","code":"structure_suggestions(previous_stage, chosen_layout, concepts = NULL)  structure_suggestions(previous_stage, chosen_layout, concepts = NULL)"},{"path":"https://jrwinget.github.io/bidux/reference/structure_suggestions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate ranked, concept-grouped, actionable UI/UX suggestions — structure_suggestions","text":"previous_stage tibble list output earlier BID stage chosen_layout Character string selected layout type concepts Optional character vector additional concepts include","code":""},{"path":"https://jrwinget.github.io/bidux/reference/structure_suggestions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate ranked, concept-grouped, actionable UI/UX suggestions — structure_suggestions","text":"List concept groups ranked suggestions List concept groups ranked suggestions","code":""},{"path":"https://jrwinget.github.io/bidux/reference/structure_suggestions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate ranked, concept-grouped, actionable UI/UX suggestions — structure_suggestions","text":"function combines concepts multiple sources: Stage 1 theory (Notice) Stage 2 inferred concepts (keywords story) Optional user-provided concepts suggestion includes: title: Brief actionable description details: Specific implementation guidance components: Shiny/bslib component recommendations rationale: 1-2 sentence explanation score: Relevance ranking (0-1) function combines concepts multiple sources: Stage 1 theory (Notice) Stage 2 inferred concepts (keywords story) Optional user-provided concepts suggestion includes: title: Brief actionable description details: Specific implementation guidance components: Shiny/bslib component recommendations rationale: 1-2 sentence explanation score: Relevance ranking (0-1)","code":""},{"path":"https://jrwinget.github.io/bidux/reference/suggest_layout_from_previous.html","id":null,"dir":"Reference","previous_headings":"","what":"Suggest layout based on previous stage content using heuristics — suggest_layout_from_previous","title":"Suggest layout based on previous stage content using heuristics — suggest_layout_from_previous","text":"Automatically suggests appropriate layout type based content analysis previous BID stages. Uses deterministic heuristics match keywords problem descriptions, evidence, data story, contextual information layout types best address identified issues.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/suggest_layout_from_previous.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Suggest layout based on previous stage content using heuristics — suggest_layout_from_previous","text":"","code":"suggest_layout_from_previous(previous_stage, telemetry_flags = NULL)"},{"path":"https://jrwinget.github.io/bidux/reference/suggest_layout_from_previous.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Suggest layout based on previous stage content using heuristics — suggest_layout_from_previous","text":"previous_stage tibble list output earlier BID stage function containing stage data potential fields like problem, evidence, central_question, data_story, etc. telemetry_flags Optional named list telemetry flags bid_flags() Used adjust layout recommendations based observed behavior patterns","code":""},{"path":"https://jrwinget.github.io/bidux/reference/suggest_layout_from_previous.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Suggest layout based on previous stage content using heuristics — suggest_layout_from_previous","text":"Character string indicating suggested layout type (\"breathable\", \"dual_process\", \"grid\", \"card\", \"tabs\", fallback)","code":""},{"path":"https://jrwinget.github.io/bidux/reference/suggest_layout_from_previous.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Suggest layout based on previous stage content using heuristics — suggest_layout_from_previous","text":"heuristics follow priority order: breathable - content suggests information overload, confusion, cognitive load issues dual_process - content mentions overview vs detail, quick vs deep, two-mode interactions grid - content focuses grouping, clustering, visual hierarchy, comparing related metrics card - content mentions cards, chunks, tiles, modular blocks, per-item summaries tabs - content suggests sections, categories, progressive disclosure, avoids tabs telemetry shows tab drop-breathable - fallback unmatched cases","code":""},{"path":"https://jrwinget.github.io/bidux/reference/suggest_theory_from_mappings.html","id":null,"dir":"Reference","previous_headings":"","what":"Suggest theory based on problem and evidence using mappings — suggest_theory_from_mappings","title":"Suggest theory based on problem and evidence using mappings — suggest_theory_from_mappings","text":"Suggest theory based problem evidence using mappings","code":""},{"path":"https://jrwinget.github.io/bidux/reference/suggest_theory_from_mappings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Suggest theory based on problem and evidence using mappings — suggest_theory_from_mappings","text":"","code":"suggest_theory_from_mappings(problem, evidence = NULL, mappings = NULL)"},{"path":"https://jrwinget.github.io/bidux/reference/suggest_theory_from_mappings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Suggest theory based on problem and evidence using mappings — suggest_theory_from_mappings","text":"problem Character string describing problem evidence Optional character string supporting evidence mappings Optional custom theory mappings","code":""},{"path":"https://jrwinget.github.io/bidux/reference/suggest_theory_from_mappings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Suggest theory based on problem and evidence using mappings — suggest_theory_from_mappings","text":"Character string suggested theory","code":""},{"path":"https://jrwinget.github.io/bidux/reference/summary.bid_result.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary method for BID result objects — summary.bid_result","title":"Summary method for BID result objects — summary.bid_result","text":"Summary method BID result objects","code":""},{"path":"https://jrwinget.github.io/bidux/reference/summary.bid_result.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary method for BID result objects — summary.bid_result","text":"","code":"# S3 method for class 'bid_result' summary(object, ...)"},{"path":"https://jrwinget.github.io/bidux/reference/summary.bid_result.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary method for BID result objects — summary.bid_result","text":"object bid_result object ... Additional arguments","code":""},{"path":"https://jrwinget.github.io/bidux/reference/summary.bid_result.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary method for BID result objects — summary.bid_result","text":"Returns input bid_result object invisibly (class: c(\"bid_result\", \"list\")). method called side effects: printing detailed workflow analysis console including completion statistics, duration metrics, comprehensive stage--stage breakdowns key data BID framework stage. invisible return facilitates method chaining focusing comprehensive console reporting.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/summary.bid_stage.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary method for BID stage objects — summary.bid_stage","title":"Summary method for BID stage objects — summary.bid_stage","text":"Summary method BID stage objects","code":""},{"path":"https://jrwinget.github.io/bidux/reference/summary.bid_stage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary method for BID stage objects — summary.bid_stage","text":"","code":"# S3 method for class 'bid_stage' summary(object, ...)"},{"path":"https://jrwinget.github.io/bidux/reference/summary.bid_stage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary method for BID stage objects — summary.bid_stage","text":"object bid_stage object ... Additional arguments","code":""},{"path":"https://jrwinget.github.io/bidux/reference/summary.bid_stage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary method for BID stage objects — summary.bid_stage","text":"Returns input bid_stage object invisibly (class: c(\"bid_stage\", \"tbl_df\", \"tbl\", \"data.frame\")). method called side effects: printing comprehensive summary console including stage metadata, non-empty data columns, timestamp information. invisible return enables method chaining prioritizing detailed console output display.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/validate_bid_result.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate BID result object — validate_bid_result","title":"Validate BID result object — validate_bid_result","text":"Validate BID result object","code":""},{"path":"https://jrwinget.github.io/bidux/reference/validate_bid_result.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate BID result object — validate_bid_result","text":"","code":"validate_bid_result(x)"},{"path":"https://jrwinget.github.io/bidux/reference/validate_bid_result.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate BID result object — validate_bid_result","text":"x Object validate","code":""},{"path":"https://jrwinget.github.io/bidux/reference/validate_bid_result.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate BID result object — validate_bid_result","text":"TRUE valid, throws error otherwise","code":""},{"path":"https://jrwinget.github.io/bidux/reference/validate_bid_stage.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate BID stage object — validate_bid_stage","title":"Validate BID stage object — validate_bid_stage","text":"Validate BID stage object","code":""},{"path":"https://jrwinget.github.io/bidux/reference/validate_bid_stage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate BID stage object — validate_bid_stage","text":"","code":"validate_bid_stage(x)"},{"path":"https://jrwinget.github.io/bidux/reference/validate_bid_stage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate BID stage object — validate_bid_stage","text":"x Object validate","code":""},{"path":"https://jrwinget.github.io/bidux/reference/validate_bid_stage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate BID stage object — validate_bid_stage","text":"TRUE valid, throws error otherwise","code":""},{"path":[]},{"path":"https://jrwinget.github.io/bidux/news/index.html","id":"id_-bidux-031-2025-09-07","dir":"Changelog","previous_headings":"","what":"# bidux 0.3.1 (2025-09-07)","title":"# bidux 0.3.1 (2025-09-07)","text":"CRAN release: 2025-09-07","code":""},{"path":"https://jrwinget.github.io/bidux/news/index.html","id":"new-features-0-3-1","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"# bidux 0.3.1 (2025-09-07)","text":"Hybrid telemetry objects backward compatibility. bid_ingest_telemetry() now returns hybrid bid_issues object behaves list (maintaining legacy compatibility) providing enhanced functionality new methods: print.bid_issues(), as_tibble.bid_issues(), bid_flags(). Modern tidy telemetry API. New bid_telemetry() function provides clean, tidy approach returns organized issues tibbles (bid_issues_tbl class) better integration dplyr workflows data analysis pipelines. Bridge functions telemetry--BID integration. New functions seamlessly connect telemetry issues BID stages: bid_notice_issue() - Convert individual issue Notice stage bid_notices() - Batch process multiple issues Notice stages bid_address() - Sugar function quick issue addressing bid_pipeline() - Process first N issues limits Telemetry-informed structure selection. bid_structure() now accepts telemetry_flags parameter adjust layout selection suggestion scoring based real user behavior patterns (e.g., avoiding tabs layout navigation issues detected). Enhanced validation telemetry references. bid_validate() now includes optional telemetry_refs parameter append provenance information linking improvements back specific telemetry findings.","code":""},{"path":"https://jrwinget.github.io/bidux/news/index.html","id":"major-fixes-0-3-1","dir":"Changelog","previous_headings":"","what":"MAJOR FIXES","title":"# bidux 0.3.1 (2025-09-07)","text":"Corrected stage numbering. Fixed stage progression proper BID framework order: Interpret (1) → Notice (2) → Anticipate (3) → Structure (4) → Validate (5). Added temporary migration support stage_number_previous attributes session-level migration notices. Consolidated suggestion system. Unified suggestion rules Interpret, Notice, Validate stages R/suggest_rules.R, reducing code duplication ensuring consistent messaging across framework. Removed duplicate warning-suggestion pairs. Cleaned verbose output preferring actionable suggestions redundant warnings content overlapped.","code":""},{"path":"https://jrwinget.github.io/bidux/news/index.html","id":"improvements-0-3-1","dir":"Changelog","previous_headings":"","what":"IMPROVEMENTS","title":"# bidux 0.3.1 (2025-09-07)","text":"Enhanced Structure suggestions organization. Consolidated structure-specific suggestion functions R/structure_suggest.R documented schema improved concept-based grouping. Improved telemetry flag extraction. New .flags_from_issues() helper function creates comprehensive boolean flags telemetry patterns better layout suggestion customization. Better suggestion theory integration. Factored .suggest_theory_from_text() reuse across Notice stage functions, improving consistency theory recommendations. Migration support utilities. Added .show_stage_numbering_notice() .format_telemetry_refs_for_validation() helper functions smooth version migration.","code":""},{"path":"https://jrwinget.github.io/bidux/news/index.html","id":"breaking-changes-0-3-1","dir":"Changelog","previous_headings":"","what":"BREAKING CHANGES","title":"# bidux 0.3.1 (2025-09-07)","text":"None","code":""},{"path":"https://jrwinget.github.io/bidux/news/index.html","id":"documentation-updates-0-3-1","dir":"Changelog","previous_headings":"","what":"DOCUMENTATION UPDATES","title":"# bidux 0.3.1 (2025-09-07)","text":"Updated Getting Started vignette new telemetry workflow examples corrected stage numbering throughout. Enhanced Telemetry Integration vignette showcasing new API hybrid objects, bridge functions, tidy workflow examples. Comprehensive test coverage new bid_issues class methods, bridge functions, edge cases. Also, expanded coverage previously missed lines across bid_anticipate, bid_concepts, suggest_rules, utility functions.","code":""},{"path":"https://jrwinget.github.io/bidux/news/index.html","id":"migration-notes-0-3-1","dir":"Changelog","previous_headings":"","what":"MIGRATION NOTES","title":"# bidux 0.3.1 (2025-09-07)","text":"users upgrading 0.3.0: Note: bid_ingest_telemetry() soft-deprecated 0.4.0 favor bid_telemetry(). Current usage remains fully supported.","code":"# Legacy telemetry code continues to work legacy_notices <- bid_ingest_telemetry(\"telemetry.sqlite\") length(legacy_notices)  # Still works as before  # But now also provides enhanced features as_tibble(legacy_notices)  # New: get tidy issues view bid_flags(legacy_notices)  # New: extract telemetry flags  # New modern API for tidy workflows issues <- bid_telemetry(\"telemetry.sqlite\") critical <- issues |> filter(severity == \"critical\") notices <- bid_notices(critical, previous_stage = interpret_result)"},{"path":"https://jrwinget.github.io/bidux/news/index.html","id":"bug-fixes-0-3-1","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"# bidux 0.3.1 (2025-09-07)","text":"Fixed concept-based bias mitigation generation. bid_anticipate() now correctly generates concept-specific biases (e.g., “attention bias” “belief perseverance” Visual Hierarchy) instead falling back generic biases. Improved stage flow validation. Updated validation logic support flexible BID workflow inner stages (Notice, Anticipate, Structure) can occur order, maintaining proper validation entry exit points. Enhanced previous_stage handling. Fixed validation errors passing data.frame objects BID functions improving stage name extraction logic. Fixed stage progression validation warnings tests correcting test sequences follow proper BID framework order Updated suggestion pattern matching tests DRY refactor consolidation","code":""},{"path":"https://jrwinget.github.io/bidux/news/index.html","id":"deprecations-0-3-1","dir":"Changelog","previous_headings":"","what":"DEPRECATIONS","title":"# bidux 0.3.1 (2025-09-07)","text":"Layout auto-selection deprecated. layout selection feature bid_structure() removed bidux 0.4.0 reduce complexity focus concept-based suggestions. Existing code continues work deprecation warnings. Layout-specific bias mitigations deprecated. layout-dependent bias mappings bid_anticipate() removed bidux 0.4.0 favor concept-driven bias mitigations. Existing code continues work deprecation warnings.","code":""},{"path":"https://jrwinget.github.io/bidux/news/index.html","id":"id_-bidux-030-2025-08-29","dir":"Changelog","previous_headings":"","what":"# bidux 0.3.0 (2025-08-29)","title":"# bidux 0.3.0 (2025-08-29)","text":"CRAN release: 2025-08-29","code":""},{"path":"https://jrwinget.github.io/bidux/news/index.html","id":"breaking-changes-0-3-0","dir":"Changelog","previous_headings":"","what":"BREAKING CHANGES","title":"# bidux 0.3.0 (2025-08-29)","text":"BID stage order updated : Interpret → Notice → Anticipate → Structure → Validate. reflects natural workflow maintaining flexibility iterative usage. bid_notice() longer accepts target_audience parameter. Audience information now managed bid_interpret() stage using data_story user_personas parameters. function warn deprecated parameter provided. bid_anticipate() longer accepts interaction_principles parameter. parameter removed favor new include_accessibility parameter (default: TRUE). function warn deprecated parameter provided. Field name changes consistency: previous_question → previous_central_question previous_story_hook → previous_hook user_personas → personas (bid_interpret output) bid_structure() longer accepts layout parameter. Layout now automatically selected based content analysis previous stages using deterministic heuristics. function abort helpful error message deprecated layout parameter provided.","code":""},{"path":"https://jrwinget.github.io/bidux/news/index.html","id":"new-features-0-3-0","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"# bidux 0.3.0 (2025-08-29)","text":"Enhanced bid_validate() experiment/telemetry/empowerment flags. New optional parameters: include_exp_design (default: TRUE), include_telemetry (default: TRUE), include_empower_tools (default: TRUE) context-aware suggestions. Accessibility-focused bias mitigation bid_anticipate(). New include_accessibility parameter adds layout-specific accessibility recommendations bias mitigation strategies. Improved context propagation. previous_problem, previous_theory, previous_audience, previous_personas now properly propagate entire pipeline Validate stage. Automatic layout inference bid_structure(). Uses sophisticated heuristics analyze content previous BID stages (problem, evidence, data story elements) automatically select appropriate layout (breathable, dual_process, grid, card, tabs). Ranked, concept-grouped actionable suggestions. bid_structure() now returns structured UI/UX recommendations organized UX concepts (e.g., Cognitive Load Theory, Progressive Disclosure) specific Shiny/bslib component pointers, implementation rationales, relevance scores (0-1). Telemetry-aware suggestion scoring. Layout selection suggestion ranking now consider telemetry data, automatically avoiding problematic patterns (e.g., avoiding tabs nav_dropoff_tabs detected). Enhanced CLI feedback. Clear messages show auto-selected layout rationale, plus helpful tip using bid_concept(\"<concept>\") learn detected concepts.","code":""},{"path":"https://jrwinget.github.io/bidux/news/index.html","id":"improvements-0-3-0","dir":"Changelog","previous_headings":"","what":"IMPROVEMENTS","title":"# bidux 0.3.0 (2025-08-29)","text":"Field name normalization. Added normalize_previous_stage() helper function handle legacy field names ensure consistent data flow stages. Enhanced helper functions. Updated utility functions time stubbing support (.now()) improved safe column access patterns. Comprehensive test coverage. Added extensive tests heuristic branches, suggestion structure validation, CLI message verification, telemetry integration, error handling deprecated layout parameter.","code":""},{"path":"https://jrwinget.github.io/bidux/news/index.html","id":"bug-fixes-0-3-0","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"# bidux 0.3.0 (2025-08-29)","text":"None.","code":""},{"path":"https://jrwinget.github.io/bidux/news/index.html","id":"migration-guide-0-3-0","dir":"Changelog","previous_headings":"","what":"MIGRATION GUIDE","title":"# bidux 0.3.0 (2025-08-29)","text":"update existing code bidux 0.3.0:","code":"# OLD (0.2.x) notice <- bid_notice(   problem = \"Users confused\",   evidence = \"High error rate\",   target_audience = \"Analysts\" )  # NEW (0.3.0) notice <- bid_notice(   problem = \"Users confused\",   evidence = \"High error rate\" )  interpret <- bid_interpret(   previous_stage = notice,   data_story = list(     audience = \"Analysts\"  # Move audience here   ) )  # OLD (0.2.x) anticipate <- bid_anticipate(   previous_stage = structure_result,   interaction_principles = list(hover = \"Show details on hover\") )  # NEW (0.3.0) anticipate <- bid_anticipate(   previous_stage = structure_result,   include_accessibility = TRUE  # New accessibility focus )  # Field name updates in downstream code: # Access previous_central_question instead of previous_question # Access previous_hook instead of previous_story_hook"},{"path":"https://jrwinget.github.io/bidux/news/index.html","id":"deprecated-and-defunct-0-3-0","dir":"Changelog","previous_headings":"","what":"DEPRECATED AND DEFUNCT","title":"# bidux 0.3.0 (2025-08-29)","text":"target_audience parameter bid_notice() (deprecated, removed 0.4.0) interaction_principles parameter bid_anticipate() (deprecated, removed 0.4.0)","code":""},{"path":"https://jrwinget.github.io/bidux/news/index.html","id":"documentation-fixes-0-3-0","dir":"Changelog","previous_headings":"","what":"DOCUMENTATION FIXES","title":"# bidux 0.3.0 (2025-08-29)","text":"Updated function documentation reflect parameter changes new stage ordering Updated examples use new recommended workflow: Interpret → Notice → Anticipate → Structure → Validate","code":""},{"path":[]},{"path":"https://jrwinget.github.io/bidux/news/index.html","id":"new-features-0-2-0","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"# bidux 0.2.0 (2025-08-05)","text":"Telemetry-driven UX friction detection. New bid_ingest_telemetry() ingests shiny.telemetry data (SQLite JSON), applies configurable thresholds, detects friction patterns (e.g., unused inputs, delayed interactions, error clusters, navigation drop-offs, confusion), generates BID notices reports. Includes robust input validation, format auto-detection, clearer CLI summaries. (#18) Telemetry integration vignette. new vignette shows set shiny.telemetry, run bid_ingest_telemetry(), interpret indicators, customize thresholds within BID workflow. (#18)","code":""},{"path":"https://jrwinget.github.io/bidux/news/index.html","id":"minor-improvements-0-2-0","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"# bidux 0.2.0 (2025-08-05)","text":"Modular printing display rules. print.bid_stage() refactored print_stage_header(), print_stage_content(), print_stage_footer() reusable field printing stage-specific display rules clearer, consistent output. Consistent data loading. Introduced load_external_data(); concept, theory, bias, layout, accessibility loaders now share one code path sensible fallbacks. Suggestion generation & validation utilities. Consolidated helpers: generate_stage_suggestions(), get_default_suggestion_rules(), evaluate_suggestion_condition(); standardized parameter checks validate_character_param(), validate_list_param(), validate_bid_stage_params(). Stronger parsing & normalization. Telemetry JSON handling now supports JSON arrays JSON-lines; column normalization validates standardizes inputs; percentage/label formatting made consistent. Safety & style passes. Safer subsetting (drop = FALSE), safer indexing (seq_len()), tightened conditionals/bracing indentation, aligned function signatures lists, general formatting cleanup readability maintainability.","code":""},{"path":"https://jrwinget.github.io/bidux/news/index.html","id":"bug-fixes-0-2-0","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"# bidux 0.2.0 (2025-08-05)","text":"None.","code":""},{"path":"https://jrwinget.github.io/bidux/news/index.html","id":"deprecated-and-defunct-0-2-0","dir":"Changelog","previous_headings":"","what":"DEPRECATED AND DEFUNCT","title":"# bidux 0.2.0 (2025-08-05)","text":"None.","code":""},{"path":"https://jrwinget.github.io/bidux/news/index.html","id":"documentation-fixes-0-2-0","dir":"Changelog","previous_headings":"","what":"DOCUMENTATION FIXES","title":"# bidux 0.2.0 (2025-08-05)","text":"Docs & guides. Added CONTRIBUTING guidelines Code Conduct; standardized GitHub issue templates clear, consistent reports. (#16) README overhaul. Reorganized overview, features, installation, concise quick start; added telemetry section; improved examples; suppressed noisy messages README generation; added CRAN downloads badge. (#15, #16) Reference updates. Exported documented bid_ingest_telemetry(); refreshed man/ pages package index reflect new modules function locations. (#18)","code":""},{"path":"https://jrwinget.github.io/bidux/news/index.html","id":"refactoring--internals-no-user-facing-api-changes-0-2-0","dir":"Changelog","previous_headings":"","what":"REFACTORING & INTERNALS (no user-facing API changes)","title":"# bidux 0.2.0 (2025-08-05)","text":"File organization. Standardized dash-separated filenames (e.g., bid-classes.R, bid-concepts.R); centralized telemetry ingestion/analysis/notice creation telemetry.R; moved shared helpers utils.R. Namespace & dependencies. Added DBI RSQLite Imports, importFrom(stats, complete.cases); relaxed version constraints cli, dplyr, jsonlite; expanded NAMESPACE explicit imports.","code":""},{"path":"https://jrwinget.github.io/bidux/news/index.html","id":"id_-bidux-010-2025-06-16","dir":"Changelog","previous_headings":"","what":"# bidux 0.1.0 (2025-06-16)","title":"# bidux 0.1.0 (2025-06-16)","text":"CRAN release: 2025-06-13 Initial CRAN submission. Complete implementation Behavioral Insight Design (BID) framework 5 sequential stages: Notice, Interpret, Structure, Anticipate, Validate. Added initial concept dictionary 41+ behavioral science principles. Added UI component suggestions major R packages: shiny, bslib, DT, plotly, reactable, htmlwidgets. Added multi-format reporting capabilities (text, HTML, markdown) bid_report(). Added intelligent theory auto-suggestion system bid_notice(). Added comprehensive validation error handling across functions. Added three detailed vignettes: “Getting Started”, “Introduction BID”, “Concepts Reference”.","code":""}]
