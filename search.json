[{"path":"https://jrwinget.github.io/bidux/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 bidux authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://jrwinget.github.io/bidux/articles/concepts-reference.html","id":"bid-framework-concepts-practical-implementation","dir":"Articles","previous_headings":"","what":"BID Framework Concepts: Practical Implementation","title":"BID Framework Concepts: Practical Implementation","text":"Behavior Insight Design (BID) framework integrates psychological principles UI/UX design Shiny dashboards. guide focuses practical implementation key concepts using modern packages like {bslib}, {reactable}, {echarts4r}.","code":""},{"path":"https://jrwinget.github.io/bidux/articles/concepts-reference.html","id":"framework-overview","dir":"Articles","previous_headings":"BID Framework Concepts: Practical Implementation","what":"Framework Overview","title":"BID Framework Concepts: Practical Implementation","text":"BID framework consists 5 sequential stages, incorporating specific psychological principles: Notice: Identify friction points (Cognitive Load, Visual Hierarchy) Interpret: Understand user needs (Data Storytelling, User Personas) Structure: Organize information (Layout Patterns, Breathable Designs) Anticipate: Mitigate biases (Anchoring, Framing) Validate: Empower user (Peak-End Rule, Collaboration)","code":""},{"path":"https://jrwinget.github.io/bidux/articles/concepts-reference.html","id":"stage-1-notice---reducing-cognitive-load","dir":"Articles","previous_headings":"BID Framework Concepts: Practical Implementation","what":"Stage 1: Notice - Reducing Cognitive Load","title":"BID Framework Concepts: Practical Implementation","text":"Cognitive load amount mental effort required use interface. High cognitive load leads user frustration errors.","code":""},{"path":"https://jrwinget.github.io/bidux/articles/concepts-reference.html","id":"using-bslib-to-reduce-cognitive-load","dir":"Articles","previous_headings":"BID Framework Concepts: Practical Implementation > Stage 1: Notice - Reducing Cognitive Load","what":"Using {bslib} to Reduce Cognitive Load","title":"BID Framework Concepts: Practical Implementation","text":"","code":"ui <- page_fillable(   theme = bs_theme(     version = 5,     bg = \"#FFFFFF\",     fg = \"#333333\"   ),   # Clear section headers   layout_column_wrap(     width = 12,     card(       card_header(         h2(\"Sales Dashboard\", class = \"fs-4\")       ),       card_body(         p(\"Key sales metrics for Q2 2025\")       )     )   ),   # Limited filters grouped by purpose   layout_column_wrap(     width = 12,     card(       card_header(\"Filters\"),       card_body(         layout_column_wrap(           width = 1 / 3,           # Time-related filters grouped together           card(             card_body(               h5(\"Time Period\"),               dateRangeInput(                 \"date_range\",                 NULL,                 start = Sys.Date() - 90,                 end = Sys.Date()               ),               checkboxInput(\"compare_prev\", \"Compare to previous period\")             )           ),           # Product-related filters grouped together           card(             card_body(               h5(\"Products\"),               selectInput(                 \"category\",                 \"Category:\",                 choices = c(\"All\", \"Electronics\", \"Clothing\", \"Home\")               )             )           ),           # Region-related filters grouped together           card(             card_body(               h5(\"Regions\"),               selectInput(                 \"region\", \"Region:\",                 choices = c(\"All\", \"North\", \"South\", \"East\", \"West\")               )             )           )         )       )     )   ),   # Main content with clear organization   layout_column_wrap(     width = 1 / 3,     # Key metrics with visual simplicity     value_box(       title = \"Total Revenue\",       value = \"$1.24M\",       showcase = bsicons::bs_icon(\"graph-up-arrow\"),       theme = value_box_theme(         bg = \"#f8f9fa\",         fg = \"#333333\"       )     ),     value_box(       title = \"Orders\",       value = \"8,490\",       showcase = bsicons::bs_icon(\"cart\"),       theme = value_box_theme(         bg = \"#f8f9fa\",         fg = \"#333333\"       )     ),     value_box(       title = \"Avg Order Value\",       value = \"$146\",       showcase = bsicons::bs_icon(\"tag\"),       theme = value_box_theme(         bg = \"#f8f9fa\",         fg = \"#333333\"       )     )   ),   # Main charts with progressive disclosure   accordion(     accordion_panel(       \"Sales Performance\",       echarts4rOutput(\"sales_chart\", height = \"300px\")     ),     accordion_panel(       \"Category Breakdown\",       echarts4rOutput(\"category_chart\", height = \"300px\")     ),     accordion_panel(       \"Regional Analysis\",       echarts4rOutput(\"region_chart\", height = \"300px\")     )   ) )"},{"path":"https://jrwinget.github.io/bidux/articles/concepts-reference.html","id":"key-design-principles-for-reducing-cognitive-load","dir":"Articles","previous_headings":"BID Framework Concepts: Practical Implementation > Stage 1: Notice - Reducing Cognitive Load","what":"Key Design Principles for Reducing Cognitive Load:","title":"BID Framework Concepts: Practical Implementation","text":"Group related controls information together Use consistent layouts patterns Implement progressive disclosure hide complexity Limit number choices presented Use clear visual hierarchy guide attention","code":""},{"path":"https://jrwinget.github.io/bidux/articles/concepts-reference.html","id":"stage-2-interpret---implementing-data-storytelling","dir":"Articles","previous_headings":"BID Framework Concepts: Practical Implementation","what":"Stage 2: Interpret - Implementing Data Storytelling","title":"BID Framework Concepts: Practical Implementation","text":"Data storytelling helps users understand meaning behind data narrative structure hook, context, tension, resolution.","code":""},{"path":"https://jrwinget.github.io/bidux/articles/concepts-reference.html","id":"using-echarts4r-for-data-storytelling","dir":"Articles","previous_headings":"BID Framework Concepts: Practical Implementation > Stage 2: Interpret - Implementing Data Storytelling","what":"Using {echarts4r} for Data Storytelling","title":"BID Framework Concepts: Practical Implementation","text":"","code":"ui <- page_fillable(   theme = bs_theme(     version = 5,     bg = \"#FFFFFF\",     fg = \"#333333\"   ),   # Story Hook: Lead with a compelling insight   layout_column_wrap(     width = 12,     card(       card_header(\"Q2 2025 Sales Analysis\"),       card_body(         layout_column_wrap(           width = 1,           # Hook: Draw attention to an interesting pattern           h3(             \"Online sales exceeded in-store for the first time\",             class = \"text-primary fs-4\"           ),           p(             paste(               \"Q2 saw a historic shift in our sales channels,\",               \"creating both challenges and opportunities.\"             )           )         )       )     )   ),   # Story Context: Provide background   layout_column_wrap(     width = 1 / 2,     card(       card_header(\"Sales Channel Trend\"),       card_body(         # Context: Show the historical trend         echarts4rOutput(\"channel_trend\")       ),       card_footer(         p(           paste(             \"Historical context: Online sales have been steadily increasing\",             \"over the past 8 quarters.\"           )         )       )     ),     # Supporting context visualization     card(       card_header(\"Q2 Channel Breakdown\"),       card_body(         echarts4rOutput(\"channel_pie\")       )     )   ),   # Story Tension: Highlight the challenge or opportunity   layout_column_wrap(     width = 12,     card(       card_header(\"The Challenge\"),       card_body(         layout_column_wrap(           width = 1 / 2,           div(             # Tension: Highlight the problem             h4(\"Different Customer Behaviors by Channel\"),             p(               paste(                 \"Online customers show distinct shopping patterns compared\",                 \"to in-store shoppers.\"               )             ),             p(\"Key differences:\")           ),           # Supporting data for tension           echarts4rOutput(\"behavior_comparison\")         )       )     )   ),   # Story Resolution: Provide insights and next steps   layout_column_wrap(     width = 12,     card(       card_header(\"Recommended Actions\"),       card_body(         layout_column_wrap(           width = 1 / 3,           card(             card_body(               h5(\"Update Digital Strategy\"),               p(\"Adapt marketing approach to online-first customer base\"),               p(\"Timeline: Immediate\")             )           ),           card(             card_body(               h5(\"Enhance Online Experience\"),               p(\"Focus on mobile optimization and checkout flow\"),               p(\"Timeline: Q3 2025\")             )           ),           card(             card_body(               h5(\"Reposition Physical Stores\"),               p(\"Shift from transaction centers to experience hubs\"),               p(\"Timeline: Q4 2025\")             )           )         )       ),       card_footer(         actionButton(           \"download_report\",           \"Download Full Analysis\",           class = \"btn-primary\"         )       )     )   ) )  # Server function for data storytelling charts: server <- function(input, output, session) {   # Channel trend chart showing the story over time   output$channel_trend <- renderEcharts4r({     data.frame(       quarter = paste0(\"Q\", 1:8, \" \", c(rep(\"2024\", 4), rep(\"2025\", 4))),       online = c(42, 45, 47, 48, 49, 52, 54, 56),       in_store = c(58, 55, 53, 52, 51, 48, 46, 44)     ) |>       e_charts(quarter) |>       e_line(online, name = \"Online\") |>       e_line(in_store, name = \"In-store\") |>       e_title(\"Sales Channel Distribution (%)\") |>       e_x_axis(axisLabel = list(rotate = 45)) |>       e_tooltip(trigger = \"axis\") |>       e_mark_line(         data = list(xAxis = \"Q2 2025\"),         name = \"Current Quarter\"       ) |>       e_color(c(\"#3498db\", \"#2ecc71\"))   })    # Channel gauge chart for current quarter   output$channel_pie <- renderEcharts4r({     data.frame(       channel = c(\"Online\", \"In-store\"),       value = c(56, 44)     ) |>       e_charts(channel) |>       e_title(\"Q2 2025 Sales Distribution\") |>       e_gauge(         value,         startAngle = 180,         endAngle = 0,         detail = list(formatter = \"{value}%\"),         axisLine = list(           lineStyle = list(             color = list(               c(value / 100, \"#3498db\"),               c(1, \"#e9e9e9\")             ),             width = 30           )         )       ) |>       e_tooltip()   })    # Behavior comparison for tension   output$behavior_comparison <- renderEcharts4r({     data.frame(       metric = c(         \"Avg Order Value\",         \"Items per Order\",         \"Return Rate\",         \"Repeat Purchase\"       ),       online = c(120, 2.4, 12, 45),       in_store = c(150, 1.8, 5, 35)     ) |>       e_charts(metric) |>       e_bar(online, name = \"Online\") |>       e_bar(in_store, name = \"In-store\") |>       e_tooltip() |>       e_color(c(\"#3498db\", \"#2ecc71\"))   }) }"},{"path":"https://jrwinget.github.io/bidux/articles/concepts-reference.html","id":"key-elements-of-effective-data-storytelling","dir":"Articles","previous_headings":"BID Framework Concepts: Practical Implementation > Stage 2: Interpret - Implementing Data Storytelling","what":"Key Elements of Effective Data Storytelling:","title":"BID Framework Concepts: Practical Implementation","text":"Hook: Start compelling insight grab attention Context: Provide background information historical data Tension: Highlight challenge, problem, opportunity Resolution: Offer insights actionable recommendations","code":""},{"path":"https://jrwinget.github.io/bidux/articles/concepts-reference.html","id":"stage-3-structure---breathable-layouts","dir":"Articles","previous_headings":"BID Framework Concepts: Practical Implementation","what":"Stage 3: Structure - Breathable Layouts","title":"BID Framework Concepts: Practical Implementation","text":"Breathable layouts use whitespace effectively create visual rhythm reduce cognitive load.","code":""},{"path":"https://jrwinget.github.io/bidux/articles/concepts-reference.html","id":"using-bslib-for-breathable-layouts","dir":"Articles","previous_headings":"BID Framework Concepts: Practical Implementation > Stage 3: Structure - Breathable Layouts","what":"Using {bslib} for Breathable Layouts","title":"BID Framework Concepts: Practical Implementation","text":"","code":"ui <- page_fillable(   theme = bs_theme(     version = 5,     bg = \"#FFFFFF\",     fg = \"#333333\"   ),   # Page title with ample space   layout_column_wrap(     width = 12,     gap = \"2rem\", # Add breathing room     card(       card_header(         h1(           \"Customer Analytics Dashboard\",           class = \"fs-3 py-2\" # Add vertical padding         )       )     )   ),   # KPI cards with generous spacing   layout_column_wrap(     width = 1 / 3,     gap = \"2rem\", # Generous spacing between cards     card(       card_body(         padding = \"1.5rem\", # Extra padding inside cards         h3(\"Customers\", class = \"fs-4 mb-4\"), # Bottom margin for breathing room         div(class = \"display-5 mb-3\", \"12,486\"), # Large text with spacing         div(class = \"text-success\", \"↑ 8% from last month\")       )     ),     card(       card_body(         padding = \"1.5rem\",         h3(\"Retention Rate\", class = \"fs-4 mb-4\"),         div(class = \"display-5 mb-3\", \"86%\"),         div(class = \"text-success\", \"↑ 3% from last month\")       )     ),     card(       card_body(         padding = \"1.5rem\",         h3(\"Satisfaction\", class = \"fs-4 mb-4\"),         div(class = \"display-5 mb-3\", \"4.7/5\"),         div(class = \"text-success\", \"↑ 0.2 from last month\")       )     )   ),   # Add vertical spacing   layout_column_wrap(     width = 12,     gap = \"2rem\",     card(       card_header(         h3(\"Customer Segments\", class = \"fs-4\")       ),       card_body(         padding = \"1.5rem\", # Extra padding         echarts4rOutput(\"segments_chart\", height = \"300px\")       )     )   ),   # Tabbed interface with inner spacing   layout_column_wrap(     width = 12,     gap = \"2rem\",     nav_panel_tabset(       nav_panel(         \"Demographics\",         div(           class = \"py-4\", # Top and bottom padding           layout_column_wrap(             width = 1 / 2,             gap = \"2rem\",             echarts4rOutput(\"age_chart\", height = \"300px\"),             echarts4rOutput(\"location_chart\", height = \"300px\")           )         )       ),       nav_panel(         \"Behavior\",         div(           class = \"py-4\",           layout_column_wrap(             width = 1 / 2,             gap = \"2rem\",             echarts4rOutput(\"frequency_chart\", height = \"300px\"),             echarts4rOutput(\"channels_chart\", height = \"300px\")           )         )       )     )   ),   # Data table with breathing room   layout_column_wrap(     width = 12,     gap = \"2rem\",     card(       card_header(         h3(\"Customer Details\", class = \"fs-4\")       ),       card_body(         padding = \"1.5rem\", # Extra padding         reactableOutput(\"customers_table\")       )     )   ),   # Add space at bottom of page   layout_column_wrap(     width = 12,     gap = \"1rem\",     div(class = \"py-3\") # Empty div for padding   ) )"},{"path":"https://jrwinget.github.io/bidux/articles/concepts-reference.html","id":"key-elements-of-breathable-layouts","dir":"Articles","previous_headings":"BID Framework Concepts: Practical Implementation > Stage 3: Structure - Breathable Layouts","what":"Key Elements of Breathable Layouts:","title":"BID Framework Concepts: Practical Implementation","text":"Consistent spacing: Use consistent margins padding throughout Whitespace: Don’t crowd elements; give room “breathe” Grouping: Use whitespace create logical groups Content density: Limit amount information section Visual rhythm: Create consistent visual pattern spacing","code":""},{"path":"https://jrwinget.github.io/bidux/articles/concepts-reference.html","id":"stage-4-anticipate---mitigating-anchoring-bias","dir":"Articles","previous_headings":"BID Framework Concepts: Practical Implementation","what":"Stage 4: Anticipate - Mitigating Anchoring Bias","title":"BID Framework Concepts: Practical Implementation","text":"Anchoring bias occurs users rely heavily first piece information encounter making decisions.","code":""},{"path":"https://jrwinget.github.io/bidux/articles/concepts-reference.html","id":"using-reactable-and-echarts4r-to-mitigate-anchoring","dir":"Articles","previous_headings":"BID Framework Concepts: Practical Implementation > Stage 4: Anticipate - Mitigating Anchoring Bias","what":"Using {reactable} and {echarts4r} to Mitigate Anchoring","title":"BID Framework Concepts: Practical Implementation","text":"","code":"ui <- page_fillable(   theme = bs_theme(     version = 5   ),   # Context explanation   layout_column_wrap(     width = 12,     card(       card_header(\"Sales Performance Dashboard\"),       card_body(         p(           paste(             \"This dashboard provides multiple reference points\",             \"to help avoid anchoring bias.\"           )         )       )     )   ),   # Multiple reference points in KPIs   layout_column_wrap(     width = 1 / 3,     card(       card_header(\"Revenue\"),       card_body(         layout_column_wrap(           width = 1,           h3(\"$1.24M\", class = \"text-center fs-2\"),           # Multiple reference points to reduce anchoring           navset_pill(             nav_panel(               \"vs Target\",               div(                 class = \"text-center mt-2\",                 div(class = \"text-success fw-bold\", \"+8%\"),                 div(class = \"text-muted small\", \"Target: $1.15M\")               )             ),             nav_panel(               \"vs Last Year\",               div(                 class = \"text-center mt-2\",                 div(class = \"text-success fw-bold\", \"+12%\"),                 div(class = \"text-muted small\", \"Last Year: $1.11M\")               )             ),             nav_panel(               \"vs Industry\",               div(                 class = \"text-center mt-2\",                 div(class = \"text-success fw-bold\", \"+5%\"),                 div(class = \"text-muted small\", \"Industry Avg: $1.18M\")               )             )           )         )       )     ),     # Similar pattern for other metrics     card(       card_header(\"Conversion Rate\"),       card_body(         layout_column_wrap(           width = 1,           h3(\"3.2%\", class = \"text-center fs-2\"),           # Multiple reference points           navset_pill(             nav_panel(               \"vs Target\",               div(                 class = \"text-center mt-2\",                 div(class = \"text-success fw-bold\", \"+0.2%\"),                 div(class = \"text-muted small\", \"Target: 3.0%\")               )             ),             nav_panel(               \"vs Last Year\",               div(                 class = \"text-center mt-2\",                 div(class = \"text-success fw-bold\", \"+0.5%\"),                 div(class = \"text-muted small\", \"Last Year: 2.7%\")               )             ),             nav_panel(               \"vs Industry\",               div(                 class = \"text-center mt-2\",                 div(class = \"text-danger fw-bold\", \"-0.3%\"),                 div(class = \"text-muted small\", \"Industry Avg: 3.5%\")               )             )           )         )       )     ),     # Third metric with multiple anchors     card(       card_header(\"Average Order Value\"),       card_body(         layout_column_wrap(           width = 1,           h3(\"$148\", class = \"text-center fs-2\"),           # Multiple reference points           navset_pill(             nav_panel(               \"vs Target\",               div(                 class = \"text-center mt-2\",                 div(class = \"text-danger fw-bold\", \"-$7\"),                 div(class = \"text-muted small\", \"Target: $155\")               )             ),             nav_panel(               \"vs Last Year\",               div(                 class = \"text-center mt-2\",                 div(class = \"text-success fw-bold\", \"+$10\"),                 div(class = \"text-muted small\", \"Last Year: $138\")               )             ),             nav_panel(               \"vs Industry\",               div(                 class = \"text-center mt-2\",                 div(class = \"text-success fw-bold\", \"+$8\"),                 div(class = \"text-muted small\", \"Industry Avg: $140\")               )             )           )         )       )     )   ),   # Chart with multiple reference lines   layout_column_wrap(     width = 12,     card(       card_header(\"Sales Performance with Multiple References\"),       card_body(         echarts4rOutput(\"sales_references\")       )     )   ),   # Data table with multiple reference columns   layout_column_wrap(     width = 12,     card(       card_header(\"Performance Metrics with Multiple References\"),       card_body(         reactableOutput(\"metrics_table\")       )     )   ) )  # Server logic for anchoring bias mitigation server <- function(input, output, session) {   # Chart with multiple reference points   output$sales_references <- renderEcharts4r({     data.frame(       month = month.name[1:6],       actual = c(980, 1020, 1150, 1240, 1310, 1280),       target = c(1000, 1050, 1100, 1150, 1200, 1250),       prev_year = c(920, 950, 990, 1110, 1160, 1200),       industry = c(990, 1040, 1090, 1130, 1170, 1210)     ) |>       e_charts(month) |>       e_line(         actual,         name = \"Actual\",         symbol = \"circle\",         symbolSize = 10       ) |>       e_line(         target,         name = \"Target\",         symbol = \"none\",         lineStyle = list(type = \"dashed\")       ) |>       e_line(         prev_year,         name = \"Previous Year\",         symbol = \"none\",         lineStyle = list(type = \"dotted\")       ) |>       e_line(         industry,         name = \"Industry Avg\",         symbol = \"none\",         lineStyle = list(type = \"dashed\")       ) |>       e_title(\"Revenue Performance (Thousands)\") |>       e_tooltip(trigger = \"axis\") |>       e_color(c(\"#3498db\", \"#e74c3c\", \"#2ecc71\", \"#f39c12\"))   })    # Table with multiple reference columns   output$metrics_table <- renderReactable({     data <- data.frame(       metric = c(         \"Revenue\",         \"Conversion Rate\",         \"Avg Order Value\",         \"Customer Count\",         \"Units Sold\"       ),       actual = c(\"$1.24M\", \"3.2%\", \"$148\", \"8,378\", \"12,420\"),       target = c(\"$1.15M\", \"3.0%\", \"$155\", \"7,500\", \"11,500\"),       vs_target = c(\"+8%\", \"+7%\", \"-5%\", \"+12%\", \"+8%\"),       prev_year = c(\"$1.11M\", \"2.7%\", \"$138\", \"7,825\", \"11,830\"),       vs_prev = c(\"+12%\", \"+19%\", \"+7%\", \"+7%\", \"+5%\"),       industry = c(\"$1.18M\", \"3.5%\", \"$140\", \"8,100\", \"12,000\"),       vs_industry = c(\"+5%\", \"-9%\", \"+6%\", \"+3%\", \"+4%\")     )      # Custom cell renderer for comparisons     compare_cell <- function(value) {       if (grepl(\"^\\\\+\", value)) {         div(value, style = list(color = \"#2ecc71\", fontWeight = \"bold\"))       } else if (grepl(\"^\\\\-\", value)) {         div(value, style = list(color = \"#e74c3c\", fontWeight = \"bold\"))       } else {         value       }     }      reactable(data,       columns = list(         metric = colDef(name = \"Metric\"),         actual = colDef(name = \"Actual\"),         target = colDef(name = \"Target\"),         vs_target = colDef(name = \"vs Target\", cell = compare_cell),         prev_year = colDef(name = \"Previous Year\"),         vs_prev = colDef(name = \"vs Prev Year\", cell = compare_cell),         industry = colDef(name = \"Industry Avg\"),         vs_industry = colDef(name = \"vs Industry\", cell = compare_cell)       ),       striped = TRUE,       highlight = TRUE,       bordered = TRUE     )   }) }"},{"path":"https://jrwinget.github.io/bidux/articles/concepts-reference.html","id":"key-techniques-for-mitigating-anchoring-bias","dir":"Articles","previous_headings":"BID Framework Concepts: Practical Implementation > Stage 4: Anticipate - Mitigating Anchoring Bias","what":"Key Techniques for Mitigating Anchoring Bias:","title":"BID Framework Concepts: Practical Implementation","text":"Multiple reference points: Show different benchmarks (target, previous, industry) Alternative perspectives: Enable switching different views Contextual information: Provide additional context values Visual references: Use reference lines charts Relative comparisons: Show percentage changes rather just absolute values","code":""},{"path":"https://jrwinget.github.io/bidux/articles/concepts-reference.html","id":"stage-5-validate---implementing-the-peak-end-rule","dir":"Articles","previous_headings":"BID Framework Concepts: Practical Implementation","what":"Stage 5: Validate - Implementing the Peak-End Rule","title":"BID Framework Concepts: Practical Implementation","text":"Peak-End Rule states people judge experiences largely based felt intense point (peak) end, rather based sum average experience.","code":""},{"path":"https://jrwinget.github.io/bidux/articles/concepts-reference.html","id":"using-bslib-to-implement-the-peak-end-rule","dir":"Articles","previous_headings":"BID Framework Concepts: Practical Implementation > Stage 5: Validate - Implementing the Peak-End Rule","what":"Using {bslib} to Implement the Peak-End Rule","title":"BID Framework Concepts: Practical Implementation","text":"","code":"ui <- page_fillable(   theme = bs_theme(     version = 5   ),    # Dashboard content would go here...    # End with a strong summary and clear next steps   layout_column_wrap(     width = 12,     card(       card_header(         h2(\"Key Insights & Recommended Actions\", class = \"fs-4\")       ),       card_body(         layout_column_wrap(           width = 1 / 2,           # Summary insights at the end of the dashboard           card(             card_header(\"Key Takeaways\"),             card_body(               tags$ul(                 tags$li(                   span(\"Revenue is trending \", class = \"fw-bold\"),                   span(\"8% above target\", class = \"text-success fw-bold\"),                   span(                     paste(                       \" for the quarter, primarily driven by\",                       \"the Electronics category.\"                     )                   )                 ),                 tags$li(                   span(\"Customer acquisition cost has \", class = \"fw-bold\"),                   span(\"decreased by 12%\", class = \"text-success fw-bold\"),                   span(\" following the new digital marketing strategy.\")                 ),                 tags$li(                   span(\"The West region continues to \", class = \"fw-bold\"),                   span(\"underperform by 5%\", class = \"text-danger fw-bold\"),                   span(\" compared to other regions.\")                 )               )             )           ),           # Clear next steps to end on a positive action-oriented note           card(             card_header(\"Recommended Next Steps\"),             card_body(               layout_column_wrap(                 width = 1,                 # Button card for first recommendation                 card(                   card_body(                     h5(\"Increase Electronics Inventory\"),                     p(                       paste(                         \"Current inventory will only support 2 more\",                         \"weeks of sales at current pace.\"                       )                     ),                     actionButton(                       \"action1\",                       \"Order Inventory\",                       class = \"btn-primary w-100\"                     )                   )                 ),                 # Button card for second recommendation                 card(                   card_body(                     h5(\"Expand Digital Marketing\"),                     p(                       paste(                         \"Current campaigns are performing well.\",                         \"Consider increasing budget allocation.\"                       )                     ),                     actionButton(                       \"action2\",                       \"Adjust Budget\",                       class = \"btn-primary w-100\"                     )                   )                 ),                 # Button card for third recommendation                 card(                   card_body(                     h5(\"Review West Region Strategy\"),                     p(                       paste(                         \"Schedule meeting with regional team to\",                         \"address performance gaps.\"                       )                     ),                     actionButton(                       \"action3\",                       \"Schedule Meeting\",                       class = \"btn-primary w-100\"                     )                   )                 )               )             )           )         )       ),       # Final call to action       card_footer(         layout_column_wrap(           width = 1,           p(\"These insights are based on data through Q1.\"),           div(             class = \"text-end\",             actionButton(               \"export_pdf\",               \"Export as PDF\",               class = \"btn-outline-primary me-2\"             ),             actionButton(               \"share_dashboard\",               \"Share Dashboard\",               class = \"btn-primary\"             )           )         )       )     )   ) )"},{"path":"https://jrwinget.github.io/bidux/articles/concepts-reference.html","id":"key-elements-of-implementing-the-peak-end-rule","dir":"Articles","previous_headings":"BID Framework Concepts: Practical Implementation > Stage 5: Validate - Implementing the Peak-End Rule","what":"Key Elements of Implementing the Peak-End Rule:","title":"BID Framework Concepts: Practical Implementation","text":"Strong summary: End clear summary key findings Actionable insights: Provide specific recommendations Visual emphasis: Make end section visually distinct appealing Call action: End clear next steps Positive tone: End positive, forward-looking note","code":""},{"path":"https://jrwinget.github.io/bidux/articles/concepts-reference.html","id":"conclusion","dir":"Articles","previous_headings":"BID Framework Concepts: Practical Implementation","what":"Conclusion","title":"BID Framework Concepts: Practical Implementation","text":"practical implementations demonstrate apply key BID framework concepts using modern Shiny packages: {bslib} provides layout components, cards, value boxes structured information presentation {reactable} offers advanced data tables conditional formatting custom rendering {echarts4r} creates interactive visualizations multiple reference points comparative views explore concepts implementation, use bid_concepts() function access full concept dictionary: detailed information specific concept: BID framework provides systematic approach incorporating psychological principles dashboard design, resulting intuitive, usable, effective Shiny applications.","code":"bid_concepts() |>   select(concept, category, implementation_tips) |>   head(5) bid_concept(\"Anchoring Effect\") |>   select(concept, description, implementation_tips)"},{"path":"https://jrwinget.github.io/bidux/articles/getting-started.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Getting Started with bidux","text":"bidux package helps Shiny developers create effective dashboards using Behavior Insight Design (BID) Framework. framework integrates psychological principles, UX best practices, data storytelling techniques guide development dashboards easier understand, engaging, effective supporting user decisions.","code":"library(bidux) library(dplyr)"},{"path":"https://jrwinget.github.io/bidux/articles/getting-started.html","id":"the-bid-framework","dir":"Articles","previous_headings":"","what":"The BID Framework","title":"Getting Started with bidux","text":"BID framework consists 5 sequential stages: Notice Problem - Identify friction points user struggles Interpret User’s Need - Understand core questions insights needed Structure Dashboard - Organize information intuitive comprehension Anticipate User Behavior - Consider cognitive biases influence perception Validate & Empower User - Provide clear takeaways collaborative features sequential process forms structured approach dashboard design, stage building insights previous stages.","code":""},{"path":"https://jrwinget.github.io/bidux/articles/getting-started.html","id":"exploring-the-concept-dictionary","dir":"Articles","previous_headings":"","what":"Exploring the Concept Dictionary","title":"Getting Started with bidux","text":"BID framework built established psychological design principles. explore concepts, use bid_concepts() list available concepts, search specific terms: detailed information specific concept, use bid_concept(): bid_concept() function supports case-insensitive partial matching: can also explore concepts new BID framework:","code":"# List all concepts all_concepts <- bid_concepts() head(dplyr::select(all_concepts, concept, category, description), 3)  # Search for specific concepts bid_concepts(\"cognitive\") |>   dplyr::select(concept, description, implementation_tips) # Get information about a specific concept bid_concept(\"Processing Fluency\") |>   dplyr::select(concept, description, implementation_tips) # Case-insensitive matching bid_concept(\"hick's law\") |>   dplyr::select(concept, description)  # Partial matching bid_concept(\"proximity\") |>   dplyr::select(concept, description) # Explore new concepts from user-centric design bid_concepts(\"visual hierarchy|breathable|gherkin\") |>   dplyr::select(concept, description)"},{"path":"https://jrwinget.github.io/bidux/articles/getting-started.html","id":"documenting-a-dashboard-project-with-bid","dir":"Articles","previous_headings":"","what":"Documenting a Dashboard Project with BID","title":"Getting Started with bidux","text":"Let’s walk complete example using BID framework document improve dashboard project.","code":""},{"path":"https://jrwinget.github.io/bidux/articles/getting-started.html","id":"stage-1-notice-the-problem","dir":"Articles","previous_headings":"Documenting a Dashboard Project with BID","what":"Stage 1: Notice the Problem","title":"Getting Started with bidux","text":"Start identifying specific problems users encountering dashboard interface: Notice function automatically selected appropriate theory based problem description. also provides suggestions addressing cognitive load can access suggestions column.","code":"# Document the problem notice_result <- bid_notice(   problem = \"Users are overwhelmed by too many filter options and struggle to find relevant insights\",   evidence = \"User testing shows 65% of first-time users fail to complete their intended task within 2 minutes\",   target_audience = \"Marketing team members with varying technical skills\" )  notice_result |>   dplyr::select(problem, theory, evidence, target_audience)"},{"path":"https://jrwinget.github.io/bidux/articles/getting-started.html","id":"stage-2-interpret-the-users-need","dir":"Articles","previous_headings":"Documenting a Dashboard Project with BID","what":"Stage 2: Interpret the User’s Need","title":"Getting Started with bidux","text":"Next, clarify central question dashboard needs answer structure data story: function evaluates data story elements provides suggestions improvement (suggestions column). ’ve also added user personas better target design.","code":"# Document the user's need interpret_result <- bid_interpret(   previous_stage = notice_result,   central_question = \"How are our marketing campaigns performing across different channels?\",   data_story = list(     hook = \"Recent campaign performance varies significantly across channels\",     context = \"We've invested in 6 different marketing channels over the past quarter\",     tension = \"ROI metrics show inconsistent results, with some channels underperforming\",     resolution = \"Identify top-performing channels and key performance drivers\",     audience = \"Marketing team and executives\",     metrics = c(\"Channel ROI\", \"Conversion Rate\", \"Cost per Acquisition\"),     visual_approach = \"Comparative analysis with historical benchmarks\"   ),   user_personas = list(     list(       name = \"Marketing Manager\",       goals = \"Optimize marketing spend across channels\",       pain_points = \"Difficulty comparing performance across different metrics\",       technical_level = \"Intermediate\"     ),     list(       name = \"CMO\",       goals = \"Strategic oversight of marketing effectiveness\",       pain_points = \"Needs high-level insights without technical details\",       technical_level = \"Basic\"     )   ) )  interpret_result |>   dplyr::select(central_question, hook, tension, resolution)"},{"path":"https://jrwinget.github.io/bidux/articles/getting-started.html","id":"stage-3-structure-the-dashboard","dir":"Articles","previous_headings":"Documenting a Dashboard Project with BID","what":"Stage 3: Structure the Dashboard","title":"Getting Started with bidux","text":"Now determine layout key design principles implement: function provides layout-specific suggestions based psychological concepts ’ve chosen apply, acknowledges accessibility considerations.","code":"# Document the dashboard structure structure_result <- bid_structure(   previous_stage = interpret_result,   layout = \"dual_process\",   concepts = c(     \"Principle of Proximity\",     \"Default Effect\",     \"Visual Hierarchy\",     \"Breathable Layouts\"   ),   accessibility = list(     color_contrast = \"Using WCAG AA-compliant color contrasts\",     keyboard_navigation = \"All interactive elements are keyboard accessible\",     screen_reader = \"Charts include descriptive alt text\"   ) )  structure_result |>   dplyr::select(layout, concepts, accessibility)"},{"path":"https://jrwinget.github.io/bidux/articles/getting-started.html","id":"stage-4-anticipate-user-behavior","dir":"Articles","previous_headings":"Documenting a Dashboard Project with BID","what":"Stage 4: Anticipate User Behavior","title":"Getting Started with bidux","text":"Identify potential cognitive biases might affect users interpret dashboard: function evaluates bias mitigation strategies interaction principles, providing implementation suggestions .","code":"# Document bias mitigation strategies anticipate_result <- bid_anticipate(   previous_stage = structure_result,   bias_mitigations = list(     anchoring = \"Include previous period performance as reference points\",     framing = \"Provide toggle between ROI improvement vs. ROI gap views\",     confirmation_bias = \"Highlight unexpected patterns that contradict common assumptions\"   ),   interaction_principles = list(     hover_effects = \"Show detailed metrics on hover for each channel\",     selection_feedback = \"Highlight active filters with color and icon changes\",     progressive_disclosure = \"Reveal advanced options only when basic filters are applied\"   ) )  anticipate_result |>   dplyr::select(bias_mitigations, interaction_principles)"},{"path":"https://jrwinget.github.io/bidux/articles/getting-started.html","id":"stage-5-validate-empower-the-user","dir":"Articles","previous_headings":"Documenting a Dashboard Project with BID","what":"Stage 5: Validate & Empower the User","title":"Getting Started with bidux","text":"Finally, document ’ll ensure users leave clear insights ability collaborate: validate function acknowledges implementation Peak-End Rule next steps provides suggestions refining approach.","code":"# Document validation approach validate_result <- bid_validate(   previous_stage = anticipate_result,   summary_panel = \"Executive summary highlighting top and bottom performers, key trends, and recommended actions for the next marketing cycle\",   collaboration = \"Team annotation capability allowing marketing team members to add context and insights to specific data points\",   next_steps = c(     \"Review performance of bottom 2 channels\",     \"Increase budget for top-performing channel\",     \"Schedule team meeting to discuss optimization strategy\",     \"Export findings for quarterly marketing review\"   ) )  validate_result |>   dplyr::select(summary_panel, collaboration, next_steps)"},{"path":"https://jrwinget.github.io/bidux/articles/getting-started.html","id":"generating-implementation-suggestions","dir":"Articles","previous_headings":"","what":"Generating Implementation Suggestions","title":"Getting Started with bidux","text":"’ve documented dashboard BID framework, can generate concrete suggestions implementing principles using common R packages:","code":"# Get {bslib} component suggestions bid_suggest_components(structure_result, package = \"bslib\") |>   dplyr::select(component, description) |>   head(2)  # Get {reactable} suggestions for showing data bid_suggest_components(anticipate_result, package = \"reactable\") |>   dplyr::select(component, description) |>   head(2)  # Get suggestions from all supported packages all_suggestions <- bid_suggest_components(validate_result, package = \"all\") table(all_suggestions$package)"},{"path":"https://jrwinget.github.io/bidux/articles/getting-started.html","id":"creating-a-complete-bid-report","dir":"Articles","previous_headings":"","what":"Creating a Complete BID Report","title":"Getting Started with bidux","text":"can generate complete report summarizing stages BID process:","code":"# Generate a text report (default) report <- bid_report(validate_result) cat(report)  # Generate an HTML report html_report <- bid_report(   validate_result,   format = \"html\" )  # Generate a markdown report md_report <- bid_report(validate_result, format = \"markdown\")"},{"path":"https://jrwinget.github.io/bidux/articles/getting-started.html","id":"using-bid-in-your-shiny-development-workflow","dir":"Articles","previous_headings":"","what":"Using BID in Your Shiny Development Workflow","title":"Getting Started with bidux","text":"’s integrate BID framework development process: Planning Phase Use BID framework document design decisions writing code Identify key user needs potential friction points Define user personas guide design choices Consider accessibility requirements early Development Phase Reference BID documentation implement appropriate UI patterns Use bid_suggest_components() get package-specific implementation ideas Implement bias mitigation strategies interface Build progressive disclosure complex interfaces Testing Phase Validate implementation addresses issues identified Stage 1 Test actual users representing defined personas Specifically test bias mitigation strategies accessibility features Gather feedback effectiveness validation approach Iteration Phase Update BID documentation refine dashboard Use bid_report() maintain comprehensive documentation Focus improvements areas greatest impact user experience Continue apply BID principles add new features","code":""},{"path":"https://jrwinget.github.io/bidux/articles/getting-started.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Getting Started with bidux","text":"bidux package makes easier apply psychological principles UX best practices Shiny dashboards. following 5-stage BID framework, can create applications intuitive, engaging, effective users. Future versions bidux include: User stories workflow integration following Gherkin method Enhanced design patterns library Accessibility framework integration WCAG guidelines UI component library implementing BID principles Testing validation tools dashboard evaluation Visit github.com/jrwinget/bidux updates contribute package development. welcome feedback suggestions help make BID framework even effective Shiny developers. Remember good dashboard design iterative process benefits continuous user feedback. BID framework provides structure process ensuring psychological principles incorporated throughout development workflow.","code":""},{"path":"https://jrwinget.github.io/bidux/articles/introduction-to-bid.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"introduction-to-bid","text":"Behavior Insight Design (BID) framework guides developers integrating behavioral science UI/UX design. helps understanding psychological principles biases affect user interactions. five stages BID framework : 1. Notice Problem: Identify friction points areas high cognitive load. 2. Interpret User’s Need: Clarify core question build data narrative. 3. Structure Dashboard: Organize layout design enhance usability. 4. Anticipate User Behavior: Mitigate biases anchoring framing. 5. Validate & Empower User: Summarize insights facilitate collaborative decision-making. vignette introduces core ideas behind stage interact create effective, bias-aware dashboards. Visit github.com/jrwinget/bid-framework resources information BID framework.","code":""},{"path":"https://jrwinget.github.io/bidux/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jeremy Winget. Author, maintainer.","code":""},{"path":"https://jrwinget.github.io/bidux/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Winget J (2025). bidux: Behavior Insight Design: Toolkit Integrating Behavioral Science UI/UX Design. R package version 0.1.0, https://jrwinget.github.io/bidux/.","code":"@Manual{,   title = {bidux: Behavior Insight Design: A Toolkit for Integrating Behavioral Science in UI/UX Design},   author = {Jeremy Winget},   year = {2025},   note = {R package version 0.1.0},   url = {https://jrwinget.github.io/bidux/}, }"},{"path":"https://jrwinget.github.io/bidux/index.html","id":"bidux-","dir":"","previous_headings":"","what":"Behavior Insight Design: A Toolkit for Integrating Behavioral Science in UI/UX Design","title":"Behavior Insight Design: A Toolkit for Integrating Behavioral Science in UI/UX Design","text":"bidux package helps Shiny developers implement Behavior Insight Design (BID) framework workflow. BID 5-stage process incorporates psychological principles UI/UX design: Notice Problem - Identify friction points using principles cognitive load visual hierarchies Interpret User’s Need - Create compelling data stories define user personas Structure Dashboard - Apply layout patterns accessibility considerations Anticipate User Behavior - Mitigate cognitive biases implement effective interaction hints Validate & Empower User - Provide summary insights collaborative features structured approach helps developers create intuitive, user-friendly dashboards systematically applying behavioral psychology concepts design process.","code":""},{"path":"https://jrwinget.github.io/bidux/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Behavior Insight Design: A Toolkit for Integrating Behavioral Science in UI/UX Design","text":"can install bidux CRAN: install development version GitHub:","code":"install.packages(\"bidux\") # install.packages(\"pak\") pak::pak(\"jrwinget/bidux\")"},{"path":"https://jrwinget.github.io/bidux/index.html","id":"core-functions","dir":"","previous_headings":"","what":"Core Functions","title":"Behavior Insight Design: A Toolkit for Integrating Behavioral Science in UI/UX Design","text":"package provides documentation functions stage BID process:","code":"library(bidux)  # Stage 1: Notice the Problem notice_result <- bid_notice(   problem = \"Users can't find the most important metrics\",   evidence = \"User testing showed 70% of users spending >30s looking for key metrics\",   theory = \"Visual Hierarchies\",  # Optional - will be suggested if omitted   target_audience = \"Data analysts with varying technical skills\" ) #> Stage 1 (Notice) completed. (20% complete) #>   - Problem: Users can't find the most important metrics #>   - Theory: Visual Hierarchies #>   - Evidence: User testing showed 70% of users spending >30s looking fo... #>   - Next: Use bid_interpret() for Stage 2  # Stage 2: Interpret the User's Need interpret_result <- bid_interpret(   previous_stage = notice_result,   central_question = \"How are sales trending against targets?\",   data_story = list(     hook = \"Sales are trending below target in Q2\",     context = \"Previous quarters exceeded targets\",     tension = \"What's causing the Q2 decline?\",     resolution = \"Identify underperforming product categories\",     audience = \"Marketing team\",     metrics = c(\"YTD Sales\", \"Quarter Growth Rate\", \"Regional Performance\"),     visual_approach = \"Comparative visualization with clear color coding\"   ),   user_personas = list(     list(       name = \"Sales Manager\",       goals = \"Track team performance\",       pain_points = \"Too much data to sift through\",       technical_level = \"Intermediate\"     )   ) ) #> Stage 2 (Interpret) completed. #>   - Central question: How are sales trending against targets? #>   - Your data story has all key elements. Focus on making each component compelling and relevant. #>   - Your central question is appropriately scoped. #>   - User personas: 1 defined  # Stage 3: Structure the Dashboard structure_result <- bid_structure(   previous_stage = interpret_result,   layout = \"dual_process\",  # Options: dual_process, grid, card, tabs, breathable   concepts = c(\"principle_of_proximity\", \"default_effect\", \"breathable_layouts\"),   accessibility = list(     color_contrast = \"WCAG AA compliant\",     keyboard_navigation = \"All elements focusable\",     screen_reader = \"Charts include descriptive alt text\"   ) ) #> Stage 3 (Structure) completed. #>   - Layout: dual_process #>   - Concepts: Principle of Proximity, Default Effect, Breathable Layouts #>   - Accessibility considerations included: color_contrast, keyboard_navigation, screen_reader  # Stage 4: Anticipate User Behavior anticipate_result <- bid_anticipate(   previous_stage = structure_result,   bias_mitigations = list(     anchoring = \"Using context-aware reference points\",     framing = \"Providing both positive and negative framings\",     confirmation_bias = \"Including alternative scenarios\"   ),   interaction_principles = list(     hover_effects = \"Show details on hover\",     selection_feedback = \"Highlight active filters\",     progressive_disclosure = \"Reveal advanced options progressively\"   ) ) #> Stage 4 (Anticipate) completed. #>   - Bias mitigations: 3 defined #>   - Interaction principles: 3 defined #>   - Key suggestions: anchoring mitigation: Always show reference points like previous period, budget, or industry average., framing mitigation: Toggle between progress (65% complete) and gap (35% remaining) framing., confirmation_bias mitigation: Consider how this bias affects user decisions.  # Stage 5: Validate & Empower validate_result <- bid_validate(   previous_stage = anticipate_result,   summary_panel = \"Key insights panel with actionable takeaways\",   collaboration = \"Team annotation and sharing capabilities\",   next_steps = c(     \"Review underperforming categories\",     \"Schedule team discussion\",     \"Update forecast models\"   ) ) #> Stage 5 (Validate) completed. #>   - Summary panel: Key insights panel with actionable takeaways #>   - Collaboration: Team annotation and sharing capabilities #>   - Next steps: 3 items defined #>   - Include user testing in your next steps"},{"path":"https://jrwinget.github.io/bidux/index.html","id":"concept-dictionary","dir":"","previous_headings":"","what":"Concept Dictionary","title":"Behavior Insight Design: A Toolkit for Integrating Behavioral Science in UI/UX Design","text":"package includes comprehensive dictionary behavioral psychology concepts:","code":"# List all concepts all_concepts <- bid_concepts() all_concepts #> # A tibble: 41 × 7 #>    concept            description category reference example implementation_tips #>    <chr>              <chr>       <chr>    <chr>     <chr>   <chr>               #>  1 Cognitive Load Th… Theory tha… Stage 1  Sweller … Reduci… Use tabs or collap… #>  2 Hick's Law         Principle … Stage 1  Hick (19… Simpli… Reduce dropdown op… #>  3 Visual Hierarchies Design pri… Stage 1  Tufte (1… Emphas… Use size, color, a… #>  4 Data Storytelling… Framework … Stage 2  Matei & … Highli… Start with a clear… #>  5 Processing Fluency The ease w… Stage 2  Alter & … Using … Use clean, consist… #>  6 Emotion & Fluency… How emotio… Stage 2  Song & S… Applyi… Consider subtle co… #>  7 Principle of Prox… Grouping r… Stage 3  Gestalt … Groupi… Place related cont… #>  8 Dual-Processing T… Model dist… Stage 3  Tversky … Provid… Provide both KPI s… #>  9 Default Effect     How defaul… Stage 3  Johnson … Pre-se… Pre-select the mos… #> 10 Aesthetic-Usabili… The effect… Stage 3  Norman (… Creati… Ensure visual cohe… #> # ℹ 31 more rows #> # ℹ 1 more variable: related_concepts <chr>  # Search for specific concepts cognitive_concepts <- bid_concepts(\"cognitive\") cognitive_concepts #> # A tibble: 4 × 7 #>   concept             description category reference example implementation_tips #>   <chr>               <chr>       <chr>    <chr>     <chr>   <chr>               #> 1 Cognitive Load The… Theory tha… Stage 1  Sweller … Reduci… Use tabs or collap… #> 2 Progressive Disclo… Technique … Stage 1  Krug (20… Expand… Use shiny::actionB… #> 3 Cognitive Dimensio… Framework … Stage 1  Green & … Evalua… Evaluate your UI a… #> 4 Breathable Layouts  Using whit… Stage 3  White (2… Using … Use bslib::card_bo… #> # ℹ 1 more variable: related_concepts <chr>  visual_concepts <- bid_concepts(\"visual, hierarchy\") # Multiple search terms visual_concepts #> # A tibble: 11 × 7 #>    concept            description category reference example implementation_tips #>    <chr>              <chr>       <chr>    <chr>     <chr>   <chr>               #>  1 Visual Hierarchies Design pri… Stage 1  Tufte (1… Emphas… Use size, color, a… #>  2 Principle of Prox… Grouping r… Stage 3  Gestalt … Groupi… Place related cont… #>  3 Gestalt Principles Visual per… Stage 3  Wertheim… Arrang… Use layout_column_… #>  4 Pre-attentive Pro… Visual pro… Stage 2  Healey (… Using … Leverage reactable… #>  5 Change Blindness   Failure to… Stage 4  Rensink … Using … Use transitions or… #>  6 Visual Hierarchy   Organizing… Stage 1  Djamasbi… Creati… Apply different fo… #>  7 Breathable Layouts Using whit… Stage 3  White (2… Using … Use bslib::card_bo… #>  8 Interaction Hints  Visual cue… Stage 4  Norman (… Adding… Add CSS hover stat… #>  9 Visual Feedback    Immediate … Stage 4  Shneider… Highli… Use shinyFeedback … #> 10 Accessibility Con… Ensuring s… Stage 3  WCAG 2.1  Ensuri… Test color combina… #> 11 Information Hiera… Organizati… Stage 3  Djamasbi… Making… Use font size, wei… #> # ℹ 1 more variable: related_concepts <chr>  # Get detailed information about a specific concept anchoring_info <- bid_concept(\"anchoring effect\") anchoring_info #> # A tibble: 1 × 8 #>   concept          description    category reference example implementation_tips #>   <chr>            <chr>          <chr>    <chr>     <chr>   <chr>               #> 1 Anchoring Effect Bias where in… Stage 4  Tversky … Using … Always show refere… #> # ℹ 2 more variables: related_concepts <chr>, recommendations <chr>"},{"path":"https://jrwinget.github.io/bidux/index.html","id":"ui-component-suggestions","dir":"","previous_headings":"","what":"UI Component Suggestions","title":"Behavior Insight Design: A Toolkit for Integrating Behavioral Science in UI/UX Design","text":"Get concrete implementation ideas various UI packages:","code":"# Get bslib component suggestions bid_suggest_components(structure_result, package = \"bslib\") #> # A tibble: 10 × 7 #>    package component          description bid_stage_relevance cognitive_concepts #>    <chr>   <chr>              <chr>       <chr>               <chr>              #>  1 bslib   layout_columns     Create fle… Stage 3             Visual Hierarchy,… #>  2 bslib   layout_column_wrap Create res… Stage 3             Cognitive Load Th… #>  3 bslib   card               Organize c… Stage 3,Stage 5     Principle of Prox… #>  4 bslib   card_body          Control ca… Stage 3             Breathable Layout… #>  5 bslib   page_sidebar       Build dash… Stage 3             Information Hiera… #>  6 bslib   value_box          Display ke… Stage 2,Stage 3,St… Visual Hierarchy,… #>  7 bslib   nav_panel          Create tab… Stage 1,Stage 3     Cognitive Load Th… #>  8 bslib   accordion          Implement … Stage 1,Stage 3     Progressive Discl… #>  9 bslib   input_dark_mode    Allow user… Stage 3,Stage 5     Aesthetic-Usabili… #> 10 bslib   card_header        Add header… Stage 3             Information Hiera… #> # ℹ 2 more variables: use_cases <chr>, relevance <dbl>  # Get shiny component suggestions bid_suggest_components(notice_result, package = \"shiny\") #> # A tibble: 10 × 7 #>    package component         description  bid_stage_relevance cognitive_concepts #>    <chr>   <chr>             <chr>        <chr>               <chr>              #>  1 shiny   tabsetPanel       Organize re… Stage 1,Stage 3     Information Hiera… #>  2 shiny   conditionalPanel  Show/hide U… Stage 1,Stage 4     Cognitive Load Th… #>  3 shiny   renderUI          Generate UI… Stage 1,Stage 4     Progressive Discl… #>  4 shiny   uiOutput          Display dyn… Stage 1,Stage 4     Progressive Discl… #>  5 shiny   reactive          Create reac… Stage 1,Stage 4     Processing Fluenc… #>  6 shiny   isolate           Control rea… Stage 1,Stage 4     Processing Fluenc… #>  7 shiny   wellPanel         Group relat… Stage 3             Principle of Prox… #>  8 shiny   fluidRow          Create resp… Stage 3             Visual Hierarchy,… #>  9 shiny   column            Control pre… Stage 3             Visual Hierarchy,… #> 10 shiny   updateSelectInput Dynamically… Stage 4             Default Effect,Co… #> # ℹ 2 more variables: use_cases <chr>, relevance <dbl>  # Get reactable component suggestions bid_suggest_components(anticipate_result, package = \"reactable\") #> # A tibble: 1 × 7 #>   package component description bid_stage_relevance cognitive_concepts use_cases #>   <chr>   <chr>     <chr>       <chr>               <chr>              <chr>     #> 1 reacta… getReact… Access tab… Stage 4,Stage 5     Norman's Stages o… table in… #> # ℹ 1 more variable: relevance <dbl>  # Get echarts4r component suggestions bid_suggest_components(validate_result, package = \"echarts4r\") #> # A tibble: 0 × 7 #> # ℹ 7 variables: package <chr>, component <chr>, description <chr>, #> #   bid_stage_relevance <chr>, cognitive_concepts <chr>, use_cases <chr>, #> #   relevance <dbl>  # Get suggestions from all supported packages bid_suggest_components(validate_result) #> # A tibble: 12 × 7 #>    package component        description   bid_stage_relevance cognitive_concepts #>    <chr>   <chr>            <chr>         <chr>               <chr>              #>  1 shiny   tabsetPanel      Organize rel… Stage 1,Stage 3     Information Hiera… #>  2 shiny   conditionalPanel Show/hide UI… Stage 1,Stage 4     Cognitive Load Th… #>  3 shiny   renderUI         Generate UI … Stage 1,Stage 4     Progressive Discl… #>  4 shiny   uiOutput         Display dyna… Stage 1,Stage 4     Progressive Discl… #>  5 shiny   reactive         Create react… Stage 1,Stage 4     Processing Fluenc… #>  6 shiny   isolate          Control reac… Stage 1,Stage 4     Processing Fluenc… #>  7 bslib   nav_panel        Create tabbe… Stage 1,Stage 3     Cognitive Load Th… #>  8 bslib   accordion        Implement co… Stage 1,Stage 3     Progressive Discl… #>  9 shiny   wellPanel        Group relate… Stage 3             Principle of Prox… #> 10 bslib   card             Organize con… Stage 3,Stage 5     Principle of Prox… #> 11 bslib   layout_columns   Create flexi… Stage 3             Visual Hierarchy,… #> 12 DT      datatable        Display data… Stage 2,Stage 3,St… Information Hiera… #> # ℹ 2 more variables: use_cases <chr>, relevance <dbl>"},{"path":"https://jrwinget.github.io/bidux/index.html","id":"comprehensive-reporting","dir":"","previous_headings":"","what":"Comprehensive Reporting","title":"Behavior Insight Design: A Toolkit for Integrating Behavioral Science in UI/UX Design","text":"Generate documentation BID implementation:","code":"# Generate a report in various formats text_report <- bid_report(validate_result) html_report <- bid_report(validate_result, format = \"html\") md_report <- bid_report(validate_result, format = \"markdown\", include_diagrams = TRUE)"},{"path":"https://jrwinget.github.io/bidux/index.html","id":"example-workflow","dir":"","previous_headings":"","what":"Example Workflow","title":"Behavior Insight Design: A Toolkit for Integrating Behavioral Science in UI/UX Design","text":"","code":"library(shiny) library(bidux)  # Document the entire BID process bid_process <- bid_notice(   problem = \"Users can't find the most important metrics\",   evidence = \"User testing showed 70% of users spending >30s looking for key metrics\" ) |>   bid_interpret(     central_question = \"How are sales trending against targets?\",     data_story = list(       hook = \"Sales are trending below target in Q2\",       context = \"Previous quarters exceeded targets\",       tension = \"What's causing the Q2 decline?\",       resolution = \"Identify underperforming product categories\"     )   ) |>   bid_structure(     layout = \"dual_process\",     concepts = c(\"principle_of_proximity\", \"default_effect\")   ) |>   bid_anticipate(     bias_mitigations = list(       anchoring = \"Using context-aware reference points\",       framing = \"Providing both positive and negative framings\"     )   ) |>   bid_validate(     summary_panel = \"Key insights summary\",     collaboration = \"Team annotation features\"   ) #> Auto-suggested theory: Cognitive Load Theory (confidence: 90%) #> Stage 1 (Notice) completed. (20% complete) #>   - Problem: Users can't find the most important metrics #>   - Theory: Cognitive Load Theory (auto-suggested) #>   - Evidence: User testing showed 70% of users spending >30s looking fo... #>   - Theory confidence: 90% #>   - Next: Use bid_interpret() for Stage 2  #> Stage 2 (Interpret) completed. #>   - Central question: How are sales trending against targets? #>   - Your data story has all key elements. Focus on making each component compelling and relevant. #>   - Your central question is appropriately scoped. #>   - No user personas defined #> Stage 3 (Structure) completed. #>   - Layout: dual_process #>   - Concepts: Principle of Proximity, Default Effect #>   - No accessibility considerations specified #> Stage 4 (Anticipate) completed. #>   - Bias mitigations: 2 defined #>   - Interaction principles: 2 defined #>   - Key suggestions: anchoring mitigation: Always show reference points like previous period, budget, or industry average., framing mitigation: Toggle between progress (65% complete) and gap (35% remaining) framing., Consider also addressing these common biases: confirmation #> Stage 5 (Validate) completed. #>   - Summary panel: Key insights summary #>   - Collaboration: Team annotation features #>   - Next steps: 5 items defined #>   - Validation stage is well-defined. Focus on implementation and user testing. bid_process #> # A tibble: 1 × 14 #>   stage    summary_panel        collaboration           next_steps previous_bias #>   <chr>    <chr>                <chr>                   <chr>      <chr>         #> 1 Validate Key insights summary Team annotation featur… Conduct u… anchoring: U… #> # ℹ 9 more variables: previous_interaction <json>, previous_layout <chr>, #> #   previous_concepts <chr>, previous_accessibility <chr>, #> #   previous_central_question <chr>, previous_problem <chr>, #> #   previous_theory <chr>, suggestions <chr>, timestamp <dttm>  # Generate implementation suggestions bid_suggest_components(bid_process, \"bslib\") #> # A tibble: 4 × 7 #>   package component description bid_stage_relevance cognitive_concepts use_cases #>   <chr>   <chr>     <chr>       <chr>               <chr>              <chr>     #> 1 bslib   nav_panel Create tab… Stage 1,Stage 3     Cognitive Load Th… content … #> 2 bslib   accordion Implement … Stage 1,Stage 3     Progressive Discl… FAQ sect… #> 3 bslib   card      Organize c… Stage 3,Stage 5     Principle of Prox… Content … #> 4 bslib   layout_c… Create fle… Stage 3             Visual Hierarchy,… precise … #> # ℹ 1 more variable: relevance <dbl>  # Create a report report <- bid_report(bid_process, format = \"html\")"},{"path":"https://jrwinget.github.io/bidux/index.html","id":"learn-more","dir":"","previous_headings":"","what":"Learn More","title":"Behavior Insight Design: A Toolkit for Integrating Behavioral Science in UI/UX Design","text":"Check vignettes information: vignette(\"introduction--bid\") - Overview BID framework vignette(\"getting-started\") - Quick start guide implementation examples vignette(\"concepts-reference\") - Detailed guide implementing key concepts Visit package website complete documentation examples.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/as_tibble.bid_stage.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert bid_stage to tibble — as_tibble.bid_stage","title":"Convert bid_stage to tibble — as_tibble.bid_stage","text":"Convert bid_stage tibble","code":""},{"path":"https://jrwinget.github.io/bidux/reference/as_tibble.bid_stage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert bid_stage to tibble — as_tibble.bid_stage","text":"","code":"# S3 method for class 'bid_stage' as_tibble(x, ...)"},{"path":"https://jrwinget.github.io/bidux/reference/as_tibble.bid_stage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert bid_stage to tibble — as_tibble.bid_stage","text":"x bid_stage object ... Additional arguments (unused)","code":""},{"path":"https://jrwinget.github.io/bidux/reference/as_tibble.bid_stage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert bid_stage to tibble — as_tibble.bid_stage","text":"tibble","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_anticipate.html","id":null,"dir":"Reference","previous_headings":"","what":"Document User Behavior Anticipation Stage in BID Framework — bid_anticipate","title":"Document User Behavior Anticipation Stage in BID Framework — bid_anticipate","text":"function documents anticipated user behavior listing bias mitigation strategies related anchoring, framing, confirmation bias, etc. also supports adding interaction hints visual feedback elements.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_anticipate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Document User Behavior Anticipation Stage in BID Framework — bid_anticipate","text":"","code":"bid_anticipate(   previous_stage,   bias_mitigations = NULL,   interaction_principles = NULL )"},{"path":"https://jrwinget.github.io/bidux/reference/bid_anticipate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Document User Behavior Anticipation Stage in BID Framework — bid_anticipate","text":"previous_stage tibble list output earlier BID stage function. bias_mitigations named list bias mitigation strategies. NULL, function suggest bias mitigations based information previous stages. interaction_principles named list interaction principles (optional).","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_anticipate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Document User Behavior Anticipation Stage in BID Framework — bid_anticipate","text":"tibble containing documented information \"Anticipate\" stage.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_anticipate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Document User Behavior Anticipation Stage in BID Framework — bid_anticipate","text":"","code":"structure_info <- bid_structure(   bid_interpret(     bid_notice(       \"Issue with dropdown menus\",       evidence = \"User testing indicated delays\"     ),     central_question = \"How can we improve selection efficiency?\",     data_story = list(       hook = \"Too many options\",       context = \"Excessive choices\",       tension = \"User frustration\",       resolution = \"Simplify menu\"     )   ),   layout = \"dual_process\",   concepts = c(\"principle_of_proximity\", \"default_effect\") ) #> Auto-suggested theory: Hick's Law (confidence: 90%) #> Stage 1 (Notice) completed. (20% complete) #>   - Problem: Issue with dropdown menus #>   - Theory: Hick's Law (auto-suggested) #>   - Evidence: User testing indicated delays #>   - Theory confidence: 90% #>   - Next: Use bid_interpret() for Stage 2  #> Stage 2 (Interpret) completed. #>   - Central question: How can we improve selection efficiency? #>   - Your data story has all key elements. Focus on making each component compelling and relevant. #>   - Your central question is appropriately scoped. #>   - No user personas defined  #> Rows: 41 Columns: 7 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (7): concept, description, category, reference, example, implementation_... #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Returning all 41 concepts #>  #> ── Implementation tips for selected concepts:  #> Rows: 41 Columns: 7 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (7): concept, description, category, reference, example, implementation_... #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> • Principle of Proximity: Place related controls and visualizations in #> proximity to each other. #> Rows: 41 Columns: 7 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (7): concept, description, category, reference, example, implementation_... #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> • Default Effect: Pre-select the most useful timeframe or metrics for initial #> view. #> Stage 3 (Structure) completed. #>   - Layout: dual_process #>   - Concepts: Principle of Proximity, Default Effect #>   - No accessibility considerations specified   # Basic usage bid_anticipate(   previous_stage = structure_info,   bias_mitigations = list(     anchoring = \"Use context-aware references\",     framing = \"Toggle between positive and negative framing\"   ) ) #> Rows: 41 Columns: 7 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (7): concept, description, category, reference, example, implementation_... #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Found 7 concept(s) matching 'bias|anchor|fram|confirm' #> Automatically suggested interaction principles: progressive_disclosure, hover_effects. #> Rows: 41 Columns: 7 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (7): concept, description, category, reference, example, implementation_... #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Found partial match: Anchoring Effect #> Rows: 41 Columns: 7 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (7): concept, description, category, reference, example, implementation_... #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Found partial match: Framing & Loss Aversion #> Stage 4 (Anticipate) completed. #>   - Bias mitigations: 2 defined #>   - Interaction principles: 2 defined #>   - Key suggestions: anchoring mitigation: Always show reference points like previous period, budget, or industry average., framing mitigation: Toggle between progress (65% complete) and gap (35% remaining) framing., Consider also addressing these common biases: confirmation  #> # A tibble: 1 × 8 #>   stage      bias_mitigations             interaction_principles previous_layout #>   <chr>      <chr>                        <json>                 <chr>           #> 1 Anticipate anchoring: Use context-awar… \"{\\\"progressive_discl… dual_process    #> # ℹ 4 more variables: previous_concepts <chr>, previous_accessibility <chr>, #> #   suggestions <chr>, timestamp <dttm>  # Let the function suggest bias mitigations based on previous stages bid_anticipate(   previous_stage = structure_info ) #> Rows: 41 Columns: 7 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (7): concept, description, category, reference, example, implementation_... #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Found 7 concept(s) matching 'bias|anchor|fram|confirm' #> Automatically suggested bias mitigations: association bias, clustering illusion, status quo bias, choice architecture, framing. #> Automatically suggested interaction principles: progressive_disclosure, hover_effects. #> Rows: 41 Columns: 7 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (7): concept, description, category, reference, example, implementation_... #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Concept 'association bias' not found #> Rows: 41 Columns: 7 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (7): concept, description, category, reference, example, implementation_... #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Concept 'clustering illusion' not found #> Rows: 41 Columns: 7 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (7): concept, description, category, reference, example, implementation_... #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Concept 'status quo bias' not found #> Rows: 41 Columns: 7 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (7): concept, description, category, reference, example, implementation_... #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Concept 'choice architecture' not found #> Rows: 41 Columns: 7 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (7): concept, description, category, reference, example, implementation_... #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Found partial match: Framing & Loss Aversion #> Stage 4 (Anticipate) completed. #>   - Bias mitigations: 5 defined #>   - Interaction principles: 2 defined #>   - Key suggestions: association bias mitigation: Consider how this bias affects user decisions., clustering illusion mitigation: Consider how this bias affects user decisions., status quo bias mitigation: Consider how this bias affects user decisions.  #> # A tibble: 1 × 8 #>   stage      bias_mitigations             interaction_principles previous_layout #>   <chr>      <chr>                        <json>                 <chr>           #> 1 Anticipate \"association bias: Consider… \"{\\\"progressive_discl… dual_process    #> # ℹ 4 more variables: previous_concepts <chr>, previous_accessibility <chr>, #> #   suggestions <chr>, timestamp <dttm>  # With interaction principles bid_anticipate(   previous_stage = structure_info,   bias_mitigations = list(     anchoring = \"Use context-aware references\",     framing = \"Toggle between positive and negative framing\"   ),   interaction_principles = list(     hover_effects = \"Show additional information on hover\",     selection_feedback = \"Highlight active filters with color change\",     progressive_actions = \"Show advanced options only if basic ones are used\"   ) ) #> Rows: 41 Columns: 7 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (7): concept, description, category, reference, example, implementation_... #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Found 7 concept(s) matching 'bias|anchor|fram|confirm' #> Rows: 41 Columns: 7 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (7): concept, description, category, reference, example, implementation_... #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Found partial match: Anchoring Effect #> Rows: 41 Columns: 7 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (7): concept, description, category, reference, example, implementation_... #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Found partial match: Framing & Loss Aversion #> Stage 4 (Anticipate) completed. #>   - Bias mitigations: 2 defined #>   - Interaction principles: 3 defined #>   - Key suggestions: anchoring mitigation: Always show reference points like previous period, budget, or industry average., framing mitigation: Toggle between progress (65% complete) and gap (35% remaining) framing., Consider also addressing these common biases: confirmation  #> # A tibble: 1 × 8 #>   stage      bias_mitigations             interaction_principles previous_layout #>   <chr>      <chr>                        <json>                 <chr>           #> 1 Anticipate anchoring: Use context-awar… \"{\\\"hover_effects\\\":\\… dual_process    #> # ℹ 4 more variables: previous_concepts <chr>, previous_accessibility <chr>, #> #   suggestions <chr>, timestamp <dttm>"},{"path":"https://jrwinget.github.io/bidux/reference/bid_concept.html","id":null,"dir":"Reference","previous_headings":"","what":"Get detailed information about a specific concept — bid_concept","title":"Get detailed information about a specific concept — bid_concept","text":"Returns detailed information specific BID framework concept, including implementation recommendations based concept's stage.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_concept.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get detailed information about a specific concept — bid_concept","text":"","code":"bid_concept(concept_name, add_recommendations = TRUE)"},{"path":"https://jrwinget.github.io/bidux/reference/bid_concept.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get detailed information about a specific concept — bid_concept","text":"concept_name character string exact partial concept name add_recommendations Logical indicating whether add stage-specific recommendations","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_concept.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get detailed information about a specific concept — bid_concept","text":"tibble detailed concept information","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_concepts.html","id":null,"dir":"Reference","previous_headings":"","what":"Search BID Framework Concepts — bid_concepts","title":"Search BID Framework Concepts — bid_concepts","text":"Search behavioral science UX concepts used BID framework. Returns concepts matching search term along descriptions, categories, implementation guidance.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_concepts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search BID Framework Concepts — bid_concepts","text":"","code":"bid_concepts(search = NULL, fuzzy_match = TRUE, max_distance = 2)"},{"path":"https://jrwinget.github.io/bidux/reference/bid_concepts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search BID Framework Concepts — bid_concepts","text":"search character string search . NULL empty, returns concepts. fuzzy_match Logical indicating whether use fuzzy string matching (default: TRUE) max_distance Maximum string distance fuzzy matching (default: 2)","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_concepts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search BID Framework Concepts — bid_concepts","text":"tibble containing matching concepts details","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_interpret.html","id":null,"dir":"Reference","previous_headings":"","what":"Document User Interpretation Stage in BID Framework — bid_interpret","title":"Document User Interpretation Stage in BID Framework — bid_interpret","text":"function documents interpretation user needs, capturing central question data storytelling narrative. represents stage 2 BID framework.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_interpret.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Document User Interpretation Stage in BID Framework — bid_interpret","text":"","code":"bid_interpret(   previous_stage,   central_question = NULL,   data_story = NULL,   user_personas = NULL )"},{"path":"https://jrwinget.github.io/bidux/reference/bid_interpret.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Document User Interpretation Stage in BID Framework — bid_interpret","text":"previous_stage tibble list output earlier BID stage function. central_question character string representing main question answered. NULL, suggested based previous stage information. data_story list containing elements hook, context, tension, resolution, optionally audience, metrics, visual_approach. NULL, elements suggested based previous stage. user_personas Optional list user personas consider design.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_interpret.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Document User Interpretation Stage in BID Framework — bid_interpret","text":"tibble containing documented information \"Interpret\" stage.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_interpret.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Document User Interpretation Stage in BID Framework — bid_interpret","text":"","code":"notice <- bid_notice(   problem = \"Users struggle with complex data\",   evidence = \"Test results indicate delays\" ) #> Auto-suggested theory: Cognitive Load Theory (confidence: 90%) #> Stage 1 (Notice) completed. (20% complete) #>   - Problem: Users struggle with complex data #>   - Theory: Cognitive Load Theory (auto-suggested) #>   - Evidence: Test results indicate delays #>   - Theory confidence: 90% #>   - Next: Use bid_interpret() for Stage 2   # Basic usage bid_interpret(   previous_stage = notice,   central_question = \"What drives the decline in user engagement?\",   data_story = list(     hook = \"Declining trend in engagement\",     context = \"Previous high engagement levels\",     tension = \"Unexpected drop\",     resolution = \"Investigate new UI changes\",     audience = \"Marketing team\",     metrics = c(\"Daily Active Users\", \"Session Duration\"),     visual_approach = \"Comparison charts showing before/after UI change\"   ) ) #> ℹ Created user persona 'Marketing Professional Persona' based on audience information #> Stage 2 (Interpret) completed. #>   - Central question: What drives the decline in user engagement? #>   - Your data story has all key elements. Focus on making each component compelling and relevant. #>   - Your central question is appropriately scoped. #>   - User personas: 1 defined  #> BID Framework - Interpret Stage #> Generated: 2025-06-21 00:15:31  #> Progress: 40 % (2/5)  #>  #> Central Question: What drives the decline in user engagement?  #> Story Hook: Declining trend in engagement  #> Story Completeness: 100%  #> User Personas: 1 defined #>  #>  Suggestions: Your data story has all key elements. Focus on making each component compelling and relevant. Your central question is appropriately scoped. You've defined 1 persona(s). Ensure your design addresses the specific needs of each.  #>  #>  Use summary() for detailed information   # Let the function suggest content based on previous stage bid_interpret(   previous_stage = notice ) #> ℹ Suggested central question: How can we reduce cognitive load to address Users struggle with complex data? #> ℹ Suggested data story elements based on previous stage information #> Stage 2 (Interpret) completed. #>   - Central question: How can we reduce cognitive load to address Users struggle w... #>   - Your data story has all key elements. Focus on making each component compelling and relevant. #>   - Your central question is appropriately scoped. #>   - No user personas defined  #> BID Framework - Interpret Stage #> Generated: 2025-06-21 00:15:31  #> Progress: 40 % (2/5)  #>  #> Central Question: How can we reduce cognitive load to address Users struggle with complex data?  #> Story Hook: Users are experiencing problems with Users struggle with complex data  #> Story Completeness: 100%  #>  #>  Suggestions: Your data story has all key elements. Focus on making each component compelling and relevant. Your central question is appropriately scoped. Consider defining specific user personas to better target your design.  #>  #>  Use summary() for detailed information   # With user personas bid_interpret(   previous_stage = notice,   central_question = \"How can we improve data discovery?\",   data_story = list(     hook = \"Users are missing key insights\",     context = \"Critical data is available but overlooked\",     tension = \"Time-sensitive decisions are delayed\",     resolution = \"Highlight key metrics more effectively\"   ),   user_personas = list(     list(       name = \"Sara, Data Analyst\",       goals = \"Needs to quickly find patterns in data\",       pain_points = \"Gets overwhelmed by too many visualizations\",       technical_level = \"Advanced\"     ),     list(       name = \"Marcus, Executive\",       goals = \"Wants high-level insights at a glance\",       pain_points = \"Limited time to analyze detailed reports\",       technical_level = \"Basic\"     )   ) ) #> Stage 2 (Interpret) completed. #>   - Central question: How can we improve data discovery? #>   - Your data story has all key elements. Focus on making each component compelling and relevant. #>   - Your central question is appropriately scoped. #>   - User personas: 2 defined  #> BID Framework - Interpret Stage #> Generated: 2025-06-21 00:15:31  #> Progress: 40 % (2/5)  #>  #> Central Question: How can we improve data discovery?  #> Story Hook: Users are missing key insights  #> Story Completeness: 100%  #> User Personas: 2 defined #>  #>  Suggestions: Your data story has all key elements. Focus on making each component compelling and relevant. Your central question is appropriately scoped. You've defined 2 persona(s). Ensure your design addresses the specific needs of each.  #>  #>  Use summary() for detailed information"},{"path":"https://jrwinget.github.io/bidux/reference/bid_notice.html","id":null,"dir":"Reference","previous_headings":"","what":"Document User Notice Stage in BID Framework — bid_notice","title":"Document User Notice Stage in BID Framework — bid_notice","text":"function documents initial observation problem identification stage. represents stage 1 BID framework now returns structured bid_stage object enhanced metadata external mapping support.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_notice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Document User Notice Stage in BID Framework — bid_notice","text":"","code":"bid_notice(problem, theory = NULL, evidence = NULL, target_audience = NULL)"},{"path":"https://jrwinget.github.io/bidux/reference/bid_notice.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Document User Notice Stage in BID Framework — bid_notice","text":"problem character string describing observed user problem. theory character string describing behavioral theory might explain problem. NULL, auto-suggested using external theory mappings. evidence character string describing evidence supporting problem. target_audience Optional character string describing target audience.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_notice.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Document User Notice Stage in BID Framework — bid_notice","text":"bid_stage object containing documented information \"Notice\" stage enhanced metadata validation.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_notice.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Document User Notice Stage in BID Framework — bid_notice","text":"","code":"# Basic usage with auto-suggested theory notice_result <- bid_notice(   problem = \"Users struggle with complex dropdown menus containing too many options\",   evidence = \"User testing shows 65% abandonment rate on filter selection\" ) #> Auto-suggested theory: Hick's Law (confidence: 90%) #> Stage 1 (Notice) completed. (20% complete) #>   - Problem: Users struggle with complex dropdown menus containing too... #>   - Theory: Hick's Law (auto-suggested) #>   - Evidence: User testing shows 65% abandonment rate on filter selection #>   - Theory confidence: 90% #>   - Next: Use bid_interpret() for Stage 2   # Print shows human-friendly summary print(notice_result) #> BID Framework - Notice Stage #> Generated: 2025-06-21 00:15:31  #> Progress: 20 % (1/5)  #>  #> Problem: Users struggle with complex dropdown menus containing too many options  #> Theory: Hick's Law (auto-suggested)  #> Evidence: User testing shows 65% abandonment rate on filter selection  #>  #>  Suggestions: Measure decision time and number of choices to validate Hick's Law application Define specific target audience to better focus design solutions Consider conducting task analysis to understand specific struggle points and failure modes Consider progressive disclosure or categorization to reduce choice complexity  #>  #>  Use summary() for detailed information   # Access underlying data summary(notice_result) #> === BID Framework: Notice Stage Summary === #>  #> Metadata: #>    auto_suggested_theory : Yes  #>    theory_confidence : 90%  #>    problem_length : 70  #>    evidence_length : 59  #>    has_target_audience : No  #>    validation_status : completed  #>    stage_number : 1  #>    total_stages : 5  #>    custom_mappings_used : No  #>  #> Stage Data: #>    stage : Notice  #>    problem : Users struggle with complex dropdown menus containing too many options  #>    theory : Hick's Law  #>    evidence : User testing shows 65% abandonment rate on filter selection  #>    suggestions : Measure decision time and number of choices to validate Hick's Law applicatio...  #>  #> Generated: 2025-06-21 00:15:31   # Check stage and metadata get_stage(notice_result) #> [1] \"Notice\" get_metadata(notice_result) #> $auto_suggested_theory #> [1] TRUE #>  #> $theory_confidence #> [1] 0.9 #>  #> $problem_length #> [1] 70 #>  #> $evidence_length #> [1] 59 #>  #> $has_target_audience #> [1] FALSE #>  #> $validation_status #> [1] \"completed\" #>  #> $stage_number #> [1] 1 #>  #> $total_stages #> [1] 5 #>  #> $custom_mappings_used #> [1] FALSE #>   # With explicit theory notice_explicit <- bid_notice(   problem = \"Mobile interface is difficult to navigate\",   theory = \"Fitts's Law\",   evidence = \"Mobile users report frustration with small touch targets\",   target_audience = \"Mobile users with varying technical expertise\" ) #> Stage 1 (Notice) completed. (20% complete) #>   - Problem: Mobile interface is difficult to navigate #>   - Theory: Fitts's Law #>   - Evidence: Mobile users report frustration with small touch targets #>   - Next: Use bid_interpret() for Stage 2"},{"path":"https://jrwinget.github.io/bidux/reference/bid_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate BID Framework Report — bid_report","title":"Generate BID Framework Report — bid_report","text":"Creates comprehensive report completed BID framework process. report summarizes stages provides recommendations implementation.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate BID Framework Report — bid_report","text":"","code":"bid_report(   validate_stage,   format = c(\"text\", \"html\", \"markdown\"),   include_diagrams = TRUE )"},{"path":"https://jrwinget.github.io/bidux/reference/bid_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate BID Framework Report — bid_report","text":"validate_stage tibble output bid_validate(). format Output format: \"text\", \"html\", \"markdown\" include_diagrams Logical, whether include ASCII diagrams report (default: TRUE)","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate BID Framework Report — bid_report","text":"formatted report summarizing entire BID process","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_report.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate BID Framework Report — bid_report","text":"","code":"if(interactive()){   # After completing all 5 stages   validation_result <- bid_validate(...)    # Generate a text report   bid_report(validation_result)    # Generate an HTML report   bid_report(validation_result, format = \"html\")    # Generate a markdown report without diagrams   bid_report(     validation_result,     format = \"markdown\",     include_diagrams = FALSE   ) }"},{"path":"https://jrwinget.github.io/bidux/reference/bid_result.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for BID result collection objects — bid_result","title":"Constructor for BID result collection objects — bid_result","text":"Constructor BID result collection objects","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_result.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for BID result collection objects — bid_result","text":"","code":"bid_result(stages)"},{"path":"https://jrwinget.github.io/bidux/reference/bid_result.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for BID result collection objects — bid_result","text":"stages List bid_stage objects","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_result.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for BID result collection objects — bid_result","text":"Object class 'bid_result'","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_stage.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for BID stage objects — bid_stage","title":"Constructor for BID stage objects — bid_stage","text":"Constructor BID stage objects","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_stage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for BID stage objects — bid_stage","text":"","code":"bid_stage(stage, data, metadata = list())"},{"path":"https://jrwinget.github.io/bidux/reference/bid_stage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for BID stage objects — bid_stage","text":"stage Character string indicating stage name data Tibble containing stage data metadata List containing additional metadata","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_stage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for BID stage objects — bid_stage","text":"Object class 'bid_stage'","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_structure.html","id":null,"dir":"Reference","previous_headings":"","what":"Document Dashboard Structure Stage in BID Framework — bid_structure","title":"Document Dashboard Structure Stage in BID Framework — bid_structure","text":"function documents structure dashboard, including layout design elements proximity, dual-processing, default effects. supports modern layout approaches like breathable layouts visual hierarchies, ensuring accessibility considerations properly documented.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_structure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Document Dashboard Structure Stage in BID Framework — bid_structure","text":"","code":"bid_structure(previous_stage, layout, concepts = NULL, accessibility = NULL)"},{"path":"https://jrwinget.github.io/bidux/reference/bid_structure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Document Dashboard Structure Stage in BID Framework — bid_structure","text":"previous_stage tibble list output earlier BID stage function. layout character string indicating layout type (e.g., \"dual_process\", \"grid\", \"card\", \"tabs\", \"breathable\"). concepts character vector BID concepts applied stage. Concepts can provided natural language (e.g., \"Principle Proximity\") underscores (e.g., \"principle_of_proximity\"). function uses fuzzy matching identify concepts. NULL, attempt detect relevant concepts previous stages. accessibility list accessibility considerations (optional). Common parameters include: color_contrast, keyboard_navigation, screen_reader, text_size, alternative_text, focus_indicators, semantic_markup, aria_labels.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_structure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Document Dashboard Structure Stage in BID Framework — bid_structure","text":"bid_stage object containing documented information \"Structure\" stage.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_structure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Document Dashboard Structure Stage in BID Framework — bid_structure","text":"","code":"interpret <- bid_notice(   problem = \"Users struggle with information overload\",   evidence = \"Survey results indicate delays\" ) |>   bid_interpret(     central_question = \"How can we simplify data presentation?\",     data_story = list(       hook = \"Data is too complex\",       context = \"Overloaded with charts\",       tension = \"Confusing layout\",       resolution = \"Introduce clear grouping\"     )   ) #> Auto-suggested theory: Processing Fluency (confidence: 70%) #> Stage 1 (Notice) completed. (20% complete) #>   - Problem: Users struggle with information overload #>   - Theory: Processing Fluency (auto-suggested) #>   - Evidence: Survey results indicate delays #>   - Theory confidence: 70% #>   - Next: Use bid_interpret() for Stage 2  #> Stage 2 (Interpret) completed. #>   - Central question: How can we simplify data presentation? #>   - Your data story has all key elements. Focus on making each component compelling and relevant. #>   - Your central question is appropriately scoped. #>   - No user personas defined   # Basic usage with natural language concept names bid_structure(   previous_stage = interpret,   layout = \"dual_process\",   concepts = c(\"Principle of Proximity\", \"Default Effect\") ) #> Rows: 41 Columns: 7 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (7): concept, description, category, reference, example, implementation_... #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Returning all 41 concepts #>  #> ── Implementation tips for selected concepts:  #> Rows: 41 Columns: 7 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (7): concept, description, category, reference, example, implementation_... #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> • Principle of Proximity: Place related controls and visualizations in #> proximity to each other. #> Rows: 41 Columns: 7 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (7): concept, description, category, reference, example, implementation_... #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> • Default Effect: Pre-select the most useful timeframe or metrics for initial #> view. #> Stage 3 (Structure) completed. #>   - Layout: dual_process #>   - Concepts: Principle of Proximity, Default Effect #>   - No accessibility considerations specified  #> BID Framework - Structure Stage #> Generated: 2025-06-21 00:15:32  #> Progress: 60 % (3/5)  #>  #> Layout: dual_process  #> Concepts: Principle of Proximity, Default Effect  #>  #>  Suggestions: For dual_process layout: Consider separating quick insights (System 1) from detailed analysis (System 2). Place summary metrics and KPIs at the top, with detailed tables and expanded visualizations below or in secondary views. Place related controls and visualizations in proximity to each other. Pre-select the most useful timeframe or metrics for initial view. Consider adding accessibility features such as: - Sufficient color contrast (WCAG AA requires 4.5:1 ratio) - Keyboard navigation for all interactive elements - Screen reader support with descriptive alt text for visuals - Minimum text size (16px for body text) - Focus indicators for keyboard users - Semantic markup for proper document structure  #>  #>  Use summary() for detailed information"},{"path":"https://jrwinget.github.io/bidux/reference/bid_suggest_components.html","id":null,"dir":"Reference","previous_headings":"","what":"Suggest UI Components Based on BID Framework Analysis — bid_suggest_components","title":"Suggest UI Components Based on BID Framework Analysis — bid_suggest_components","text":"function analyzes results BID framework stages suggests appropriate UI components popular R packages like shiny, bslib, DT, etc. suggestions based design principles user needs identified BID process.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_suggest_components.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Suggest UI Components Based on BID Framework Analysis — bid_suggest_components","text":"","code":"bid_suggest_components(bid_stage, package = NULL)"},{"path":"https://jrwinget.github.io/bidux/reference/bid_suggest_components.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Suggest UI Components Based on BID Framework Analysis — bid_suggest_components","text":"bid_stage tibble output BID framework stage function package Optional character string specifying package focus suggestions . Options include \"shiny\", \"bslib\", \"DT\", \"plotly\", \"reactable\", \"htmlwidgets\". NULL, suggestions packages provided.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_suggest_components.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Suggest UI Components Based on BID Framework Analysis — bid_suggest_components","text":"tibble containing component suggestions relevance scores","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_suggest_components.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Suggest UI Components Based on BID Framework Analysis — bid_suggest_components","text":"","code":"if(interactive()){   # After completing BID stages   notice_result <- bid_notice(     problem = \"Users struggle with complex data\",     theory = \"Cognitive Load Theory\"   )    # Get all component suggestions   bid_suggest_components(notice_result)    # Get only bslib suggestions   bid_suggest_components(notice_result, package = \"bslib\")    # Get shiny-specific suggestions   bid_suggest_components(notice_result, package = \"shiny\") }"},{"path":"https://jrwinget.github.io/bidux/reference/bid_validate.html","id":null,"dir":"Reference","previous_headings":"","what":"Document User Validation Stage in BID Framework — bid_validate","title":"Document User Validation Stage in BID Framework — bid_validate","text":"function documents validation stage, user tests refines dashboard. represents stage 5 BID framework.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_validate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Document User Validation Stage in BID Framework — bid_validate","text":"","code":"bid_validate(   previous_stage,   summary_panel = NULL,   collaboration = NULL,   next_steps = NULL )"},{"path":"https://jrwinget.github.io/bidux/reference/bid_validate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Document User Validation Stage in BID Framework — bid_validate","text":"previous_stage tibble list output earlier BID stage function. summary_panel character string describing final summary panel key insight presentation. collaboration character string describing dashboard enables collaboration sharing. next_steps character vector string describing recommended next steps implementation iteration.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_validate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Document User Validation Stage in BID Framework — bid_validate","text":"tibble containing documented information \"Validate\" stage.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_validate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Document User Validation Stage in BID Framework — bid_validate","text":"","code":"structure_input <- bid_notice(   problem  = \"Issue with dropdown menus\",   evidence = \"User testing indicated delays\" ) |>   bid_interpret(     central_question = \"How can we improve selection efficiency?\",     data_story = list(       hook      = \"Too many options\",       context   = \"Excessive choices\",       tension   = \"User frustration\",       resolution= \"Simplify menu\"     )   ) #> Auto-suggested theory: Hick's Law (confidence: 90%) #> Stage 1 (Notice) completed. (20% complete) #>   - Problem: Issue with dropdown menus #>   - Theory: Hick's Law (auto-suggested) #>   - Evidence: User testing indicated delays #>   - Theory confidence: 90% #>   - Next: Use bid_interpret() for Stage 2  #> Stage 2 (Interpret) completed. #>   - Central question: How can we improve selection efficiency? #>   - Your data story has all key elements. Focus on making each component compelling and relevant. #>   - Your central question is appropriately scoped. #>   - No user personas defined   structure_result <- bid_structure(   previous_stage = structure_input,   layout         = \"dual_process\",   concepts       = c(\"Principle of Proximity\", \"Default Effect\") ) #> Rows: 41 Columns: 7 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (7): concept, description, category, reference, example, implementation_... #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Returning all 41 concepts #>  #> ── Implementation tips for selected concepts:  #> Rows: 41 Columns: 7 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (7): concept, description, category, reference, example, implementation_... #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> • Principle of Proximity: Place related controls and visualizations in #> proximity to each other. #> Rows: 41 Columns: 7 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (7): concept, description, category, reference, example, implementation_... #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> • Default Effect: Pre-select the most useful timeframe or metrics for initial #> view. #> Stage 3 (Structure) completed. #>   - Layout: dual_process #>   - Concepts: Principle of Proximity, Default Effect #>   - No accessibility considerations specified   anticipate <- bid_anticipate(   previous_stage    = structure_result,   bias_mitigations  = list(     anchoring = \"Provide reference points\",     framing   = \"Use gain-framed messaging\"   ) ) #> Rows: 41 Columns: 7 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (7): concept, description, category, reference, example, implementation_... #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Found 7 concept(s) matching 'bias|anchor|fram|confirm' #> Automatically suggested interaction principles: progressive_disclosure, hover_effects. #> Rows: 41 Columns: 7 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (7): concept, description, category, reference, example, implementation_... #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Found partial match: Anchoring Effect #> Rows: 41 Columns: 7 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (7): concept, description, category, reference, example, implementation_... #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Found partial match: Framing & Loss Aversion #> Stage 4 (Anticipate) completed. #>   - Bias mitigations: 2 defined #>   - Interaction principles: 2 defined #>   - Key suggestions: anchoring mitigation: Always show reference points like previous period, budget, or industry average., framing mitigation: Toggle between progress (65% complete) and gap (35% remaining) framing., Consider also addressing these common biases: confirmation   bid_validate(   previous_stage = anticipate,   summary_panel  = \"Clear summary of key insights with action items\",   collaboration  = \"Team annotation and sharing features\",   next_steps     = c(     \"Conduct user testing with target audience\",     \"Implement accessibility improvements\",     \"Add mobile responsiveness\"   ) ) #> Stage 5 (Validate) completed. #>   - Summary panel: Clear summary of key insights with action items #>   - Collaboration: Team annotation and sharing features #>   - Next steps: 3 items defined #>   - Validation stage is well-defined. Focus on implementation and user testing.  #> # A tibble: 1 × 14 #>   stage    summary_panel                  collaboration next_steps previous_bias #>   <chr>    <chr>                          <chr>         <chr>      <chr>         #> 1 Validate Clear summary of key insights… Team annotat… Conduct u… anchoring: P… #> # ℹ 9 more variables: previous_interaction <json>, previous_layout <chr>, #> #   previous_concepts <chr>, previous_accessibility <chr>, #> #   previous_central_question <chr>, previous_problem <chr>, #> #   previous_theory <chr>, suggestions <chr>, timestamp <dttm>"},{"path":"https://jrwinget.github.io/bidux/reference/bidux-package.html","id":null,"dir":"Reference","previous_headings":"","what":"bidux: Behavior Insight Design: A Toolkit for Integrating Behavioral Science in UI/UX Design — bidux-package","title":"bidux: Behavior Insight Design: A Toolkit for Integrating Behavioral Science in UI/UX Design — bidux-package","text":"Provides framework toolkit guide 'shiny' developers implementing Behavior Insight Design (BID) framework. package offers functions documenting five stages (Notice, Interpret, Structure, Anticipate, Validate), along comprehensive concept dictionary.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bidux-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"bidux: Behavior Insight Design: A Toolkit for Integrating Behavioral Science in UI/UX Design — bidux-package","text":"Maintainer: Jeremy Winget contact@jrwinget.com (ORCID)","code":""},{"path":"https://jrwinget.github.io/bidux/reference/extract_stage.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract specific stage from bid_result — extract_stage","title":"Extract specific stage from bid_result — extract_stage","text":"Extract specific stage bid_result","code":""},{"path":"https://jrwinget.github.io/bidux/reference/extract_stage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract specific stage from bid_result — extract_stage","text":"","code":"extract_stage(workflow, stage)"},{"path":"https://jrwinget.github.io/bidux/reference/extract_stage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract specific stage from bid_result — extract_stage","text":"workflow bid_result object stage Character string stage name","code":""},{"path":"https://jrwinget.github.io/bidux/reference/extract_stage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract specific stage from bid_result — extract_stage","text":"bid_stage object NULL found","code":""},{"path":"https://jrwinget.github.io/bidux/reference/generate_notice_suggestions.html","id":null,"dir":"Reference","previous_headings":"","what":"Enhanced suggestions generator for Notice stage — generate_notice_suggestions","title":"Enhanced suggestions generator for Notice stage — generate_notice_suggestions","text":"Enhanced suggestions generator Notice stage","code":""},{"path":"https://jrwinget.github.io/bidux/reference/generate_notice_suggestions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enhanced suggestions generator for Notice stage — generate_notice_suggestions","text":"","code":"generate_notice_suggestions(problem, theory, evidence, target_audience)"},{"path":"https://jrwinget.github.io/bidux/reference/generate_notice_suggestions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Enhanced suggestions generator for Notice stage — generate_notice_suggestions","text":"problem Character string problem description theory Character string theory evidence Character string evidence target_audience Character string target audience (optional)","code":""},{"path":"https://jrwinget.github.io/bidux/reference/generate_notice_suggestions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Enhanced suggestions generator for Notice stage — generate_notice_suggestions","text":"Character string suggestions","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_accessibility_recommendations.html","id":null,"dir":"Reference","previous_headings":"","what":"Get accessibility recommendations for a given context — get_accessibility_recommendations","title":"Get accessibility recommendations for a given context — get_accessibility_recommendations","text":"Get accessibility recommendations given context","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_accessibility_recommendations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get accessibility recommendations for a given context — get_accessibility_recommendations","text":"","code":"get_accessibility_recommendations(context = \"\", guidelines = NULL)"},{"path":"https://jrwinget.github.io/bidux/reference/get_accessibility_recommendations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get accessibility recommendations for a given context — get_accessibility_recommendations","text":"context Character string describing interface context guidelines Optional custom accessibility guidelines","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_accessibility_recommendations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get accessibility recommendations for a given context — get_accessibility_recommendations","text":"Character vector relevant accessibility recommendations","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_concept_bias_mappings.html","id":null,"dir":"Reference","previous_headings":"","what":"Get bias mitigation strategies for concepts — get_concept_bias_mappings","title":"Get bias mitigation strategies for concepts — get_concept_bias_mappings","text":"Get bias mitigation strategies concepts","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_concept_bias_mappings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get bias mitigation strategies for concepts — get_concept_bias_mappings","text":"","code":"get_concept_bias_mappings(concepts, mappings = NULL)"},{"path":"https://jrwinget.github.io/bidux/reference/get_concept_bias_mappings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get bias mitigation strategies for concepts — get_concept_bias_mappings","text":"concepts Character vector concept names mappings Optional custom concept-bias mappings","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_concept_bias_mappings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get bias mitigation strategies for concepts — get_concept_bias_mappings","text":"Data frame relevant bias mappings","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_concepts_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function to get concepts data from external files — get_concepts_data","title":"Internal function to get concepts data from external files — get_concepts_data","text":"Internal function get concepts data external files","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_concepts_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function to get concepts data from external files — get_concepts_data","text":"","code":"get_concepts_data()"},{"path":"https://jrwinget.github.io/bidux/reference/get_concepts_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal function to get concepts data from external files — get_concepts_data","text":"tibble BID framework concepts","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_default_concepts_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get default concepts data (fallback when external file unavailable) — get_default_concepts_data","title":"Get default concepts data (fallback when external file unavailable) — get_default_concepts_data","text":"Get default concepts data (fallback external file unavailable)","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_default_concepts_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get default concepts data (fallback when external file unavailable) — get_default_concepts_data","text":"","code":"get_default_concepts_data()"},{"path":"https://jrwinget.github.io/bidux/reference/get_default_concepts_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get default concepts data (fallback when external file unavailable) — get_default_concepts_data","text":"tibble default BID framework concepts","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_default_layout_mappings.html","id":null,"dir":"Reference","previous_headings":"","what":"Get default layout mappings (fallback) — get_default_layout_mappings","title":"Get default layout mappings (fallback) — get_default_layout_mappings","text":"Get default layout mappings (fallback)","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_default_layout_mappings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get default layout mappings (fallback) — get_default_layout_mappings","text":"","code":"get_default_layout_mappings()"},{"path":"https://jrwinget.github.io/bidux/reference/get_default_layout_mappings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get default layout mappings (fallback) — get_default_layout_mappings","text":"Data frame default layout mappings","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_default_theory_mappings.html","id":null,"dir":"Reference","previous_headings":"","what":"Get default theory mappings (fallback) — get_default_theory_mappings","title":"Get default theory mappings (fallback) — get_default_theory_mappings","text":"Get default theory mappings (fallback)","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_default_theory_mappings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get default theory mappings (fallback) — get_default_theory_mappings","text":"","code":"get_default_theory_mappings()"},{"path":"https://jrwinget.github.io/bidux/reference/get_default_theory_mappings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get default theory mappings (fallback) — get_default_theory_mappings","text":"Data frame default theory mappings","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_layout_concepts.html","id":null,"dir":"Reference","previous_headings":"","what":"Get concepts recommended for a layout — get_layout_concepts","title":"Get concepts recommended for a layout — get_layout_concepts","text":"Get concepts recommended layout","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_layout_concepts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get concepts recommended for a layout — get_layout_concepts","text":"","code":"get_layout_concepts(layout, mappings = NULL)"},{"path":"https://jrwinget.github.io/bidux/reference/get_layout_concepts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get concepts recommended for a layout — get_layout_concepts","text":"layout Character string indicating layout type mappings Optional custom layout mappings","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_layout_concepts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get concepts recommended for a layout — get_layout_concepts","text":"Character vector recommended concepts","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Get metadata from bid_stage object — get_metadata","title":"Get metadata from bid_stage object — get_metadata","text":"Get metadata bid_stage object","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get metadata from bid_stage object — get_metadata","text":"","code":"get_metadata(x)"},{"path":"https://jrwinget.github.io/bidux/reference/get_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get metadata from bid_stage object — get_metadata","text":"x bid_stage object","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get metadata from bid_stage object — get_metadata","text":"List metadata","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_stage.html","id":null,"dir":"Reference","previous_headings":"","what":"Get stage name from bid_stage object — get_stage","title":"Get stage name from bid_stage object — get_stage","text":"Get stage name bid_stage object","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_stage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get stage name from bid_stage object — get_stage","text":"","code":"get_stage(x)"},{"path":"https://jrwinget.github.io/bidux/reference/get_stage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get stage name from bid_stage object — get_stage","text":"x bid_stage object","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_stage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get stage name from bid_stage object — get_stage","text":"Character string stage name","code":""},{"path":"https://jrwinget.github.io/bidux/reference/is_bid_stage.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if object is a bid_stage — is_bid_stage","title":"Check if object is a bid_stage — is_bid_stage","text":"Check object bid_stage","code":""},{"path":"https://jrwinget.github.io/bidux/reference/is_bid_stage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if object is a bid_stage — is_bid_stage","text":"","code":"is_bid_stage(x)"},{"path":"https://jrwinget.github.io/bidux/reference/is_bid_stage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if object is a bid_stage — is_bid_stage","text":"x Object test","code":""},{"path":"https://jrwinget.github.io/bidux/reference/is_bid_stage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if object is a bid_stage — is_bid_stage","text":"Logical indicating object bid_stage","code":""},{"path":"https://jrwinget.github.io/bidux/reference/is_complete.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if workflow is complete (has all 5 stages) — is_complete","title":"Check if workflow is complete (has all 5 stages) — is_complete","text":"Check workflow complete (5 stages)","code":""},{"path":"https://jrwinget.github.io/bidux/reference/is_complete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if workflow is complete (has all 5 stages) — is_complete","text":"","code":"is_complete(x)"},{"path":"https://jrwinget.github.io/bidux/reference/is_complete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if workflow is complete (has all 5 stages) — is_complete","text":"x bid_result object","code":""},{"path":"https://jrwinget.github.io/bidux/reference/is_complete.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if workflow is complete (has all 5 stages) — is_complete","text":"Logical indicating workflow complete","code":""},{"path":"https://jrwinget.github.io/bidux/reference/load_accessibility_guidelines.html","id":null,"dir":"Reference","previous_headings":"","what":"Load accessibility guidelines — load_accessibility_guidelines","title":"Load accessibility guidelines — load_accessibility_guidelines","text":"Load accessibility guidelines","code":""},{"path":"https://jrwinget.github.io/bidux/reference/load_accessibility_guidelines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load accessibility guidelines — load_accessibility_guidelines","text":"","code":"load_accessibility_guidelines(custom_guidelines = NULL)"},{"path":"https://jrwinget.github.io/bidux/reference/load_accessibility_guidelines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load accessibility guidelines — load_accessibility_guidelines","text":"custom_guidelines Optional custom guidelines data frame","code":""},{"path":"https://jrwinget.github.io/bidux/reference/load_accessibility_guidelines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load accessibility guidelines — load_accessibility_guidelines","text":"Data frame accessibility guidelines","code":""},{"path":"https://jrwinget.github.io/bidux/reference/load_concept_bias_mappings.html","id":null,"dir":"Reference","previous_headings":"","what":"Load concept-bias mappings — load_concept_bias_mappings","title":"Load concept-bias mappings — load_concept_bias_mappings","text":"Load concept-bias mappings","code":""},{"path":"https://jrwinget.github.io/bidux/reference/load_concept_bias_mappings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load concept-bias mappings — load_concept_bias_mappings","text":"","code":"load_concept_bias_mappings(custom_mappings = NULL)"},{"path":"https://jrwinget.github.io/bidux/reference/load_concept_bias_mappings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load concept-bias mappings — load_concept_bias_mappings","text":"custom_mappings Optional custom mappings data frame","code":""},{"path":"https://jrwinget.github.io/bidux/reference/load_concept_bias_mappings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load concept-bias mappings — load_concept_bias_mappings","text":"Data frame concept-bias mappings","code":""},{"path":"https://jrwinget.github.io/bidux/reference/load_layout_mappings.html","id":null,"dir":"Reference","previous_headings":"","what":"Load layout-concept mappings — load_layout_mappings","title":"Load layout-concept mappings — load_layout_mappings","text":"Load layout-concept mappings","code":""},{"path":"https://jrwinget.github.io/bidux/reference/load_layout_mappings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load layout-concept mappings — load_layout_mappings","text":"","code":"load_layout_mappings(custom_mappings = NULL)"},{"path":"https://jrwinget.github.io/bidux/reference/load_layout_mappings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load layout-concept mappings — load_layout_mappings","text":"custom_mappings Optional custom mappings data frame","code":""},{"path":"https://jrwinget.github.io/bidux/reference/load_layout_mappings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load layout-concept mappings — load_layout_mappings","text":"Data frame layout-concept mappings","code":""},{"path":"https://jrwinget.github.io/bidux/reference/load_theory_mappings.html","id":null,"dir":"Reference","previous_headings":"","what":"Load theory mappings from external file or use defaults — load_theory_mappings","title":"Load theory mappings from external file or use defaults — load_theory_mappings","text":"Load theory mappings external file use defaults","code":""},{"path":"https://jrwinget.github.io/bidux/reference/load_theory_mappings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load theory mappings from external file or use defaults — load_theory_mappings","text":"","code":"load_theory_mappings(custom_mappings = NULL)"},{"path":"https://jrwinget.github.io/bidux/reference/load_theory_mappings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load theory mappings from external file or use defaults — load_theory_mappings","text":"custom_mappings Optional custom mappings data frame","code":""},{"path":"https://jrwinget.github.io/bidux/reference/load_theory_mappings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load theory mappings from external file or use defaults — load_theory_mappings","text":"Data frame theory mappings","code":""},{"path":"https://jrwinget.github.io/bidux/reference/new_bid_result.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a BID result collection object (internal constructor) — new_bid_result","title":"Create a BID result collection object (internal constructor) — new_bid_result","text":"Create BID result collection object (internal constructor)","code":""},{"path":"https://jrwinget.github.io/bidux/reference/new_bid_result.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a BID result collection object (internal constructor) — new_bid_result","text":"","code":"new_bid_result(stages)"},{"path":"https://jrwinget.github.io/bidux/reference/new_bid_result.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a BID result collection object (internal constructor) — new_bid_result","text":"stages List bid_stage objects","code":""},{"path":"https://jrwinget.github.io/bidux/reference/new_bid_result.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a BID result collection object (internal constructor) — new_bid_result","text":"Object class 'bid_result'","code":""},{"path":"https://jrwinget.github.io/bidux/reference/new_bid_stage.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a BID stage result object (internal constructor) — new_bid_stage","title":"Create a BID stage result object (internal constructor) — new_bid_stage","text":"Create BID stage result object (internal constructor)","code":""},{"path":"https://jrwinget.github.io/bidux/reference/new_bid_stage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a BID stage result object (internal constructor) — new_bid_stage","text":"","code":"new_bid_stage(stage, data, metadata = list())"},{"path":"https://jrwinget.github.io/bidux/reference/new_bid_stage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a BID stage result object (internal constructor) — new_bid_stage","text":"stage Character string indicating stage name data Tibble containing stage data metadata List containing additional metadata","code":""},{"path":"https://jrwinget.github.io/bidux/reference/new_bid_stage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a BID stage result object (internal constructor) — new_bid_stage","text":"Object class 'bid_stage'","code":""},{"path":"https://jrwinget.github.io/bidux/reference/print.bid_result.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for BID result objects — print.bid_result","title":"Print method for BID result objects — print.bid_result","text":"Print method BID result objects","code":""},{"path":"https://jrwinget.github.io/bidux/reference/print.bid_result.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for BID result objects — print.bid_result","text":"","code":"# S3 method for class 'bid_result' print(x, ...)"},{"path":"https://jrwinget.github.io/bidux/reference/print.bid_result.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for BID result objects — print.bid_result","text":"x bid_result object ... Additional arguments","code":""},{"path":"https://jrwinget.github.io/bidux/reference/print.bid_result.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print method for BID result objects — print.bid_result","text":"Returns input bid_result object invisibly (class: c(\"bid_result\", \"list\")). method called side effects: printing workflow overview console showing completion status, stage progression, key information completed BID stage. invisible return supports method chaining emphasizing console summary output.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/print.bid_stage.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for BID stage objects — print.bid_stage","title":"Print method for BID stage objects — print.bid_stage","text":"Print method BID stage objects","code":""},{"path":"https://jrwinget.github.io/bidux/reference/print.bid_stage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for BID stage objects — print.bid_stage","text":"","code":"# S3 method for class 'bid_stage' print(x, ...)"},{"path":"https://jrwinget.github.io/bidux/reference/print.bid_stage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for BID stage objects — print.bid_stage","text":"x bid_stage object ... Additional arguments","code":""},{"path":"https://jrwinget.github.io/bidux/reference/print.bid_stage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print method for BID stage objects — print.bid_stage","text":"Returns input bid_stage object invisibly (class: c(\"bid_stage\", \"tbl_df\", \"tbl\", \"data.frame\")). method called side effects: printing formatted summary BID stage console, including stage progress, key stage-specific information, usage suggestions. invisible return allows method chaining maintaining primary purpose console output.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/suggest_theory_from_mappings.html","id":null,"dir":"Reference","previous_headings":"","what":"Suggest theory based on problem and evidence using mappings — suggest_theory_from_mappings","title":"Suggest theory based on problem and evidence using mappings — suggest_theory_from_mappings","text":"Suggest theory based problem evidence using mappings","code":""},{"path":"https://jrwinget.github.io/bidux/reference/suggest_theory_from_mappings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Suggest theory based on problem and evidence using mappings — suggest_theory_from_mappings","text":"","code":"suggest_theory_from_mappings(problem, evidence = NULL, mappings = NULL)"},{"path":"https://jrwinget.github.io/bidux/reference/suggest_theory_from_mappings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Suggest theory based on problem and evidence using mappings — suggest_theory_from_mappings","text":"problem Character string describing problem evidence Optional character string supporting evidence mappings Optional custom theory mappings","code":""},{"path":"https://jrwinget.github.io/bidux/reference/suggest_theory_from_mappings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Suggest theory based on problem and evidence using mappings — suggest_theory_from_mappings","text":"Character string suggested theory","code":""},{"path":"https://jrwinget.github.io/bidux/reference/summary.bid_result.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary method for BID result objects — summary.bid_result","title":"Summary method for BID result objects — summary.bid_result","text":"Summary method BID result objects","code":""},{"path":"https://jrwinget.github.io/bidux/reference/summary.bid_result.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary method for BID result objects — summary.bid_result","text":"","code":"# S3 method for class 'bid_result' summary(object, ...)"},{"path":"https://jrwinget.github.io/bidux/reference/summary.bid_result.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary method for BID result objects — summary.bid_result","text":"object bid_result object ... Additional arguments","code":""},{"path":"https://jrwinget.github.io/bidux/reference/summary.bid_result.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary method for BID result objects — summary.bid_result","text":"Returns input bid_result object invisibly (class: c(\"bid_result\", \"list\")). method called side effects: printing detailed workflow analysis console including completion statistics, duration metrics, comprehensive stage--stage breakdowns key data BID framework stage. invisible return facilitates method chaining focusing comprehensive console reporting.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/summary.bid_stage.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary method for BID stage objects — summary.bid_stage","title":"Summary method for BID stage objects — summary.bid_stage","text":"Summary method BID stage objects","code":""},{"path":"https://jrwinget.github.io/bidux/reference/summary.bid_stage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary method for BID stage objects — summary.bid_stage","text":"","code":"# S3 method for class 'bid_stage' summary(object, ...)"},{"path":"https://jrwinget.github.io/bidux/reference/summary.bid_stage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary method for BID stage objects — summary.bid_stage","text":"object bid_stage object ... Additional arguments","code":""},{"path":"https://jrwinget.github.io/bidux/reference/summary.bid_stage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary method for BID stage objects — summary.bid_stage","text":"Returns input bid_stage object invisibly (class: c(\"bid_stage\", \"tbl_df\", \"tbl\", \"data.frame\")). method called side effects: printing comprehensive summary console including stage metadata, non-empty data columns, timestamp information. invisible return enables method chaining prioritizing detailed console output display.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/validate_bid_result.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate BID result object — validate_bid_result","title":"Validate BID result object — validate_bid_result","text":"Validate BID result object","code":""},{"path":"https://jrwinget.github.io/bidux/reference/validate_bid_result.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate BID result object — validate_bid_result","text":"","code":"validate_bid_result(x)"},{"path":"https://jrwinget.github.io/bidux/reference/validate_bid_result.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate BID result object — validate_bid_result","text":"x Object validate","code":""},{"path":"https://jrwinget.github.io/bidux/reference/validate_bid_result.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate BID result object — validate_bid_result","text":"TRUE valid, throws error otherwise","code":""},{"path":"https://jrwinget.github.io/bidux/reference/validate_bid_stage.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate BID stage object — validate_bid_stage","title":"Validate BID stage object — validate_bid_stage","text":"Validate BID stage object","code":""},{"path":"https://jrwinget.github.io/bidux/reference/validate_bid_stage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate BID stage object — validate_bid_stage","text":"","code":"validate_bid_stage(x)"},{"path":"https://jrwinget.github.io/bidux/reference/validate_bid_stage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate BID stage object — validate_bid_stage","text":"x Object validate","code":""},{"path":"https://jrwinget.github.io/bidux/reference/validate_bid_stage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate BID stage object — validate_bid_stage","text":"TRUE valid, throws error otherwise","code":""},{"path":"https://jrwinget.github.io/bidux/news/index.html","id":"bidux-010","dir":"Changelog","previous_headings":"","what":"bidux 0.1.0","title":"bidux 0.1.0","text":"CRAN release: 2025-06-13 Initial CRAN submission. Complete implementation Behavior Insight Design (BID) framework 5 sequential stages: Notice, Interpret, Structure, Anticipate, Validate. Added initial concept dictionary 41+ behavioral science principles. Added UI component suggestions major R packages: shiny, bslib, DT, plotly, reactable, htmlwidgets. Added multi-format reporting capabilities (text, HTML, markdown) bid_report(). Added intelligent theory auto-suggestion system bid_notice(). Added comprehensive validation error handling across functions. Added three detailed vignettes: “Getting Started”, “Introduction BID”, “Concepts Reference”.","code":""}]
