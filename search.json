[{"path":[]},{"path":"https://jrwinget.github.io/bidux/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://jrwinget.github.io/bidux/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://jrwinget.github.io/bidux/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://jrwinget.github.io/bidux/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official email address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://jrwinget.github.io/bidux/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://jrwinget.github.io/bidux/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://jrwinget.github.io/bidux/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://jrwinget.github.io/bidux/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://jrwinget.github.io/bidux/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://jrwinget.github.io/bidux/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://jrwinget.github.io/bidux/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct/. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq/. Translations available https://www.contributor-covenant.org/translations/.","code":""},{"path":"https://jrwinget.github.io/bidux/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to {bidux}","title":"Contributing to {bidux}","text":"First , thank interest making bidux better! Whether ’re filing bug report, suggesting new feature, improving documentation, submitting code, contributions make project great.","code":""},{"path":"https://jrwinget.github.io/bidux/CONTRIBUTING.html","id":"id_-code-of-conduct","dir":"","previous_headings":"","what":"📜 Code of Conduct","title":"Contributing to {bidux}","text":"contributors must abide Contributor Code Conduct. Please read participating.","code":""},{"path":"https://jrwinget.github.io/bidux/CONTRIBUTING.html","id":"id_-reporting-bugs","dir":"","previous_headings":"","what":"🐛 Reporting Bugs","title":"Contributing to {bidux}","text":"Search existing issues see ’s already reported. , open new issue using Bug Report template: https://github.com/jrwinget/bidux/issues/new?template=01_bug-report.yml Fill sections, including reproducible examples session info.","code":""},{"path":"https://jrwinget.github.io/bidux/CONTRIBUTING.html","id":"id_-suggesting-enhancements","dir":"","previous_headings":"","what":"✨ Suggesting Enhancements","title":"Contributing to {bidux}","text":"Browse open feature requests avoid duplicates. Open new issue Feature Request template: https://github.com/jrwinget/bidux/issues/new?template=02_feature-request.yml Describe use case, proposed API, relevant links mockups.","code":""},{"path":"https://jrwinget.github.io/bidux/CONTRIBUTING.html","id":"id_-documentation-improvements","dir":"","previous_headings":"","what":"📖 Documentation Improvements","title":"Contributing to {bidux}","text":"rely clear examples comprehensive docs. propose improvements: Create issue Documentation template: https://github.com/jrwinget/bidux/issues/new?template=03_documentation-improvement.yml Submit PR updated .Rmd, vignettes, help files. Use \\donttest{} long-running examples, ensure code examples runs without external dependencies.","code":""},{"path":"https://jrwinget.github.io/bidux/CONTRIBUTING.html","id":"id_-other-issue-templates","dir":"","previous_headings":"","what":"🗂 Other Issue Templates","title":"Contributing to {bidux}","text":"♿ Accessibility Issue - Report fix accessibility barriers 🧠 Theory Suggestions - Propose new concepts theories ✨ Shiny Integration Requests - Improve integration Shiny packages","code":""},{"path":"https://jrwinget.github.io/bidux/CONTRIBUTING.html","id":"id_-pull-request-workflow","dir":"","previous_headings":"","what":"👩‍💻 Pull Request Workflow","title":"Contributing to {bidux}","text":"Fork jrwinget/bidux repository. Create branch named feature/-feature bugfix/issue-123. Install dependencies: Load package run tests: Write clear, descriptive commit messages. Document new functions roxygen2 run: Check package CRAN: Push branch open PR main. CI checks run automatically. Address failures requesting review.","code":"pak::pak(desc::desc_get_deps()$package) devtools::load_all() devtools::test() devtools::document() devtools::check()"},{"path":"https://jrwinget.github.io/bidux/CONTRIBUTING.html","id":"id_-code-style-guidelines","dir":"","previous_headings":"","what":"🖋 Code Style Guidelines","title":"Contributing to {bidux}","text":"follow tidyverse style conventions: Use snake_case function variable names. Avoid magrittr pipe (%>%); prefer native pipe (|>). Adhere tidyverse style guide. Run styler::style_pkg() lintr::lint_package() catch formatting issues.","code":""},{"path":"https://jrwinget.github.io/bidux/CONTRIBUTING.html","id":"id_-testing","dir":"","previous_headings":"","what":"🧪 Testing","title":"Contributing to {bidux}","text":"Place tests tests/testthat/ using testthat framework. Aim coverage across edge cases expected failure modes. Use skip_on_cran() skip_on_ci() tests require external resources.","code":""},{"path":"https://jrwinget.github.io/bidux/CONTRIBUTING.html","id":"id_-documentation--vignettes","dir":"","previous_headings":"","what":"📚 Documentation & Vignettes","title":"Contributing to {bidux}","text":"Vignettes live vignettes/. Use R Markdown examples illustrate real-world workflows. Link new features existing vignettes create dedicated one.","code":""},{"path":"https://jrwinget.github.io/bidux/CONTRIBUTING.html","id":"id_-bid-framework-considerations","dir":"","previous_headings":"","what":"🧠 BID Framework Considerations","title":"Contributing to {bidux}","text":"contributing features examples, keep following mind: Scientific Accuracy: Represent concepts theories correctly. Accessibility: Ensure components outputs meet WCAG standards. User Experience: Strive clear, intuitive interfaces. Evidence-Based: Cite reputable sources introducing new theories.","code":""},{"path":"https://jrwinget.github.io/bidux/CONTRIBUTING.html","id":"id_-community--discussions","dir":"","previous_headings":"","what":"💬 Community & Discussions","title":"Contributing to {bidux}","text":"general questions, brainstorming, design discussions, use GitHub Discussions.","code":""},{"path":"https://jrwinget.github.io/bidux/CONTRIBUTING.html","id":"id_️-license","dir":"","previous_headings":"","what":"⚖️ License","title":"Contributing to {bidux}","text":"contributing, agree contributions licensed project’s MIT License. Thank helping bidux become stronger user-friendly!","code":""},{"path":"https://jrwinget.github.io/bidux/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 bidux authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://jrwinget.github.io/bidux/articles/concepts-reference.html","id":"bid-framework-concepts-practical-implementation","dir":"Articles","previous_headings":"","what":"BID Framework Concepts: Practical Implementation","title":"BID Framework Concepts: Practical Implementation","text":"Behavior Insight Design (BID) framework integrates behavioral science UI/UX design Shiny dashboards. guide focuses practical implementation key concepts using modern packages like {bslib}, {reactable}, {echarts4r}.","code":""},{"path":"https://jrwinget.github.io/bidux/articles/concepts-reference.html","id":"framework-overview","dir":"Articles","previous_headings":"BID Framework Concepts: Practical Implementation","what":"Framework Overview","title":"BID Framework Concepts: Practical Implementation","text":"BID framework consists 5 sequential stages, incorporating specific psychological tendencies design principles: Interpret: Understand user needs (Data Storytelling, User Personas) Notice: Identify friction points (Cognitive Load, Visual Hierarchy) Anticipate: Mitigate biases (Anchoring, Framing) Structure: Organize information (Layout Patterns, Breathable Designs) Validate: Empower user (Peak-End Rule, Collaboration)","code":""},{"path":"https://jrwinget.github.io/bidux/articles/concepts-reference.html","id":"stage-1-interpret---implementing-data-storytelling","dir":"Articles","previous_headings":"BID Framework Concepts: Practical Implementation","what":"Stage 1: Interpret - Implementing Data Storytelling","title":"BID Framework Concepts: Practical Implementation","text":"Data storytelling helps users understand meaning behind data narrative structure hook, context, tension, resolution.","code":""},{"path":"https://jrwinget.github.io/bidux/articles/concepts-reference.html","id":"using-echarts4r-for-data-storytelling","dir":"Articles","previous_headings":"BID Framework Concepts: Practical Implementation > Stage 1: Interpret - Implementing Data Storytelling","what":"Using {echarts4r} for Data Storytelling","title":"BID Framework Concepts: Practical Implementation","text":"","code":"ui <- page_fillable(   theme = bs_theme(     version = 5,     bg = \"#FFFFFF\",     fg = \"#333333\"   ),   # Clear section headers   layout_column_wrap(     width = 12,     card(       card_header(         h2(\"Sales Dashboard\", class = \"fs-4\")       ),       card_body(         p(\"Key sales metrics for Q2 2025\")       )     )   ),   # Limited filters grouped by purpose   layout_column_wrap(     width = 12,     card(       card_header(\"Filters\"),       card_body(         layout_column_wrap(           width = 1 / 3,           # Time-related filters grouped together           card(             card_body(               h5(\"Time Period\"),               dateRangeInput(                 \"date_range\",                 NULL,                 start = Sys.Date() - 90,                 end = Sys.Date()               ),               checkboxInput(\"compare_prev\", \"Compare to previous period\")             )           ),           # Product-related filters grouped together           card(             card_body(               h5(\"Products\"),               selectInput(                 \"category\",                 \"Category:\",                 choices = c(\"All\", \"Electronics\", \"Clothing\", \"Home\")               )             )           ),           # Region-related filters grouped together           card(             card_body(               h5(\"Regions\"),               selectInput(                 \"region\",                 \"Region:\",                 choices = c(\"All\", \"North\", \"South\", \"East\", \"West\")               )             )           )         )       )     )   ),   # Main content with clear organization   layout_column_wrap(     width = 1 / 3,     # Key metrics with visual simplicity     value_box(       title = \"Total Revenue\",       value = \"$1.24M\",       showcase = bsicons::bs_icon(\"graph-up-arrow\"),       theme = value_box_theme(         bg = \"#f8f9fa\",         fg = \"#333333\"       )     ),     value_box(       title = \"Orders\",       value = \"8,490\",       showcase = bsicons::bs_icon(\"cart\"),       theme = value_box_theme(         bg = \"#f8f9fa\",         fg = \"#333333\"       )     ),     value_box(       title = \"Avg Order Value\",       value = \"$146\",       showcase = bsicons::bs_icon(\"tag\"),       theme = value_box_theme(         bg = \"#f8f9fa\",         fg = \"#333333\"       )     )   ),   # Main charts with progressive disclosure   accordion(     accordion_panel(       \"Sales Performance\",       echarts4rOutput(\"sales_chart\", height = \"300px\")     ),     accordion_panel(       \"Category Breakdown\",       echarts4rOutput(\"category_chart\", height = \"300px\")     ),     accordion_panel(       \"Regional Analysis\",       echarts4rOutput(\"region_chart\", height = \"300px\")     )   ) )"},{"path":"https://jrwinget.github.io/bidux/articles/concepts-reference.html","id":"key-design-principles-for-data-storytelling","dir":"Articles","previous_headings":"BID Framework Concepts: Practical Implementation > Stage 1: Interpret - Implementing Data Storytelling","what":"Key Design Principles for Data Storytelling:","title":"BID Framework Concepts: Practical Implementation","text":"Start compelling hook grab attention Provide relevant context background Highlight challenge opportunity (tension) Offer clear insights actionable recommendations Use progressive disclosure reveal story","code":""},{"path":"https://jrwinget.github.io/bidux/articles/concepts-reference.html","id":"stage-2-notice---reducing-cognitive-load","dir":"Articles","previous_headings":"BID Framework Concepts: Practical Implementation","what":"Stage 2: Notice - Reducing Cognitive Load","title":"BID Framework Concepts: Practical Implementation","text":"Cognitive load amount mental effort required use interface. High cognitive load leads user frustration errors.","code":""},{"path":"https://jrwinget.github.io/bidux/articles/concepts-reference.html","id":"using-bslib-to-reduce-cognitive-load","dir":"Articles","previous_headings":"BID Framework Concepts: Practical Implementation > Stage 2: Notice - Reducing Cognitive Load","what":"Using {bslib} to Reduce Cognitive Load","title":"BID Framework Concepts: Practical Implementation","text":"","code":"ui <- page_fillable(   theme = bs_theme(     version = 5,     bg = \"#FFFFFF\",     fg = \"#333333\"   ),   # Story Hook: Lead with a compelling insight   layout_column_wrap(     width = 12,     card(       card_header(\"Q2 2025 Sales Analysis\"),       card_body(         layout_column_wrap(           width = 1,           # Hook: Draw attention to an interesting pattern           h3(             \"Online sales exceeded in-store for the first time\",             class = \"text-primary fs-4\"           ),           p(             paste(               \"Q2 saw a historic shift in our sales channels,\",               \"creating both challenges and opportunities.\"             )           )         )       )     )   ),   # Story Context: Provide background   layout_column_wrap(     width = 1 / 2,     card(       card_header(\"Sales Channel Trend\"),       card_body(         # Context: Show the historical trend         echarts4rOutput(\"channel_trend\")       ),       card_footer(         p(           paste(             \"Historical context: Online sales have been steadily increasing\",             \"over the past 8 quarters.\"           )         )       )     ),     # Supporting context visualization     card(       card_header(\"Q2 Channel Breakdown\"),       card_body(         echarts4rOutput(\"channel_pie\")       )     )   ),   # Story Tension: Highlight the challenge or opportunity   layout_column_wrap(     width = 12,     card(       card_header(\"The Challenge\"),       card_body(         layout_column_wrap(           width = 1 / 2,           div(             # Tension: Highlight the problem             h4(\"Different Customer Behaviors by Channel\"),             p(               paste(                 \"Online customers show distinct shopping patterns compared\",                 \"to in-store shoppers.\"               )             ),             p(\"Key differences:\")           ),           # Supporting data for tension           echarts4rOutput(\"behavior_comparison\")         )       )     )   ),   # Story Resolution: Provide insights and next steps   layout_column_wrap(     width = 12,     card(       card_header(\"Recommended Actions\"),       card_body(         layout_column_wrap(           width = 1 / 3,           card(             card_body(               h5(\"Update Digital Strategy\"),               p(\"Adapt marketing approach to online-first customer base\"),               p(\"Timeline: Immediate\")             )           ),           card(             card_body(               h5(\"Enhance Online Experience\"),               p(\"Focus on mobile optimization and checkout flow\"),               p(\"Timeline: Q3 2025\")             )           ),           card(             card_body(               h5(\"Reposition Physical Stores\"),               p(\"Shift from transaction centers to experience hubs\"),               p(\"Timeline: Q4 2025\")             )           )         )       ),       card_footer(         actionButton(           \"download_report\",           \"Download Full Analysis\",           class = \"btn-primary\"         )       )     )   ) )  # Server function for data storytelling charts: server <- function(input, output, session) {   # Channel trend chart showing the story over time   output$channel_trend <- renderEcharts4r({     data.frame(       quarter = paste0(\"Q\", 1:8, \" \", c(rep(\"2024\", 4), rep(\"2025\", 4))),       online = c(42, 45, 47, 48, 49, 52, 54, 56),       in_store = c(58, 55, 53, 52, 51, 48, 46, 44)     ) |>       e_charts(quarter) |>       e_line(online, name = \"Online\") |>       e_line(in_store, name = \"In-store\") |>       e_title(\"Sales Channel Distribution (%)\") |>       e_x_axis(axisLabel = list(rotate = 45)) |>       e_tooltip(trigger = \"axis\") |>       e_mark_line(         data = list(xAxis = \"Q2 2025\"),         name = \"Current Quarter\"       ) |>       e_color(c(\"#3498db\", \"#2ecc71\"))   })    # Channel gauge chart for current quarter   output$channel_pie <- renderEcharts4r({     data.frame(       channel = c(\"Online\", \"In-store\"),       value = c(56, 44)     ) |>       e_charts(channel) |>       e_title(\"Q2 2025 Sales Distribution\") |>       e_gauge(         value,         startAngle = 180,         endAngle = 0,         detail = list(formatter = \"{value}%\"),         axisLine = list(           lineStyle = list(             color = list(               c(value / 100, \"#3498db\"),               c(1, \"#e9e9e9\")             ),             width = 30           )         )       ) |>       e_tooltip()   })    # Behavior comparison for tension   output$behavior_comparison <- renderEcharts4r({     data.frame(       metric = c(         \"Avg Order Value\",         \"Items per Order\",         \"Return Rate\",         \"Repeat Purchase\"       ),       online = c(120, 2.4, 12, 45),       in_store = c(150, 1.8, 5, 35)     ) |>       e_charts(metric) |>       e_bar(online, name = \"Online\") |>       e_bar(in_store, name = \"In-store\") |>       e_tooltip() |>       e_color(c(\"#3498db\", \"#2ecc71\"))   }) }"},{"path":"https://jrwinget.github.io/bidux/articles/concepts-reference.html","id":"key-elements-for-reducing-cognitive-load","dir":"Articles","previous_headings":"BID Framework Concepts: Practical Implementation > Stage 2: Notice - Reducing Cognitive Load","what":"Key Elements for Reducing Cognitive Load:","title":"BID Framework Concepts: Practical Implementation","text":"Group related controls information together Use consistent layouts patterns Implement progressive disclosure hide complexity Limit number choices presented Use clear visual hierarchy guide attention","code":""},{"path":"https://jrwinget.github.io/bidux/articles/concepts-reference.html","id":"stage-3-anticipate---mitigating-anchoring-bias","dir":"Articles","previous_headings":"BID Framework Concepts: Practical Implementation","what":"Stage 3: Anticipate - Mitigating Anchoring Bias","title":"BID Framework Concepts: Practical Implementation","text":"Anchoring bias occurs users rely heavily first piece information encounter making decisions.","code":""},{"path":"https://jrwinget.github.io/bidux/articles/concepts-reference.html","id":"using-reactable-and-echarts4r-to-mitigate-anchoring","dir":"Articles","previous_headings":"BID Framework Concepts: Practical Implementation > Stage 3: Anticipate - Mitigating Anchoring Bias","what":"Using {reactable} and {echarts4r} to Mitigate Anchoring","title":"BID Framework Concepts: Practical Implementation","text":"","code":"ui <- page_fillable(   theme = bs_theme(     version = 5,     bg = \"#FFFFFF\",     fg = \"#333333\"   ),   # Page title with ample space   layout_column_wrap(     width = 12,     gap = \"2rem\", # Add breathing room     card(       card_header(         h1(           \"Customer Analytics Dashboard\",           class = \"fs-3 py-2\" # Add vertical padding         )       )     )   ),   # KPI cards with generous spacing   layout_column_wrap(     width = 1 / 3,     gap = \"2rem\", # Generous spacing between cards     card(       card_body(         padding = \"1.5rem\", # Extra padding inside cards         h3(\"Customers\", class = \"fs-4 mb-4\"), # Bottom margin for breathing room         div(class = \"display-5 mb-3\", \"12,486\"), # Large text with spacing         div(class = \"text-success\", \"↑ 8% from last month\")       )     ),     card(       card_body(         padding = \"1.5rem\",         h3(\"Retention Rate\", class = \"fs-4 mb-4\"),         div(class = \"display-5 mb-3\", \"86%\"),         div(class = \"text-success\", \"↑ 3% from last month\")       )     ),     card(       card_body(         padding = \"1.5rem\",         h3(\"Satisfaction\", class = \"fs-4 mb-4\"),         div(class = \"display-5 mb-3\", \"4.7/5\"),         div(class = \"text-success\", \"↑ 0.2 from last month\")       )     )   ),   # Add vertical spacing   layout_column_wrap(     width = 12,     gap = \"2rem\",     card(       card_header(         h3(\"Customer Segments\", class = \"fs-4\")       ),       card_body(         padding = \"1.5rem\", # Extra padding         echarts4rOutput(\"segments_chart\", height = \"300px\")       )     )   ),   # Tabbed interface with inner spacing   layout_column_wrap(     width = 12,     gap = \"2rem\",     nav_panel_tabset(       nav_panel(         \"Demographics\",         div(           class = \"py-4\", # Top and bottom padding           layout_column_wrap(             width = 1 / 2,             gap = \"2rem\",             echarts4rOutput(\"age_chart\", height = \"300px\"),             echarts4rOutput(\"location_chart\", height = \"300px\")           )         )       ),       nav_panel(         \"Behavior\",         div(           class = \"py-4\",           layout_column_wrap(             width = 1 / 2,             gap = \"2rem\",             echarts4rOutput(\"frequency_chart\", height = \"300px\"),             echarts4rOutput(\"channels_chart\", height = \"300px\")           )         )       )     )   ),   # Data table with breathing room   layout_column_wrap(     width = 12,     gap = \"2rem\",     card(       card_header(         h3(\"Customer Details\", class = \"fs-4\")       ),       card_body(         padding = \"1.5rem\", # Extra padding         reactableOutput(\"customers_table\")       )     )   ),   # Add space at bottom of page   layout_column_wrap(     width = 12,     gap = \"1rem\",     div(class = \"py-3\") # Empty div for padding   ) )"},{"path":"https://jrwinget.github.io/bidux/articles/concepts-reference.html","id":"key-elements-of-breathable-layouts","dir":"Articles","previous_headings":"BID Framework Concepts: Practical Implementation > Stage 3: Anticipate - Mitigating Anchoring Bias","what":"Key Elements of Breathable Layouts:","title":"BID Framework Concepts: Practical Implementation","text":"Consistent spacing: Use consistent margins padding throughout Whitespace: Don’t crowd elements; give room “breathe” Grouping: Use whitespace create logical groups Content density: Limit amount information section Visual rhythm: Create consistent visual pattern spacing","code":""},{"path":"https://jrwinget.github.io/bidux/articles/concepts-reference.html","id":"using-bslib-for-breathable-layouts","dir":"Articles","previous_headings":"BID Framework Concepts: Practical Implementation > Stage 3: Anticipate - Mitigating Anchoring Bias","what":"Using {bslib} for Breathable Layouts","title":"BID Framework Concepts: Practical Implementation","text":"","code":"ui <- page_fillable(   theme = bs_theme(     version = 5   ),   # Context explanation   layout_column_wrap(     width = 12,     card(       card_header(\"Sales Performance Dashboard\"),       card_body(         p(           paste(             \"This dashboard provides multiple reference points\",             \"to help avoid anchoring bias.\"           )         )       )     )   ),   # Multiple reference points in KPIs   layout_column_wrap(     width = 1 / 3,     card(       card_header(\"Revenue\"),       card_body(         layout_column_wrap(           width = 1,           h3(\"$1.24M\", class = \"text-center fs-2\"),           # Multiple reference points to reduce anchoring           navset_pill(             nav_panel(               \"vs Target\",               div(                 class = \"text-center mt-2\",                 div(class = \"text-success fw-bold\", \"+8%\"),                 div(class = \"text-muted small\", \"Target: $1.15M\")               )             ),             nav_panel(               \"vs Last Year\",               div(                 class = \"text-center mt-2\",                 div(class = \"text-success fw-bold\", \"+12%\"),                 div(class = \"text-muted small\", \"Last Year: $1.11M\")               )             ),             nav_panel(               \"vs Industry\",               div(                 class = \"text-center mt-2\",                 div(class = \"text-success fw-bold\", \"+5%\"),                 div(class = \"text-muted small\", \"Industry Avg: $1.18M\")               )             )           )         )       )     ),     # Similar pattern for other metrics     card(       card_header(\"Conversion Rate\"),       card_body(         layout_column_wrap(           width = 1,           h3(\"3.2%\", class = \"text-center fs-2\"),           # Multiple reference points           navset_pill(             nav_panel(               \"vs Target\",               div(                 class = \"text-center mt-2\",                 div(class = \"text-success fw-bold\", \"+0.2%\"),                 div(class = \"text-muted small\", \"Target: 3.0%\")               )             ),             nav_panel(               \"vs Last Year\",               div(                 class = \"text-center mt-2\",                 div(class = \"text-success fw-bold\", \"+0.5%\"),                 div(class = \"text-muted small\", \"Last Year: 2.7%\")               )             ),             nav_panel(               \"vs Industry\",               div(                 class = \"text-center mt-2\",                 div(class = \"text-danger fw-bold\", \"-0.3%\"),                 div(class = \"text-muted small\", \"Industry Avg: 3.5%\")               )             )           )         )       )     ),     # Third metric with multiple anchors     card(       card_header(\"Average Order Value\"),       card_body(         layout_column_wrap(           width = 1,           h3(\"$148\", class = \"text-center fs-2\"),           # Multiple reference points           navset_pill(             nav_panel(               \"vs Target\",               div(                 class = \"text-center mt-2\",                 div(class = \"text-danger fw-bold\", \"-$7\"),                 div(class = \"text-muted small\", \"Target: $155\")               )             ),             nav_panel(               \"vs Last Year\",               div(                 class = \"text-center mt-2\",                 div(class = \"text-success fw-bold\", \"+$10\"),                 div(class = \"text-muted small\", \"Last Year: $138\")               )             ),             nav_panel(               \"vs Industry\",               div(                 class = \"text-center mt-2\",                 div(class = \"text-success fw-bold\", \"+$8\"),                 div(class = \"text-muted small\", \"Industry Avg: $140\")               )             )           )         )       )     )   ),   # Chart with multiple reference lines   layout_column_wrap(     width = 12,     card(       card_header(\"Sales Performance with Multiple References\"),       card_body(         echarts4rOutput(\"sales_references\")       )     )   ),   # Data table with multiple reference columns   layout_column_wrap(     width = 12,     card(       card_header(\"Performance Metrics with Multiple References\"),       card_body(         reactableOutput(\"metrics_table\")       )     )   ) )  # Server logic for anchoring bias mitigation server <- function(input, output, session) {   # Chart with multiple reference points   output$sales_references <- renderEcharts4r({     data.frame(       month = month.name[1:6],       actual = c(980, 1020, 1150, 1240, 1310, 1280),       target = c(1000, 1050, 1100, 1150, 1200, 1250),       prev_year = c(920, 950, 990, 1110, 1160, 1200),       industry = c(990, 1040, 1090, 1130, 1170, 1210)     ) |>       e_charts(month) |>       e_line(         actual,         name = \"Actual\",         symbol = \"circle\",         symbolSize = 10       ) |>       e_line(         target,         name = \"Target\",         symbol = \"none\",         lineStyle = list(type = \"dashed\")       ) |>       e_line(         prev_year,         name = \"Previous Year\",         symbol = \"none\",         lineStyle = list(type = \"dotted\")       ) |>       e_line(         industry,         name = \"Industry Avg\",         symbol = \"none\",         lineStyle = list(type = \"dashed\")       ) |>       e_title(\"Revenue Performance (Thousands)\") |>       e_tooltip(trigger = \"axis\") |>       e_color(c(\"#3498db\", \"#e74c3c\", \"#2ecc71\", \"#f39c12\"))   })    # Table with multiple reference columns   output$metrics_table <- renderReactable({     data <- data.frame(       metric = c(         \"Revenue\",         \"Conversion Rate\",         \"Avg Order Value\",         \"Customer Count\",         \"Units Sold\"       ),       actual = c(\"$1.24M\", \"3.2%\", \"$148\", \"8,378\", \"12,420\"),       target = c(\"$1.15M\", \"3.0%\", \"$155\", \"7,500\", \"11,500\"),       vs_target = c(\"+8%\", \"+7%\", \"-5%\", \"+12%\", \"+8%\"),       prev_year = c(\"$1.11M\", \"2.7%\", \"$138\", \"7,825\", \"11,830\"),       vs_prev = c(\"+12%\", \"+19%\", \"+7%\", \"+7%\", \"+5%\"),       industry = c(\"$1.18M\", \"3.5%\", \"$140\", \"8,100\", \"12,000\"),       vs_industry = c(\"+5%\", \"-9%\", \"+6%\", \"+3%\", \"+4%\")     )      # Custom cell renderer for comparisons     compare_cell <- function(value) {       if (grepl(\"^\\\\+\", value)) {         div(value, style = list(color = \"#2ecc71\", fontWeight = \"bold\"))       } else if (grepl(\"^\\\\-\", value)) {         div(value, style = list(color = \"#e74c3c\", fontWeight = \"bold\"))       } else {         value       }     }      reactable(       data,       columns = list(         metric = colDef(name = \"Metric\"),         actual = colDef(name = \"Actual\"),         target = colDef(name = \"Target\"),         vs_target = colDef(name = \"vs Target\", cell = compare_cell),         prev_year = colDef(name = \"Previous Year\"),         vs_prev = colDef(name = \"vs Prev Year\", cell = compare_cell),         industry = colDef(name = \"Industry Avg\"),         vs_industry = colDef(name = \"vs Industry\", cell = compare_cell)       ),       striped = TRUE,       highlight = TRUE,       bordered = TRUE     )   }) }"},{"path":"https://jrwinget.github.io/bidux/articles/concepts-reference.html","id":"key-techniques-for-mitigating-anchoring-bias","dir":"Articles","previous_headings":"BID Framework Concepts: Practical Implementation > Stage 3: Anticipate - Mitigating Anchoring Bias","what":"Key Techniques for Mitigating Anchoring Bias:","title":"BID Framework Concepts: Practical Implementation","text":"Multiple reference points: Show different benchmarks (target, previous, industry) Alternative perspectives: Enable switching different views Contextual information: Provide additional context values Visual references: Use reference lines charts Relative comparisons: Show percentage changes rather just absolute values","code":""},{"path":"https://jrwinget.github.io/bidux/articles/concepts-reference.html","id":"stage-5-validate---implementing-the-peak-end-rule","dir":"Articles","previous_headings":"BID Framework Concepts: Practical Implementation","what":"Stage 5: Validate - Implementing the Peak-End Rule","title":"BID Framework Concepts: Practical Implementation","text":"Peak-End Rule states people judge experiences largely based felt intense point (peak) end, rather based sum average experience.","code":""},{"path":"https://jrwinget.github.io/bidux/articles/concepts-reference.html","id":"using-bslib-to-implement-the-peak-end-rule","dir":"Articles","previous_headings":"BID Framework Concepts: Practical Implementation > Stage 5: Validate - Implementing the Peak-End Rule","what":"Using {bslib} to Implement the Peak-End Rule","title":"BID Framework Concepts: Practical Implementation","text":"","code":"ui <- page_fillable(   theme = bs_theme(     version = 5   ),    # Dashboard content would go here...    # End with a strong summary and clear next steps   layout_column_wrap(     width = 12,     card(       card_header(         h2(\"Key Insights & Recommended Actions\", class = \"fs-4\")       ),       card_body(         layout_column_wrap(           width = 1 / 2,           # Summary insights at the end of the dashboard           card(             card_header(\"Key Takeaways\"),             card_body(               tags$ul(                 tags$li(                   span(\"Revenue is trending \", class = \"fw-bold\"),                   span(\"8% above target\", class = \"text-success fw-bold\"),                   span(                     paste(                       \" for the quarter, primarily driven by\",                       \"the Electronics category.\"                     )                   )                 ),                 tags$li(                   span(\"Customer acquisition cost has \", class = \"fw-bold\"),                   span(\"decreased by 12%\", class = \"text-success fw-bold\"),                   span(\" following the new digital marketing strategy.\")                 ),                 tags$li(                   span(\"The West region continues to \", class = \"fw-bold\"),                   span(\"underperform by 5%\", class = \"text-danger fw-bold\"),                   span(\" compared to other regions.\")                 )               )             )           ),           # Clear next steps to end on a positive action-oriented note           card(             card_header(\"Recommended Next Steps\"),             card_body(               layout_column_wrap(                 width = 1,                 # Button card for first recommendation                 card(                   card_body(                     h5(\"Increase Electronics Inventory\"),                     p(                       paste(                         \"Current inventory will only support 2 more\",                         \"weeks of sales at current pace.\"                       )                     ),                     actionButton(                       \"action1\",                       \"Order Inventory\",                       class = \"btn-primary w-100\"                     )                   )                 ),                 # Button card for second recommendation                 card(                   card_body(                     h5(\"Expand Digital Marketing\"),                     p(                       paste(                         \"Current campaigns are performing well.\",                         \"Consider increasing budget allocation.\"                       )                     ),                     actionButton(                       \"action2\",                       \"Adjust Budget\",                       class = \"btn-primary w-100\"                     )                   )                 ),                 # Button card for third recommendation                 card(                   card_body(                     h5(\"Review West Region Strategy\"),                     p(                       paste(                         \"Schedule meeting with regional team to\",                         \"address performance gaps.\"                       )                     ),                     actionButton(                       \"action3\",                       \"Schedule Meeting\",                       class = \"btn-primary w-100\"                     )                   )                 )               )             )           )         )       ),       # Final call to action       card_footer(         layout_column_wrap(           width = 1,           p(\"These insights are based on data through Q1.\"),           div(             class = \"text-end\",             actionButton(               \"export_pdf\",               \"Export as PDF\",               class = \"btn-outline-primary me-2\"             ),             actionButton(               \"share_dashboard\",               \"Share Dashboard\",               class = \"btn-primary\"             )           )         )       )     )   ) )"},{"path":"https://jrwinget.github.io/bidux/articles/concepts-reference.html","id":"key-elements-of-implementing-the-peak-end-rule","dir":"Articles","previous_headings":"BID Framework Concepts: Practical Implementation > Stage 5: Validate - Implementing the Peak-End Rule","what":"Key Elements of Implementing the Peak-End Rule:","title":"BID Framework Concepts: Practical Implementation","text":"Strong summary: End clear summary key findings Actionable insights: Provide specific recommendations Visual emphasis: Make end section visually distinct appealing Call action: End clear next steps Positive tone: End positive, forward-looking note","code":""},{"path":"https://jrwinget.github.io/bidux/articles/concepts-reference.html","id":"conclusion","dir":"Articles","previous_headings":"BID Framework Concepts: Practical Implementation","what":"Conclusion","title":"BID Framework Concepts: Practical Implementation","text":"practical implementations demonstrate apply key BID framework concepts using modern Shiny packages: {bslib} provides layout components, cards, value boxes structured information presentation {reactable} offers advanced data tables conditional formatting custom rendering {echarts4r} creates interactive visualizations multiple reference points comparative views explore concepts implementation, use bid_concepts() function access full concept dictionary: detailed information specific concept: BID framework provides systematic approach incorporating behavioral science dashboard design, resulting intuitive, usable, effective Shiny applications.","code":"bid_concepts() |>   select(concept, category, implementation_tips) |>   head(5) bid_concept(\"Anchoring Effect\") |>   select(concept, description, implementation_tips)"},{"path":"https://jrwinget.github.io/bidux/articles/getting-started.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Getting Started with bidux","text":"bidux package helps Shiny developers create effective dashboards using Behavior Insight Design (BID) Framework. framework integrates behavioral science, UX best practices, data storytelling techniques guide development dashboards easier understand, engaging, effective supporting user decisions.","code":"library(bidux) library(dplyr)"},{"path":"https://jrwinget.github.io/bidux/articles/getting-started.html","id":"the-bid-framework","dir":"Articles","previous_headings":"","what":"The BID Framework","title":"Getting Started with bidux","text":"BID framework consists 5 sequential stages: Interpret User’s Need - Understand core questions insights needed Notice Problem - Identify friction points user struggles Anticipate User Behavior - Consider cognitive biases influence perception Structure Dashboard - Organize information intuitive comprehension Validate & Empower User - Provide clear takeaways collaborative features sequential process forms structured approach dashboard design, stage building insights previous stages.","code":""},{"path":"https://jrwinget.github.io/bidux/articles/getting-started.html","id":"exploring-the-concept-dictionary","dir":"Articles","previous_headings":"","what":"Exploring the Concept Dictionary","title":"Getting Started with bidux","text":"BID framework built established science design principles. explore concepts, use bid_concepts() list available concepts, search specific terms: detailed information specific concept, use bid_concept(): bid_concept() function supports case-insensitive partial matching: can also explore concepts new BID framework:","code":"# List all concepts all_concepts <- bid_concepts() head(dplyr::select(all_concepts, concept, category, description), 3)  # Search for specific concepts bid_concepts(\"cognitive\") |>   dplyr::select(concept, description, implementation_tips) # Get information about a specific concept bid_concept(\"Processing Fluency\") |>   dplyr::select(concept, description, implementation_tips) # Case-insensitive matching bid_concept(\"hick's law\") |>   dplyr::select(concept, description)  # Partial matching bid_concept(\"proximity\") |>   dplyr::select(concept, description) # Explore new concepts from user-centric design bid_concepts(\"visual hierarchy|breathable|gherkin\") |>   dplyr::select(concept, description)"},{"path":"https://jrwinget.github.io/bidux/articles/getting-started.html","id":"documenting-a-dashboard-project-with-bid","dir":"Articles","previous_headings":"","what":"Documenting a Dashboard Project with BID","title":"Getting Started with bidux","text":"Let’s walk complete example using BID framework document improve dashboard project.","code":""},{"path":"https://jrwinget.github.io/bidux/articles/getting-started.html","id":"stage-1-interpret-the-users-need","dir":"Articles","previous_headings":"Documenting a Dashboard Project with BID","what":"Stage 1: Interpret the User’s Need","title":"Getting Started with bidux","text":"Start clarifying central question dashboard needs answer structure data story: function evaluates data story elements provides suggestions improvement (suggestions column). ’ve also added user personas better target design.","code":"# Document the user's need interpret_result <- bid_interpret(   central_question = \"How are our marketing campaigns performing across different channels?\",   data_story = list(     hook = \"Recent campaign performance varies significantly across channels\",     context = \"We've invested in 6 different marketing channels over the past quarter\",     tension = \"ROI metrics show inconsistent results, with some channels underperforming\",     resolution = \"Identify top-performing channels and key performance drivers\",     audience = \"Marketing team and executives\",     metrics = c(\"Channel ROI\", \"Conversion Rate\", \"Cost per Acquisition\"),     visual_approach = \"Comparative analysis with historical benchmarks\"   ),   user_personas = list(     list(       name = \"Marketing Manager\",       goals = \"Optimize marketing spend across channels\",       pain_points = \"Difficulty comparing performance across different metrics\",       technical_level = \"Intermediate\"     ),     list(       name = \"CMO\",       goals = \"Strategic oversight of marketing effectiveness\",       pain_points = \"Needs high-level insights without technical details\",       technical_level = \"Basic\"     )   ) )  interpret_result |>   dplyr::select(central_question, hook, tension, resolution)"},{"path":"https://jrwinget.github.io/bidux/articles/getting-started.html","id":"stage-2-notice-the-problem","dir":"Articles","previous_headings":"Documenting a Dashboard Project with BID","what":"Stage 2: Notice the Problem","title":"Getting Started with bidux","text":"Now identify specific problems users encountering dashboard interface: Notice function automatically selected appropriate theory based problem description. also provides suggestions addressing cognitive load can access suggestions column.","code":"# Document the problem notice_result <- bid_notice(   previous_stage = interpret_result,   problem = \"Users are overwhelmed by too many filter options and struggle to find relevant insights\",   evidence = \"User testing shows 65% of first-time users fail to complete their intended task within 2 minutes\" )  notice_result |>   dplyr::select(problem, theory, evidence)"},{"path":"https://jrwinget.github.io/bidux/articles/getting-started.html","id":"stage-3-anticipate-user-behavior","dir":"Articles","previous_headings":"Documenting a Dashboard Project with BID","what":"Stage 3: Anticipate User Behavior","title":"Getting Started with bidux","text":"Next, identify potential cognitive biases might affect users interpret dashboard: function evaluates bias mitigation strategies, providing implementation suggestions.","code":"# Document bias mitigation strategies anticipate_result <- bid_anticipate(   previous_stage = notice_result,   bias_mitigations = list(     anchoring = \"Include previous period performance as reference points\",     framing = \"Provide toggle between ROI improvement vs. ROI gap views\",     confirmation_bias = \"Highlight unexpected patterns that contradict common assumptions\"   ) )  anticipate_result |>   dplyr::select(bias_mitigations)"},{"path":"https://jrwinget.github.io/bidux/articles/getting-started.html","id":"stage-4-structure-the-dashboard","dir":"Articles","previous_headings":"Documenting a Dashboard Project with BID","what":"Stage 4: Structure the Dashboard","title":"Getting Started with bidux","text":"Now determine layout key design principles implement: function automatically selects appropriate layout based content previous stages provides ranked, actionable suggestions organized UX concepts. layout selection transparent clear rationale particular layout chosen.","code":"# Document the dashboard structure structure_result <- bid_structure(   previous_stage = anticipate_result )  structure_result |>   dplyr::select(layout, concepts, suggestions)"},{"path":"https://jrwinget.github.io/bidux/articles/getting-started.html","id":"stage-5-validate-empower-the-user","dir":"Articles","previous_headings":"Documenting a Dashboard Project with BID","what":"Stage 5: Validate & Empower the User","title":"Getting Started with bidux","text":"Finally, document ’ll ensure users leave clear insights ability collaborate: validate function acknowledges implementation Peak-End Rule next steps provides suggestions refining approach.","code":"# Document validation approach validate_result <- bid_validate(   previous_stage = structure_result,   summary_panel = \"Executive summary highlighting top and bottom performers, key trends, and recommended actions for the next marketing cycle\",   collaboration = \"Team annotation capability allowing marketing team members to add context and insights to specific data points\",   next_steps = c(     \"Review performance of bottom 2 channels\",     \"Increase budget for top-performing channel\",     \"Schedule team meeting to discuss optimization strategy\",     \"Export findings for quarterly marketing review\"   ) )  validate_result |>   dplyr::select(summary_panel, collaboration, next_steps)"},{"path":"https://jrwinget.github.io/bidux/articles/getting-started.html","id":"generating-implementation-suggestions","dir":"Articles","previous_headings":"","what":"Generating Implementation Suggestions","title":"Getting Started with bidux","text":"’ve documented dashboard BID framework, can generate concrete suggestions implementing principles using common R packages:","code":"# Get {bslib} component suggestions bid_suggest_components(structure_result, package = \"bslib\") |>   dplyr::select(component, description) |>   head(2)  # Get {reactable} suggestions for showing data bid_suggest_components(structure_result, package = \"reactable\") |>   dplyr::select(component, description) |>   head(2)  # Get suggestions from all supported packages all_suggestions <- bid_suggest_components(validate_result, package = \"all\") table(all_suggestions$package)"},{"path":"https://jrwinget.github.io/bidux/articles/getting-started.html","id":"creating-a-complete-bid-report","dir":"Articles","previous_headings":"","what":"Creating a Complete BID Report","title":"Getting Started with bidux","text":"can generate complete report summarizing stages BID process:","code":"# Generate a text report (default) report <- bid_report(validate_result) cat(report)  # Generate an HTML report html_report <- bid_report(   validate_result,   format = \"html\" )  # Generate a markdown report md_report <- bid_report(validate_result, format = \"markdown\")"},{"path":"https://jrwinget.github.io/bidux/articles/getting-started.html","id":"using-bid-in-your-shiny-development-workflow","dir":"Articles","previous_headings":"","what":"Using BID in Your Shiny Development Workflow","title":"Getting Started with bidux","text":"’s integrate BID framework development process: Planning Phase Use BID framework document design decisions writing code Identify key user needs potential friction points Define user personas guide design choices Consider accessibility requirements early Development Phase Reference BID documentation implement appropriate UI patterns Use bid_suggest_components() get package-specific implementation ideas Implement bias mitigation strategies interface Build progressive disclosure complex interfaces Testing Phase Validate implementation addresses issues identified Stage 1 Test actual users representing defined personas Specifically test bias mitigation strategies accessibility features Gather feedback effectiveness validation approach Iteration Phase Update BID documentation refine dashboard Use bid_report() maintain comprehensive documentation Focus improvements areas greatest impact user experience Continue apply BID principles add new features","code":""},{"path":"https://jrwinget.github.io/bidux/articles/getting-started.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Getting Started with bidux","text":"bidux package makes easier apply behavioral science UX best practices Shiny dashboards. following 5-stage BID framework, can create applications intuitive, engaging, effective users. Future versions bidux include: User stories workflow integration following Gherkin method Enhanced design patterns library Accessibility framework integration WCAG guidelines UI component library implementing BID principles Testing validation tools dashboard evaluation Visit github.com/jrwinget/bidux updates contribute package development. welcome feedback suggestions help make BID framework even effective Shiny developers. Remember good dashboard design iterative process benefits continuous user feedback. BID framework provides structure process ensuring common principles incorporated throughout development workflow.","code":""},{"path":"https://jrwinget.github.io/bidux/articles/introduction-to-bid.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"introduction-to-bid","text":"Behavior Insight Design (BID) framework guides developers integrating behavioral science UI/UX design. helps understanding behavioral tendencies, psychological principles, common biases affect user interactions. five stages BID framework : 1. Interpret User’s Need: Clarify core question build data narrative. 2. Notice Problem: Identify friction points areas high cognitive load. 3. Anticipate User Behavior: Mitigate biases anchoring framing. 4. Structure Dashboard: Organize layout design enhance usability. 5. Validate & Empower User: Summarize insights facilitate collaborative decision-making. vignette introduces core ideas behind stage interact create effective, bias-aware dashboards. Visit github.com/jrwinget/bid-framework resources information BID framework.","code":""},{"path":"https://jrwinget.github.io/bidux/articles/telemetry-integration.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Integrating shiny.telemetry with BIDUX","text":"bid_ingest_telemetry() function enables analyze real user behavior data shiny.telemetry automatically identify UX friction points. creates powerful feedback loop actual usage patterns drive design improvements BID framework.","code":""},{"path":"https://jrwinget.github.io/bidux/articles/telemetry-integration.html","id":"prerequisites","dir":"Articles","previous_headings":"","what":"Prerequisites","title":"Integrating shiny.telemetry with BIDUX","text":"First, ensure shiny.telemetry set Shiny application:","code":"library(shiny) library(shiny.telemetry)  # Initialize telemetry telemetry <- Telemetry$new()  ui <- fluidPage(   use_telemetry(), # Add telemetry JavaScript    titlePanel(\"Sales Dashboard\"),   sidebarLayout(     sidebarPanel(       selectInput(         \"region\",         \"Region:\",         choices = c(\"North\", \"South\", \"East\", \"West\")       ),       dateRangeInput(\"date_range\", \"Date Range:\"),       selectInput(         \"product_category\",         \"Product Category:\",         choices = c(\"All\", \"Electronics\", \"Clothing\", \"Food\")       ),       actionButton(\"refresh\", \"Refresh Data\")     ),     mainPanel(       tabsetPanel(         tabPanel(\"Overview\", plotOutput(\"overview_plot\")),         tabPanel(\"Details\", dataTableOutput(\"details_table\")),         tabPanel(\"Settings\", uiOutput(\"settings_ui\"))       )     )   ) )  server <- function(input, output, session) {   # Start telemetry tracking   telemetry$start_session()    # Your app logic here... }  shinyApp(ui, server)"},{"path":"https://jrwinget.github.io/bidux/articles/telemetry-integration.html","id":"analyzing-telemetry-data","dir":"Articles","previous_headings":"","what":"Analyzing Telemetry Data","title":"Integrating shiny.telemetry with BIDUX","text":"collecting telemetry data users, use bid_ingest_telemetry() identify UX issues:","code":"library(bidux)  # Analyze telemetry from SQLite database (default) issues <- bid_ingest_telemetry(\"telemetry.sqlite\")  # Or from JSON log file issues <- bid_ingest_telemetry(\"telemetry.log\", format = \"json\")  # Review identified issues length(issues) names(issues)"},{"path":"https://jrwinget.github.io/bidux/articles/telemetry-integration.html","id":"understanding-the-analysis","dir":"Articles","previous_headings":"","what":"Understanding the Analysis","title":"Integrating shiny.telemetry with BIDUX","text":"function analyzes five key friction indicators:","code":""},{"path":"https://jrwinget.github.io/bidux/articles/telemetry-integration.html","id":"unused-or-under-used-inputs","dir":"Articles","previous_headings":"Understanding the Analysis","what":"1. Unused or Under-used Inputs","title":"Integrating shiny.telemetry with BIDUX","text":"Identifies UI controls users rarely never interact : suggests region filter might : - Hidden hard find - relevant users’ tasks - Confusing intimidating","code":"# Example: Region filter is never used issues$unused_input_region #> BID Framework - Notice Stage #> Problem: Users are not interacting with the 'region' input control #> Theory: Hick's Law (auto-suggested) #> Evidence: Telemetry shows 0 out of 847 sessions where 'region' was changed"},{"path":"https://jrwinget.github.io/bidux/articles/telemetry-integration.html","id":"delayed-first-interactions","dir":"Articles","previous_headings":"Understanding the Analysis","what":"2. Delayed First Interactions","title":"Integrating shiny.telemetry with BIDUX","text":"Detects users take long start using dashboard: indicates users might : - Overwhelmed initial view - Unsure start - Looking information ’s readily apparent","code":"issues$delayed_interaction #> BID Framework - Notice Stage #> Problem: Users take a long time before making their first interaction with the dashboard #> Theory: Information Scent (auto-suggested) #> Evidence: Median time to first input is 45 seconds, and 10% of sessions had no interactions at all"},{"path":"https://jrwinget.github.io/bidux/articles/telemetry-integration.html","id":"frequent-errors","dir":"Articles","previous_headings":"Understanding the Analysis","what":"3. Frequent Errors","title":"Integrating shiny.telemetry with BIDUX","text":"Identifies systematic errors disrupt user experience: reveals: - Reliability issues specific features - Input validation problems - Performance bottlenecks","code":"issues$error_1 #> BID Framework - Notice Stage #> Problem: Users encounter errors when using the dashboard #> Theory: Norman's Gulf of Evaluation (auto-suggested) #> Evidence: Error 'Data query failed' occurred 127 times in 15.0% of sessions (in output 'overview_plot'), often after changing 'date_range'"},{"path":"https://jrwinget.github.io/bidux/articles/telemetry-integration.html","id":"navigation-drop-offs","dir":"Articles","previous_headings":"Understanding the Analysis","what":"4. Navigation Drop-offs","title":"Integrating shiny.telemetry with BIDUX","text":"Finds pages tabs users rarely visit: Low visit rates suggest: - Poor information scent - Hidden unclear navigation - Irrelevant content","code":"issues$navigation_settings_tab #> BID Framework - Notice Stage #> Problem: The 'settings_tab' page/tab is rarely visited by users #> Theory: Information Architecture (auto-suggested) #> Evidence: Only 42 sessions (5.0%) visited 'settings_tab', and 90% of those sessions ended there"},{"path":"https://jrwinget.github.io/bidux/articles/telemetry-integration.html","id":"confusion-patterns","dir":"Articles","previous_headings":"Understanding the Analysis","what":"5. Confusion Patterns","title":"Integrating shiny.telemetry with BIDUX","text":"Detects rapid repeated changes indicating user confusion: suggests: - Unclear feedback values change - Unexpected behavior - Poor affordances","code":"issues$confusion_date_range #> BID Framework - Notice Stage #> Problem: Users show signs of confusion when interacting with 'date_range' #> Theory: Feedback Loops (auto-suggested) #> Evidence: 8 sessions showed rapid repeated changes (avg 6 changes in 7.5 seconds), suggesting users are unsure about the input's behavior"},{"path":"https://jrwinget.github.io/bidux/articles/telemetry-integration.html","id":"customizing-analysis-thresholds","dir":"Articles","previous_headings":"","what":"Customizing Analysis Thresholds","title":"Integrating shiny.telemetry with BIDUX","text":"can adjust sensitivity analysis:","code":"issues <- bid_ingest_telemetry(   \"telemetry.sqlite\",   thresholds = list(     unused_input_threshold = 0.1, # Flag if <10% of sessions use input     delay_threshold_seconds = 60, # Flag if >60s before first interaction     error_rate_threshold = 0.05, # Flag if >5% of sessions have errors     navigation_threshold = 0.3, # Flag if <30% visit a page     rapid_change_window = 5, # Look for 5 changes within...     rapid_change_count = 3 # ...3 seconds   ) )"},{"path":"https://jrwinget.github.io/bidux/articles/telemetry-integration.html","id":"integrating-with-bid-workflow","dir":"Articles","previous_headings":"","what":"Integrating with BID Workflow","title":"Integrating shiny.telemetry with BIDUX","text":"Use identified issues drive BID process:","code":"# Take the most critical issue critical_issue <- issues$error_1  # Start with interpretation interpret_result <- bid_interpret(   central_question = \"How can we prevent data query errors?\",   data_story = list(     hook = \"15% of users encounter errors\",     context = \"Errors occur after date range changes\",     tension = \"Users lose trust when queries fail\",     resolution = \"Implement robust error handling and loading states\"   ) )  # Notice the specific problem notice_result <- bid_notice(   previous_stage = interpret_result,   problem = critical_issue$problem,   evidence = critical_issue$evidence )  # Anticipate user behavior and biases anticipate_result <- bid_anticipate(   previous_stage = notice_result,   bias_mitigations = list(     anchoring = \"Show loading states to set proper expectations\",     confirmation_bias = \"Display error context to help users understand issues\"   ) )  # Structure improvements structure_result <- bid_structure(   previous_stage = anticipate_result )  # Validate and provide next steps validate_result <- bid_validate(   previous_stage = structure_result,   summary_panel = \"Error handling improvements with clear user feedback\",   next_steps = c(     \"Implement loading states\",     \"Add error context\",     \"Test with users\"   ) )"},{"path":"https://jrwinget.github.io/bidux/articles/telemetry-integration.html","id":"example-complete-analysis","dir":"Articles","previous_headings":"","what":"Example: Complete Analysis","title":"Integrating shiny.telemetry with BIDUX","text":"’s full example analyzing dashboard multiple issues:","code":"# 1. Ingest telemetry issues <- bid_ingest_telemetry(\"telemetry.sqlite\")  # 2. Prioritize issues by impact critical_issues <- list(   unused_inputs = names(issues)[grepl(\"unused_input\", names(issues))],   errors = names(issues)[grepl(\"error\", names(issues))],   delays = \"delayed_interaction\" %in% names(issues) )  # 3. Create a comprehensive improvement plan if (length(critical_issues$unused_inputs) > 0) {   # Address unused inputs following the updated BID workflow   unused_issue <- issues[[critical_issues$unused_inputs[1]]]    improvement_plan <- bid_interpret(     central_question = \"Which filters actually help users find insights?\",     data_story = list(       hook = \"Several filters are never used by users\",       context = \"Dashboard has 5 filter controls\",       tension = \"Too many options create choice overload\",       resolution = \"Show only relevant filters based on user tasks\"     )   ) |>     bid_notice(       problem = unused_issue$problem,       evidence = unused_issue$evidence     ) |>     bid_anticipate(       bias_mitigations = list(         choice_overload = \"Hide advanced filters until needed\",         default_effect = \"Pre-select most common filter values\"       )     ) |>     bid_structure() |>     bid_validate(       summary_panel = \"Simplified filtering with progressive disclosure\",       next_steps = c(         \"Remove unused filters\",         \"Implement progressive disclosure\",         \"Add contextual help\",         \"Re-test with telemetry after changes\"       )     ) }  # 4. Generate report improvement_report <- bid_report(improvement_plan, format = \"html\")"},{"path":"https://jrwinget.github.io/bidux/articles/telemetry-integration.html","id":"best-practices","dir":"Articles","previous_headings":"","what":"Best Practices","title":"Integrating shiny.telemetry with BIDUX","text":"Collect Sufficient Data: Ensure telemetry least 50-100 sessions analysis reliable patterns. Regular Analysis: Run telemetry analysis periodically (e.g., monthly) catch emerging issues. Combine Qualitative Data: Use telemetry insights alongside user interviews usability testing. Track Improvements: implementing changes, collect new telemetry verify improvements: Document Patterns: Build knowledge base common patterns domain:","code":"# Before changes issues_before <- bid_ingest_telemetry(\"telemetry_before.sqlite\")  # After implementing improvements issues_after <- bid_ingest_telemetry(\"telemetry_after.sqlite\")  # Compare issue counts cat(\"Issues before:\", length(issues_before), \"\\n\") cat(\"Issues after:\", length(issues_after), \"\\n\") # Save recurring patterns for future reference telemetry_patterns <- list(   date_filter_confusion = \"Users often struggle with date range inputs - consider using presets\",   tab_discovery = \"Secondary tabs have low discovery - consider better visual hierarchy\",   error_recovery = \"Users abandon after errors - implement graceful error handling\" )"},{"path":"https://jrwinget.github.io/bidux/articles/telemetry-integration.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Integrating shiny.telemetry with BIDUX","text":"bid_ingest_telemetry() function bridges gap user behavior data design decisions. automatically identifying friction points real usage patterns, provides concrete, evidence-based starting points BID framework, ultimately leading user-friendly Shiny applications.","code":""},{"path":"https://jrwinget.github.io/bidux/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jeremy Winget. Author, maintainer.","code":""},{"path":"https://jrwinget.github.io/bidux/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Winget J (2025). bidux: Behavior Insight Design: Toolkit Integrating Behavioral Science UI/UX Design. R package version 0.3.0, https://jrwinget.github.io/bidux/.","code":"@Manual{,   title = {bidux: Behavior Insight Design: A Toolkit for Integrating Behavioral Science in UI/UX Design},   author = {Jeremy Winget},   year = {2025},   note = {R package version 0.3.0},   url = {https://jrwinget.github.io/bidux/}, }"},{"path":[]},{"path":"https://jrwinget.github.io/bidux/index.html","id":"id_-overview","dir":"","previous_headings":"","what":"📖 Overview","title":"Behavior Insight Design: A Toolkit for Integrating Behavioral Science in UI/UX Design","text":"bidux brings Behavior Insight Design (BID) framework Shiny development workflow. Follow five staged functions (Interpret, Notice, Anticipate, Structure, Validate) systematically apply behavioral science UI/UX design build intuitive dashboards.","code":""},{"path":"https://jrwinget.github.io/bidux/index.html","id":"id_-key-features","dir":"","previous_headings":"","what":"🚀 Key Features","title":"Behavior Insight Design: A Toolkit for Integrating Behavioral Science in UI/UX Design","text":"Interpret user needs (bid_interpret()) Notice friction points (bid_notice()) Anticipate behavior & biases (bid_anticipate()) Structure dashboard layouts (bid_structure()) Validate & empower users (bid_validate()) Telemetry Integration: ingest real usage data auto-detect UX issues (bid_ingest_telemetry()) Component Suggestions: get tailored UI component ideas bslib, shiny, reactable, echarts4r, Reporting: generate HTML, Markdown, text reports BID process","code":""},{"path":"https://jrwinget.github.io/bidux/index.html","id":"id_-installation","dir":"","previous_headings":"","what":"📥 Installation","title":"Behavior Insight Design: A Toolkit for Integrating Behavioral Science in UI/UX Design","text":"Install CRAN: development version:","code":"install.packages(\"bidux\") # install.packages(\"pak\") pak::pak(\"jrwinget/bidux\")"},{"path":"https://jrwinget.github.io/bidux/index.html","id":"id_-quick-start","dir":"","previous_headings":"","what":"✅ Quick Start","title":"Behavior Insight Design: A Toolkit for Integrating Behavioral Science in UI/UX Design","text":"","code":"library(shiny) library(bidux)  # Document a simple BID pipeline process <- bid_interpret(     central_question = \"Which metrics drive decisions?\",     data_story = list(       hook = \"Key metrics hidden\",       resolution = \"Surface top metrics up front\"     )   ) |>   bid_notice(     problem = \"Users struggle to find key metrics\",     evidence = \"70% of users spent >30s searching\"   ) |>   bid_anticipate(     bias_mitigations = list(anchoring = \"Contextual defaults\")   ) |>   bid_structure() |>   bid_validate(     include_exp_design = FALSE,     include_telemetry = TRUE,     include_empower_tools = TRUE   )  # View suggestions bid_suggest_components(process, package = \"bslib\")  # Generate an HTML report bid_report(process, format = \"html\")"},{"path":"https://jrwinget.github.io/bidux/index.html","id":"id_-telemetry-integration","dir":"","previous_headings":"","what":"📊 Telemetry Integration","title":"Behavior Insight Design: A Toolkit for Integrating Behavioral Science in UI/UX Design","text":"Leverage real user behavior pinpoint UX friction {shiny.telemetry} data: bid_ingest_telemetry() automatically flags five friction indicators: Unused Inputs: controls rarely interacted Delayed Interactions: long time--first-action Frequent Errors: recurring error patterns Navigation Drop-offs: seldom-visited tabs/pages Confusion Patterns: rapid repeated changes Use insights fuel Notice stage drive data-informed UI improvements. See full example thresholds customization See package vignette ‘Telemetry Integration’ full example (accessible via vignette(\"telemetry-integration\", package=\"bidux\")).","code":"# Ingest telemetry from SQLite or JSON issues <- bid_ingest_telemetry(   \"telemetry.sqlite\",   format = \"sqlite\" )  # Inspect detected issues str(issues)"},{"path":"https://jrwinget.github.io/bidux/index.html","id":"id_-vignettes","dir":"","previous_headings":"","what":"📚 Vignettes","title":"Behavior Insight Design: A Toolkit for Integrating Behavioral Science in UI/UX Design","text":"Explore detailed guides: vignette(\"introduction--bid\"): BID framework overview vignette(\"getting-started\"): Quick start guide vignette(\"concepts-reference\"): Comprehensive concept dictionary vignette(\"telemetry-integration\"): Integrating telemetry BIDUX","code":""},{"path":"https://jrwinget.github.io/bidux/index.html","id":"id_-contributing","dir":"","previous_headings":"","what":"🤝 Contributing","title":"Behavior Insight Design: A Toolkit for Integrating Behavioral Science in UI/UX Design","text":"welcome contributions! Please see Contributing Guide guidelines, issue templates, code style.","code":""},{"path":"https://jrwinget.github.io/bidux/index.html","id":"id_-license--code-of-conduct","dir":"","previous_headings":"","what":"📜 License & Code of Conduct","title":"Behavior Insight Design: A Toolkit for Integrating Behavioral Science in UI/UX Design","text":"project MIT licensed. contributing, agree Code Conduct.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/adjust_suggestion_score.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply context-based scoring adjustments — adjust_suggestion_score","title":"Apply context-based scoring adjustments — adjust_suggestion_score","text":"Apply context-based scoring adjustments","code":""},{"path":"https://jrwinget.github.io/bidux/reference/adjust_suggestion_score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply context-based scoring adjustments — adjust_suggestion_score","text":"","code":"adjust_suggestion_score(suggestion, previous_stage, chosen_layout, concept)"},{"path":"https://jrwinget.github.io/bidux/reference/as_tibble.bid_stage.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert bid_stage to tibble — as_tibble.bid_stage","title":"Convert bid_stage to tibble — as_tibble.bid_stage","text":"Convert bid_stage tibble","code":""},{"path":"https://jrwinget.github.io/bidux/reference/as_tibble.bid_stage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert bid_stage to tibble — as_tibble.bid_stage","text":"","code":"# S3 method for class 'bid_stage' as_tibble(x, ...)"},{"path":"https://jrwinget.github.io/bidux/reference/as_tibble.bid_stage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert bid_stage to tibble — as_tibble.bid_stage","text":"x bid_stage object ... Additional arguments (unused)","code":""},{"path":"https://jrwinget.github.io/bidux/reference/as_tibble.bid_stage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert bid_stage to tibble — as_tibble.bid_stage","text":"tibble","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_anticipate.html","id":null,"dir":"Reference","previous_headings":"","what":"Document User Behavior Anticipation Stage in BID Framework — bid_anticipate","title":"Document User Behavior Anticipation Stage in BID Framework — bid_anticipate","text":"function documents anticipated user behavior listing bias mitigation strategies related anchoring, framing, confirmation bias, etc. also supports adding interaction hints visual feedback elements.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_anticipate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Document User Behavior Anticipation Stage in BID Framework — bid_anticipate","text":"","code":"bid_anticipate(   previous_stage,   bias_mitigations = NULL,   include_accessibility = TRUE,   ... )"},{"path":"https://jrwinget.github.io/bidux/reference/bid_anticipate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Document User Behavior Anticipation Stage in BID Framework — bid_anticipate","text":"previous_stage tibble list output earlier BID stage function. bias_mitigations named list bias mitigation strategies. NULL, function suggest bias mitigations based information previous stages. include_accessibility Logical indicating whether include accessibility mitigations. Default TRUE. ... Additional parameters. 'interaction_principles' provided, ignored warning.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_anticipate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Document User Behavior Anticipation Stage in BID Framework — bid_anticipate","text":"tibble containing documented information \"Anticipate\" stage.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_anticipate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Document User Behavior Anticipation Stage in BID Framework — bid_anticipate","text":"","code":"structure_info <- bid_structure(   bid_interpret(     bid_notice(       \"Issue with dropdown menus\",       evidence = \"User testing indicated delays\"     ),     central_question = \"How can we improve selection efficiency?\",     data_story = list(       hook = \"Too many options\",       context = \"Excessive choices\",       tension = \"User frustration\",       resolution = \"Simplify menu\"     )   ),   concepts = c(\"principle_of_proximity\", \"default_effect\") ) #> Auto-suggested theory: Hick's Law (confidence: 90%) #> Stage 1 (Notice) completed. (20% complete) #>   - Problem: Issue with dropdown menus #>   - Theory: Hick's Law (auto-suggested) #>   - Evidence: User testing indicated delays #>   - Theory confidence: 90% #>   - Next: Use bid_interpret() for Stage 2  #> Stage 2 (Interpret) completed. #>   - Central question: How can we improve selection efficiency? #>   - Your data story has all key elements. Focus on making each component compelling and relevant. #>   - Your central question is appropriately scoped. #>   - No user personas defined  #> ℹ Auto-selected layout: breathable #> ℹ Detected information overload patterns; choosing 'breathable' to reduce cognitive load. #> ℹ Tip: Learn more about any concept via bid_concept(\"<concept>\"). #> Stage 3 (Structure) completed. #>   - Auto-selected layout: breathable #>   - Concept groups generated: 5 #>   - Total concepts: 5   # Basic usage bid_anticipate(   previous_stage = structure_info,   bias_mitigations = list(     anchoring = \"Use context-aware references\",     framing = \"Toggle between positive and negative framing\"   ) ) #> Added accessibility mitigation based on layout context. #> Found partial match: Anchoring Effect #> Found partial match: Framing & Loss Aversion #> Found partial match: Accessibility Contrast #> Stage 4 (Anticipate) completed. #>   - Bias mitigations: 3 defined #>   - Accessibility considerations included #>   - Key suggestions: anchoring mitigation: Always show reference points like previous period, budget, or industry average., framing mitigation: Toggle between progress (65% complete) and gap (35% remaining) framing., accessibility mitigation: Test color combinations with WebAIM's contrast checker to meet WCAG standards.  #> # A tibble: 1 × 13 #>   stage      bias_mitigations    accessibility previous_layout previous_concepts #>   <chr>      <chr>               <chr>         <chr>           <chr>             #> 1 Anticipate anchoring: Use con… accessibilit… breathable      Cognitive Load T… #> # ℹ 8 more variables: previous_central_question <lgl>, previous_hook <lgl>, #> #   previous_problem <lgl>, previous_theory <lgl>, previous_audience <chr>, #> #   previous_personas <chr>, suggestions <chr>, timestamp <dttm>  # Let the function suggest bias mitigations based on previous stages bid_anticipate(   previous_stage = structure_info ) #> Automatically suggested bias mitigations: attention bias, belief perseverance, cognitive load, accessibility. #> Concept 'attention bias' not found #> Found partial match: Cognitive Load Theory #> Found partial match: Accessibility Contrast #> Stage 4 (Anticipate) completed. #>   - Bias mitigations: 4 defined #>   - Accessibility considerations included #>   - Key suggestions: attention bias mitigation: Consider how this bias affects user decisions., belief perseverance mitigation: Proactively show content that might disprove initial assumptions., cognitive load mitigation: Use tabs or collapsible sections to organize complex information.  #> # A tibble: 1 × 13 #>   stage      bias_mitigations    accessibility previous_layout previous_concepts #>   <chr>      <chr>               <chr>         <chr>           <chr>             #> 1 Anticipate \"attention bias: C… accessibilit… breathable      Cognitive Load T… #> # ℹ 8 more variables: previous_central_question <lgl>, previous_hook <lgl>, #> #   previous_problem <lgl>, previous_theory <lgl>, previous_audience <chr>, #> #   previous_personas <chr>, suggestions <chr>, timestamp <dttm>  # with accessibility included (default) bid_anticipate(   previous_stage = structure_info,   bias_mitigations = list(     anchoring = \"Use context-aware references\",     framing = \"Toggle between positive and negative framing\"   ),   include_accessibility = TRUE ) #> Added accessibility mitigation based on layout context. #> Found partial match: Anchoring Effect #> Found partial match: Framing & Loss Aversion #> Found partial match: Accessibility Contrast #> Stage 4 (Anticipate) completed. #>   - Bias mitigations: 3 defined #>   - Accessibility considerations included #>   - Key suggestions: anchoring mitigation: Always show reference points like previous period, budget, or industry average., framing mitigation: Toggle between progress (65% complete) and gap (35% remaining) framing., accessibility mitigation: Test color combinations with WebAIM's contrast checker to meet WCAG standards.  #> # A tibble: 1 × 13 #>   stage      bias_mitigations    accessibility previous_layout previous_concepts #>   <chr>      <chr>               <chr>         <chr>           <chr>             #> 1 Anticipate anchoring: Use con… accessibilit… breathable      Cognitive Load T… #> # ℹ 8 more variables: previous_central_question <lgl>, previous_hook <lgl>, #> #   previous_problem <lgl>, previous_theory <lgl>, previous_audience <chr>, #> #   previous_personas <chr>, suggestions <chr>, timestamp <dttm>"},{"path":"https://jrwinget.github.io/bidux/reference/bid_concept.html","id":null,"dir":"Reference","previous_headings":"","what":"Get detailed information about a specific concept — bid_concept","title":"Get detailed information about a specific concept — bid_concept","text":"Returns detailed information specific BID framework concept, including implementation recommendations based concept's stage.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_concept.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get detailed information about a specific concept — bid_concept","text":"","code":"bid_concept(concept_name, add_recommendations = TRUE)"},{"path":"https://jrwinget.github.io/bidux/reference/bid_concept.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get detailed information about a specific concept — bid_concept","text":"concept_name character string exact partial concept name add_recommendations Logical indicating whether add stage-specific recommendations","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_concept.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get detailed information about a specific concept — bid_concept","text":"tibble detailed concept information","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_concepts.html","id":null,"dir":"Reference","previous_headings":"","what":"Search BID Framework Concepts — bid_concepts","title":"Search BID Framework Concepts — bid_concepts","text":"Search behavioral science UX concepts used BID framework. Returns concepts matching search term along descriptions, categories, implementation guidance.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_concepts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search BID Framework Concepts — bid_concepts","text":"","code":"bid_concepts(search = NULL, fuzzy_match = TRUE, max_distance = 2)"},{"path":"https://jrwinget.github.io/bidux/reference/bid_concepts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search BID Framework Concepts — bid_concepts","text":"search character string search . NULL empty, returns concepts. fuzzy_match Logical indicating whether use fuzzy string matching (default: TRUE) max_distance Maximum string distance fuzzy matching (default: 2)","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_concepts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search BID Framework Concepts — bid_concepts","text":"tibble containing matching concepts details","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_ingest_telemetry.html","id":null,"dir":"Reference","previous_headings":"","what":"Ingest telemetry data and identify UX friction points — bid_ingest_telemetry","title":"Ingest telemetry data and identify UX friction points — bid_ingest_telemetry","text":"function ingests telemetry data shiny.telemetry output (SQLite JSON) automatically identifies potential UX issues, translating BID framework Notice stages. analyzes user behavior patterns detect friction points unused inputs, delayed interactions, frequent errors, navigation drop-offs.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_ingest_telemetry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ingest telemetry data and identify UX friction points — bid_ingest_telemetry","text":"","code":"bid_ingest_telemetry(path, format = NULL, thresholds = list())"},{"path":"https://jrwinget.github.io/bidux/reference/bid_ingest_telemetry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ingest telemetry data and identify UX friction points — bid_ingest_telemetry","text":"path File path telemetry data (SQLite database JSON log file) format Optional format specification (\"sqlite\" \"json\"). NULL, auto-detected file extension. thresholds Optional list threshold parameters: - unused_input_threshold: percentage sessions input considered unused (default: 0.05) - delay_threshold_seconds: seconds delay considered problematic (default: 30) - error_rate_threshold: percentage sessions errors considered problematic (default: 0.1) - navigation_threshold: percentage sessions visiting page considered underused (default: 0.2) - rapid_change_window: seconds within multiple changes indicate confusion (default: 10) - rapid_change_count: number changes within window flag confusion (default: 5)","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_ingest_telemetry.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ingest telemetry data and identify UX friction points — bid_ingest_telemetry","text":"list containing bid_stage objects identified issue \"Notice\" stage. element named issue type (e.g., \"unused_input_region\", \"delayed_interaction\", etc.)","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_ingest_telemetry.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ingest telemetry data and identify UX friction points — bid_ingest_telemetry","text":"","code":"if (FALSE) { # \\dontrun{ # Analyze SQLite telemetry database issues <- bid_ingest_telemetry(\"telemetry.sqlite\")  # Analyze JSON log with custom thresholds issues <- bid_ingest_telemetry(   \"telemetry.log\",   format = \"json\",   thresholds = list(     unused_input_threshold = 0.1,     delay_threshold_seconds = 60   ) )  # Use results in BID workflow if (length(issues) > 0) {   # Take first issue and continue with BID process   interpret_result <- bid_interpret(     previous_stage = issues[[1]],     central_question = \"How can we improve user engagement?\"   ) } } # }"},{"path":"https://jrwinget.github.io/bidux/reference/bid_interpret.html","id":null,"dir":"Reference","previous_headings":"","what":"Document User Interpretation Stage in BID Framework — bid_interpret","title":"Document User Interpretation Stage in BID Framework — bid_interpret","text":"function documents interpretation user needs, capturing central question data storytelling narrative. represents stage 2 BID framework.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_interpret.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Document User Interpretation Stage in BID Framework — bid_interpret","text":"","code":"bid_interpret(   previous_stage,   central_question = NULL,   data_story = NULL,   user_personas = NULL )"},{"path":"https://jrwinget.github.io/bidux/reference/bid_interpret.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Document User Interpretation Stage in BID Framework — bid_interpret","text":"previous_stage tibble list output earlier BID stage function. central_question character string representing main question answered. NULL, suggested based previous stage information. data_story list containing elements hook, context, tension, resolution, optionally audience, metrics, visual_approach. NULL, elements suggested based previous stage. user_personas Optional list user personas consider design.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_interpret.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Document User Interpretation Stage in BID Framework — bid_interpret","text":"tibble containing documented information \"Interpret\" stage.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_interpret.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Document User Interpretation Stage in BID Framework — bid_interpret","text":"","code":"notice <- bid_notice(   problem = \"Users struggle with complex data\",   evidence = \"Test results indicate delays\" ) #> Auto-suggested theory: Cognitive Load Theory (confidence: 90%) #> Stage 1 (Notice) completed. (20% complete) #>   - Problem: Users struggle with complex data #>   - Theory: Cognitive Load Theory (auto-suggested) #>   - Evidence: Test results indicate delays #>   - Theory confidence: 90% #>   - Next: Use bid_interpret() for Stage 2   # Basic usage bid_interpret(   previous_stage = notice,   central_question = \"What drives the decline in user engagement?\",   data_story = list(     hook = \"Declining trend in engagement\",     context = \"Previous high engagement levels\",     tension = \"Unexpected drop\",     resolution = \"Investigate new UI changes\",     audience = \"Marketing team\",     metrics = c(\"Daily Active Users\", \"Session Duration\"),     visual_approach = \"Comparison charts showing before/after UI change\"   ) ) #> ℹ Created user persona 'Marketing Professional Persona' based on audience information #> Stage 2 (Interpret) completed. #>   - Central question: What drives the decline in user engagement? #>   - Your data story has all key elements. Focus on making each component compelling and relevant. #>   - Your central question is appropriately scoped. #>   - User personas: 1 defined  #> BID Framework - Interpret Stage #> Generated: 2025-08-29 21:11:51  #> Progress: 40 % (2/5)  #>  #> Central Question: What drives the decline in user engagement?  #> Story Hook: Declining trend in engagement  #>  #>  Suggestions: Your data story has all key elements. Focus on making each component compelling and relevant. Your central question is appropriately scoped. You've defined 1 persona(s). Ensure your design addresses the specific needs of each.  #>  #>  Use summary() for detailed information   # Let the function suggest content based on previous stage bid_interpret(   previous_stage = notice ) #> ℹ Suggested central question: How can we reduce cognitive load to address Users struggle with complex data? #> ℹ Suggested data story elements based on previous stage information #> Stage 2 (Interpret) completed. #>   - Central question: How can we reduce cognitive load to address Users struggle w... #>   - Your data story has all key elements. Focus on making each component compelling and relevant. #>   - Your central question is appropriately scoped. #>   - No user personas defined  #> BID Framework - Interpret Stage #> Generated: 2025-08-29 21:11:51  #> Progress: 40 % (2/5)  #>  #> Central Question: How can we reduce cognitive load to address Users struggle with complex data?  #> Story Hook: Users are experiencing problems with Users struggle with complex data  #>  #>  Suggestions: Your data story has all key elements. Focus on making each component compelling and relevant. Your central question is appropriately scoped. Consider defining specific user personas to better target your design.  #>  #>  Use summary() for detailed information   # With user personas bid_interpret(   previous_stage = notice,   central_question = \"How can we improve data discovery?\",   data_story = list(     hook = \"Users are missing key insights\",     context = \"Critical data is available but overlooked\",     tension = \"Time-sensitive decisions are delayed\",     resolution = \"Highlight key metrics more effectively\"   ),   user_personas = list(     list(       name = \"Sara, Data Analyst\",       goals = \"Needs to quickly find patterns in data\",       pain_points = \"Gets overwhelmed by too many visualizations\",       technical_level = \"Advanced\"     ),     list(       name = \"Marcus, Executive\",       goals = \"Wants high-level insights at a glance\",       pain_points = \"Limited time to analyze detailed reports\",       technical_level = \"Basic\"     )   ) ) #> Stage 2 (Interpret) completed. #>   - Central question: How can we improve data discovery? #>   - Your data story has all key elements. Focus on making each component compelling and relevant. #>   - Your central question is appropriately scoped. #>   - User personas: 2 defined  #> BID Framework - Interpret Stage #> Generated: 2025-08-29 21:11:51  #> Progress: 40 % (2/5)  #>  #> Central Question: How can we improve data discovery?  #> Story Hook: Users are missing key insights  #>  #>  Suggestions: Your data story has all key elements. Focus on making each component compelling and relevant. Your central question is appropriately scoped. You've defined 2 persona(s). Ensure your design addresses the specific needs of each.  #>  #>  Use summary() for detailed information"},{"path":"https://jrwinget.github.io/bidux/reference/bid_notice.html","id":null,"dir":"Reference","previous_headings":"","what":"Document User Notice Stage in BID Framework — bid_notice","title":"Document User Notice Stage in BID Framework — bid_notice","text":"function documents initial observation problem identification stage. represents stage 1 BID framework now returns structured bid_stage object enhanced metadata external mapping support.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_notice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Document User Notice Stage in BID Framework — bid_notice","text":"","code":"bid_notice(problem, theory = NULL, evidence = NULL, ...)"},{"path":"https://jrwinget.github.io/bidux/reference/bid_notice.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Document User Notice Stage in BID Framework — bid_notice","text":"problem character string describing observed user problem. theory character string describing behavioral theory might explain problem. NULL, auto-suggested using external theory mappings. evidence character string describing evidence supporting problem. ... Additional parameters. Deprecated parameters like 'target_audience' generate warnings provided.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_notice.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Document User Notice Stage in BID Framework — bid_notice","text":"bid_stage object containing documented information \"Notice\" stage enhanced metadata validation.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_notice.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Document User Notice Stage in BID Framework — bid_notice","text":"","code":"# Basic usage with auto-suggested theory notice_result <- bid_notice(   problem = \"Users struggling with complex dropdowns and too many options\",   evidence = \"User testing shows 65% abandonment rate on filter selection\" ) #> Auto-suggested theory: Hick's Law (confidence: 90%) #> Stage 1 (Notice) completed. (20% complete) #>   - Problem: Users struggling with complex dropdowns and too many options #>   - Theory: Hick's Law (auto-suggested) #>   - Evidence: User testing shows 65% abandonment rate on filter selection #>   - Theory confidence: 90% #>   - Next: Use bid_interpret() for Stage 2   # Print shows human-friendly summary print(notice_result) #> BID Framework - Notice Stage #> Generated: 2025-08-29 21:11:51  #> Progress: 20 % (1/5)  #>  #> Problem: Users struggling with complex dropdowns and too many options  #> Theory: Hick's Law (auto-suggested)  #> Evidence: User testing shows 65% abandonment rate on filter selection  #>  #>  Suggestions: Define specific target audience to better focus design solutions. Consider progressive disclosure or categorization to reduce choice complexity.  #>  #>  Use summary() for detailed information   # Access underlying data summary(notice_result) #> === BID Framework: Notice Stage Summary === #>  #> Metadata: #>    stage_number : 1  #>    total_stages : 5  #>    validation_status : completed  #>    auto_suggested_theory : Yes  #>    theory_confidence : 90%  #>    problem_length : 60  #>    evidence_length : 59  #>    custom_mappings_used : No  #>  #> Stage Data: #>    stage : Notice  #>    problem : Users struggling with complex dropdowns and too many options  #>    theory : Hick's Law  #>    evidence : User testing shows 65% abandonment rate on filter selection  #>    suggestions : Define specific target audience to better focus design solutions. Consider pr...  #>  #> Generated: 2025-08-29 21:11:51   # Check stage and metadata get_stage(notice_result) #> [1] \"Notice\" get_metadata(notice_result) #> $stage_number #> [1] 1 #>  #> $total_stages #> [1] 5 #>  #> $validation_status #> [1] \"completed\" #>  #> $auto_suggested_theory #> [1] TRUE #>  #> $theory_confidence #> [1] 0.9 #>  #> $problem_length #> [1] 60 #>  #> $evidence_length #> [1] 59 #>  #> $custom_mappings_used #> [1] FALSE #>   # with explicit theory notice_explicit <- bid_notice(   problem = \"Mobile interface is difficult to navigate\",   theory = \"Fitts's Law\",   evidence = \"Mobile users report frustration with small touch targets\" ) #> Stage 1 (Notice) completed. (20% complete) #>   - Problem: Mobile interface is difficult to navigate #>   - Theory: Fitts's Law #>   - Evidence: Mobile users report frustration with small touch targets #>   - Next: Use bid_interpret() for Stage 2"},{"path":"https://jrwinget.github.io/bidux/reference/bid_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate BID Framework Report — bid_report","title":"Generate BID Framework Report — bid_report","text":"Creates comprehensive report completed BID framework process. report summarizes stages provides recommendations implementation.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate BID Framework Report — bid_report","text":"","code":"bid_report(   validate_stage,   format = c(\"text\", \"html\", \"markdown\"),   include_diagrams = TRUE )"},{"path":"https://jrwinget.github.io/bidux/reference/bid_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate BID Framework Report — bid_report","text":"validate_stage tibble output bid_validate(). format Output format: \"text\", \"html\", \"markdown\" include_diagrams Logical, whether include ASCII diagrams report (default: TRUE)","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate BID Framework Report — bid_report","text":"formatted report summarizing entire BID process","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_report.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate BID Framework Report — bid_report","text":"","code":"if (interactive()) {   # After completing all 5 stages   validation_result <- bid_validate(...)    # Generate a text report   bid_report(validation_result)    # Generate an HTML report   bid_report(validation_result, format = \"html\")    # Generate a markdown report without diagrams   bid_report(     validation_result,     format = \"markdown\",     include_diagrams = FALSE   ) }"},{"path":"https://jrwinget.github.io/bidux/reference/bid_result.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for BID result collection objects — bid_result","title":"Constructor for BID result collection objects — bid_result","text":"Constructor BID result collection objects","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_result.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for BID result collection objects — bid_result","text":"","code":"bid_result(stages)"},{"path":"https://jrwinget.github.io/bidux/reference/bid_result.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for BID result collection objects — bid_result","text":"stages List bid_stage objects","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_result.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for BID result collection objects — bid_result","text":"Object class 'bid_result'","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_stage.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for BID stage objects — bid_stage","title":"Constructor for BID stage objects — bid_stage","text":"Constructor BID stage objects","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_stage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for BID stage objects — bid_stage","text":"","code":"bid_stage(stage, data, metadata = list())"},{"path":"https://jrwinget.github.io/bidux/reference/bid_stage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for BID stage objects — bid_stage","text":"stage Character string indicating stage name data Tibble containing stage data metadata List containing additional metadata","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_stage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for BID stage objects — bid_stage","text":"Object class 'bid_stage'","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_structure.html","id":null,"dir":"Reference","previous_headings":"","what":"Document Dashboard Structure Stage in BID Framework — bid_structure","title":"Document Dashboard Structure Stage in BID Framework — bid_structure","text":"function documents structure dashboard automatic layout selection generates ranked, concept-grouped actionable UI/UX suggestions. Layout intelligently chosen based content analysis previous stages using deterministic heuristics. Returns structured recommendations specific component pointers implementation rationales.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_structure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Document Dashboard Structure Stage in BID Framework — bid_structure","text":"","code":"bid_structure(previous_stage, concepts = NULL, ...)"},{"path":"https://jrwinget.github.io/bidux/reference/bid_structure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Document Dashboard Structure Stage in BID Framework — bid_structure","text":"previous_stage tibble list output earlier BID stage function. concepts character vector additional BID concepts include. Concepts can provided natural language (e.g., \"Principle Proximity\") underscores (e.g., \"principle_of_proximity\"). function uses fuzzy matching identify concepts. NULL, detect relevant concepts previous stages automatically. ... Additional parameters. layout provided via ..., function abort helpful error message.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_structure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Document Dashboard Structure Stage in BID Framework — bid_structure","text":"bid_stage object containing: stage \"Structure\" layout Auto-selected layout type suggestions List concept groups ranked suggestions concepts Comma-separated string concepts used","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_structure.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Document Dashboard Structure Stage in BID Framework — bid_structure","text":"Layout Auto-Selection: Uses deterministic heuristics analyze content previous stages select appropriate layout: breathable: information overload/confusion patterns dual_process: overview vs detail needs grid: grouping/comparison requirements card: modular/chunked content tabs: categorical organization (unless telemetry shows issues) Suggestion Engine: Generates ranked, actionable recommendations grouped UX concepts. suggestion includes specific Shiny/bslib components, implementation details, rationale. Suggestions scored based relevance, layout appropriateness, contextual factors.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_structure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Document Dashboard Structure Stage in BID Framework — bid_structure","text":"","code":"interpret <- bid_notice(   problem = \"Users struggle with information overload\",   evidence = \"Survey results indicate delays\" ) |>   bid_interpret(     central_question = \"How can we simplify data presentation?\",     data_story = list(       hook = \"Data is too complex\",       context = \"Overloaded with charts\",       tension = \"Confusing layout\",       resolution = \"Introduce clear grouping\"     )   ) #> Auto-suggested theory: Processing Fluency (confidence: 70%) #> Stage 1 (Notice) completed. (20% complete) #>   - Problem: Users struggle with information overload #>   - Theory: Processing Fluency (auto-suggested) #>   - Evidence: Survey results indicate delays #>   - Theory confidence: 70% #>   - Next: Use bid_interpret() for Stage 2  #> Stage 2 (Interpret) completed. #>   - Central question: How can we simplify data presentation? #>   - Your data story has all key elements. Focus on making each component compelling and relevant. #>   - Your central question is appropriately scoped. #>   - No user personas defined   # Auto-selected layout with concept-grouped suggestions structure_result <- bid_structure(previous_stage = interpret) #> ℹ Auto-selected layout: breathable #> ℹ Detected information overload patterns; choosing 'breathable' to reduce cognitive load. #> ℹ Tip: Learn more about any concept via bid_concept(\"<concept>\"). #> Stage 3 (Structure) completed. #>   - Auto-selected layout: breathable #>   - Concept groups generated: 4 #>   - Total concepts: 4  print(structure_result$layout)  # Auto-selected layout #> [1] \"breathable\" \"breathable\" \"breathable\" \"breathable\" print(structure_result$suggestions)  # Ranked suggestions by concept #> [[1]] #> [[1]]$concept #> [1] \"Cognitive Load Theory\" #>  #> [[1]]$suggestions #> [[1]]$suggestions[[1]] #> [[1]]$suggestions[[1]]$title #> [1] \"Limit initial choices\" #>  #> [[1]]$suggestions[[1]]$details #> [1] \"Show only core filters by default; defer advanced options to secondary views or accordions.\" #>  #> [[1]]$suggestions[[1]]$components #> [1] \"bslib::accordion\"            \"shiny::conditionalPanel\"     #> [3] \"shiny::updateSelectizeInput\" #>  #> [[1]]$suggestions[[1]]$rationale #> [1] \"Reduces initial cognitive load for new users while preserving functionality.\" #>  #> [[1]]$suggestions[[1]]$score #> [1] 1 #>  #>  #> [[1]]$suggestions[[2]] #> [[1]]$suggestions[[2]]$title #> [1] \"Use progressive complexity\" #>  #> [[1]]$suggestions[[2]]$details #> [1] \"Start with simple views and allow users to add complexity incrementally.\" #>  #> [[1]]$suggestions[[2]]$components #> [1] \"shiny::tabsetPanel\"  \"bslib::accordion\"    \"shiny::actionButton\" #>  #> [[1]]$suggestions[[2]]$rationale #> [1] \"Prevents overwhelming users with too many options at once.\" #>  #> [[1]]$suggestions[[2]]$score #> [1] 0.91 #>  #>  #> [[1]]$suggestions[[3]] #> [[1]]$suggestions[[3]]$title #> [1] \"Provide smart defaults\" #>  #> [[1]]$suggestions[[3]]$details #> [1] \"Pre-select commonly used filters and settings to reduce decision fatigue.\" #>  #> [[1]]$suggestions[[3]]$components #> [1] \"shiny::selectInput\"   \"shiny::checkboxInput\" \"bslib::input_switch\"  #>  #> [[1]]$suggestions[[3]]$rationale #> [1] \"Leverages the Default Effect to reduce cognitive burden.\" #>  #> [[1]]$suggestions[[3]]$score #> [1] 0.88 #>  #>  #>  #>  #> [[2]] #> [[2]]$concept #> [1] \"Visual Hierarchy\" #>  #> [[2]]$suggestions #> [[2]]$suggestions[[1]] #> [[2]]$suggestions[[1]]$title #> [1] \"Establish clear information priority\" #>  #> [[2]]$suggestions[[1]]$details #> [1] \"Use size, color, and spacing to guide attention to key metrics first.\" #>  #> [[2]]$suggestions[[1]]$components #> [1] \"bslib::card\"      \"shiny::h1\"        \"shiny::h2\"        \"bslib::value_box\" #>  #> [[2]]$suggestions[[1]]$rationale #> [1] \"Helps users quickly identify what matters most in the interface.\" #>  #> [[2]]$suggestions[[1]]$score #> [1] 0.9 #>  #>  #> [[2]]$suggestions[[2]] #> [[2]]$suggestions[[2]]$title #> [1] \"Group related content visually\" #>  #> [[2]]$suggestions[[2]]$details #> [1] \"Use consistent spacing and visual containers to show relationships.\" #>  #> [[2]]$suggestions[[2]]$components #> [1] \"bslib::layout_columns\" \"bslib::card\"           \"shiny::fluidRow\"       #>  #> [[2]]$suggestions[[2]]$rationale #> [1] \"Leverages Gestalt principles to reduce cognitive processing.\" #>  #> [[2]]$suggestions[[2]]$score #> [1] 0.87 #>  #>  #>  #>  #> [[3]] #> [[3]]$concept #> [1] \"Progressive Disclosure\" #>  #> [[3]]$suggestions #> [[3]]$suggestions[[1]] #> [[3]]$suggestions[[1]]$title #> [1] \"Use collapsible advanced filters\" #>  #> [[3]]$suggestions[[1]]$details #> [1] \"Place seldom-used filters in accordion sections or 'Show more' toggles.\" #>  #> [[3]]$suggestions[[1]]$components #> [1] \"bslib::accordion\"        \"shiny::conditionalPanel\" #>  #> [[3]]$suggestions[[1]]$rationale #> [1] \"Reveals complexity on demand without overwhelming the interface.\" #>  #> [[3]]$suggestions[[1]]$score #> [1] 0.88 #>  #>  #> [[3]]$suggestions[[2]] #> [[3]]$suggestions[[2]]$title #> [1] \"Implement drill-down navigation\" #>  #> [[3]]$suggestions[[2]]$details #> [1] \"Allow users to start with summaries and progressively reveal details.\" #>  #> [[3]]$suggestions[[2]]$components #> [1] \"shiny::actionButton\"  \"DT::datatable\"        \"reactable::reactable\" #>  #> [[3]]$suggestions[[2]]$rationale #> [1] \"Matches user mental models of exploration from general to specific.\" #>  #> [[3]]$suggestions[[2]]$score #> [1] 0.84 #>  #>  #>  #>  #> [[4]] #> [[4]]$concept #> [1] \"Principle of Proximity\" #>  #> [[4]]$suggestions #> [[4]]$suggestions[[1]] #> [[4]]$suggestions[[1]]$title #> [1] \"Group related controls together\" #>  #> [[4]]$suggestions[[1]]$details #> [1] \"Place filters and controls near the content they affect.\" #>  #> [[4]]$suggestions[[1]]$components #> [1] \"bslib::layout_columns\" \"shiny::wellPanel\"      \"bslib::card\"           #>  #> [[4]]$suggestions[[1]]$rationale #> [1] \"Spatial proximity indicates functional relationship.\" #>  #> [[4]]$suggestions[[1]]$score #> [1] 0.85 #>  #>  #>  #>"},{"path":"https://jrwinget.github.io/bidux/reference/bid_suggest_components.html","id":null,"dir":"Reference","previous_headings":"","what":"Suggest UI Components Based on BID Framework Analysis — bid_suggest_components","title":"Suggest UI Components Based on BID Framework Analysis — bid_suggest_components","text":"function analyzes results BID framework stages suggests appropriate UI components popular R packages like shiny, bslib, DT, etc. suggestions based design principles user needs identified BID process.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_suggest_components.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Suggest UI Components Based on BID Framework Analysis — bid_suggest_components","text":"","code":"bid_suggest_components(bid_stage, package = NULL)"},{"path":"https://jrwinget.github.io/bidux/reference/bid_suggest_components.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Suggest UI Components Based on BID Framework Analysis — bid_suggest_components","text":"bid_stage tibble output BID framework stage function package Optional character string specifying package focus suggestions . Options include \"shiny\", \"bslib\", \"DT\", \"plotly\", \"reactable\", \"htmlwidgets\". NULL, suggestions packages provided.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_suggest_components.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Suggest UI Components Based on BID Framework Analysis — bid_suggest_components","text":"tibble containing component suggestions relevance scores","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_suggest_components.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Suggest UI Components Based on BID Framework Analysis — bid_suggest_components","text":"","code":"if (interactive()) {   # After completing BID stages   notice_result <- bid_notice(     problem = \"Users struggle with complex data\",     theory = \"Cognitive Load Theory\"   )    # Get all component suggestions   bid_suggest_components(notice_result)    # Get only bslib suggestions   bid_suggest_components(notice_result, package = \"bslib\")    # Get shiny-specific suggestions   bid_suggest_components(notice_result, package = \"shiny\") }"},{"path":"https://jrwinget.github.io/bidux/reference/bid_validate.html","id":null,"dir":"Reference","previous_headings":"","what":"Document User Validation Stage in BID Framework — bid_validate","title":"Document User Validation Stage in BID Framework — bid_validate","text":"function documents validation stage, user tests refines dashboard. represents stage 5 BID framework.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_validate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Document User Validation Stage in BID Framework — bid_validate","text":"","code":"bid_validate(   previous_stage,   summary_panel = NULL,   collaboration = NULL,   next_steps = NULL,   include_exp_design = TRUE,   include_telemetry = TRUE,   include_empower_tools = TRUE )"},{"path":"https://jrwinget.github.io/bidux/reference/bid_validate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Document User Validation Stage in BID Framework — bid_validate","text":"previous_stage tibble list output earlier BID stage function. summary_panel character string describing final summary panel key insight presentation. collaboration character string describing dashboard enables collaboration sharing. next_steps character vector string describing recommended next steps implementation iteration. include_exp_design Logical indicating whether include experiment design suggestions. Default TRUE. include_telemetry Logical indicating whether include telemetry tracking monitoring suggestions. Default TRUE. include_empower_tools Logical indicating whether include context-aware empowerment tool suggestions. Default TRUE.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_validate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Document User Validation Stage in BID Framework — bid_validate","text":"tibble containing documented information \"Validate\" stage.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/bid_validate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Document User Validation Stage in BID Framework — bid_validate","text":"","code":"structure_input <- bid_notice(   problem  = \"Issue with dropdown menus\",   evidence = \"User testing indicated delays\" ) |>   bid_interpret(     central_question = \"How can we improve selection efficiency?\",     data_story = list(       hook = \"Too many options\",       context = \"Excessive choices\",       tension = \"User frustration\",       resolution = \"Simplify menu\"     )   ) #> Auto-suggested theory: Hick's Law (confidence: 90%) #> Stage 1 (Notice) completed. (20% complete) #>   - Problem: Issue with dropdown menus #>   - Theory: Hick's Law (auto-suggested) #>   - Evidence: User testing indicated delays #>   - Theory confidence: 90% #>   - Next: Use bid_interpret() for Stage 2  #> Stage 2 (Interpret) completed. #>   - Central question: How can we improve selection efficiency? #>   - Your data story has all key elements. Focus on making each component compelling and relevant. #>   - Your central question is appropriately scoped. #>   - No user personas defined   structure_result <- bid_structure(   previous_stage = structure_input,   concepts       = c(\"Principle of Proximity\", \"Default Effect\") ) #> ℹ Auto-selected layout: breathable #> ℹ Detected information overload patterns; choosing 'breathable' to reduce cognitive load. #> ℹ Tip: Learn more about any concept via bid_concept(\"<concept>\"). #> Stage 3 (Structure) completed. #>   - Auto-selected layout: breathable #>   - Concept groups generated: 5 #>   - Total concepts: 5   anticipate <- bid_anticipate(   previous_stage = structure_result,   bias_mitigations = list(     anchoring = \"Provide reference points\",     framing   = \"Use gain-framed messaging\"   ) ) #> Added accessibility mitigation based on layout context. #> Found partial match: Anchoring Effect #> Found partial match: Framing & Loss Aversion #> Found partial match: Accessibility Contrast #> Stage 4 (Anticipate) completed. #>   - Bias mitigations: 3 defined #>   - Accessibility considerations included #>   - Key suggestions: anchoring mitigation: Always show reference points like previous period, budget, or industry average., framing mitigation: Toggle between progress (65% complete) and gap (35% remaining) framing., accessibility mitigation: Test color combinations with WebAIM's contrast checker to meet WCAG standards.   bid_validate(   previous_stage = anticipate,   summary_panel = \"Clear summary of key insights with action items\",   collaboration = \"Team annotation and sharing features\",   next_steps = c(     \"Conduct user testing with target audience\",     \"Implement accessibility improvements\",     \"Add mobile responsiveness\"   ) ) #> Stage 5 (Validate) completed. #>   - Summary panel: Clear summary of key insights with action items #>   - Collaboration: Team annotation and sharing features #>   - Next steps: 3 items defined #>   - Include telemetry and monitoring in your post-launch validation Consider adding user empowerment tools to enhance collaboration  #> # A tibble: 1 × 16 #>   stage    summary_panel                  collaboration next_steps previous_bias #>   <chr>    <chr>                          <chr>         <chr>      <chr>         #> 1 Validate Clear summary of key insights… Team annotat… Conduct u… anchoring: P… #> # ℹ 11 more variables: previous_accessibility <chr>, previous_layout <chr>, #> #   previous_concepts <chr>, previous_central_question <chr>, #> #   previous_hook <chr>, previous_problem <chr>, previous_theory <chr>, #> #   previous_audience <chr>, previous_personas <chr>, suggestions <chr>, #> #   timestamp <dttm>"},{"path":"https://jrwinget.github.io/bidux/reference/bidux-package.html","id":null,"dir":"Reference","previous_headings":"","what":"bidux: Behavior Insight Design: A Toolkit for Integrating Behavioral Science in UI/UX Design — bidux-package","title":"bidux: Behavior Insight Design: A Toolkit for Integrating Behavioral Science in UI/UX Design — bidux-package","text":"Provides framework toolkit guide 'shiny' developers implementing Behavior Insight Design (BID) framework. package offers functions documenting five stages (Notice, Interpret, Structure, Anticipate, Validate), along comprehensive concept dictionary.","code":""},{"path":[]},{"path":"https://jrwinget.github.io/bidux/reference/bidux-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"bidux: Behavior Insight Design: A Toolkit for Integrating Behavioral Science in UI/UX Design — bidux-package","text":"Maintainer: Jeremy Winget contact@jrwinget.com (ORCID)","code":""},{"path":"https://jrwinget.github.io/bidux/reference/build_concept_group.html","id":null,"dir":"Reference","previous_headings":"","what":"Build suggestions for a specific concept — build_concept_group","title":"Build suggestions for a specific concept — build_concept_group","text":"Build suggestions specific concept","code":""},{"path":"https://jrwinget.github.io/bidux/reference/build_concept_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build suggestions for a specific concept — build_concept_group","text":"","code":"build_concept_group(concept, chosen_layout, previous_stage)"},{"path":"https://jrwinget.github.io/bidux/reference/build_concept_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build suggestions for a specific concept — build_concept_group","text":"concept Name concept generate suggestions chosen_layout Selected layout type previous_stage Previous stage data","code":""},{"path":"https://jrwinget.github.io/bidux/reference/build_concept_group.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build suggestions for a specific concept — build_concept_group","text":"List concept name suggestions","code":""},{"path":"https://jrwinget.github.io/bidux/reference/build_groups_with_suggestions.html","id":null,"dir":"Reference","previous_headings":"","what":"Build suggestion groups organized by concept — build_groups_with_suggestions","title":"Build suggestion groups organized by concept — build_groups_with_suggestions","text":"Build suggestion groups organized concept","code":""},{"path":"https://jrwinget.github.io/bidux/reference/build_groups_with_suggestions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build suggestion groups organized by concept — build_groups_with_suggestions","text":"","code":"build_groups_with_suggestions(concepts_final, chosen_layout, previous_stage)"},{"path":"https://jrwinget.github.io/bidux/reference/build_groups_with_suggestions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build suggestion groups organized by concept — build_groups_with_suggestions","text":"concepts_final Final list concepts generate suggestions chosen_layout Selected layout type previous_stage Previous stage data context","code":""},{"path":"https://jrwinget.github.io/bidux/reference/build_groups_with_suggestions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build suggestion groups organized by concept — build_groups_with_suggestions","text":"List concept groups suggestions","code":""},{"path":"https://jrwinget.github.io/bidux/reference/create_confusion_notice.html","id":null,"dir":"Reference","previous_headings":"","what":"Create notice stage for confusion patterns — create_confusion_notice","title":"Create notice stage for confusion patterns — create_confusion_notice","text":"Create notice stage confusion patterns","code":""},{"path":"https://jrwinget.github.io/bidux/reference/create_confusion_notice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create notice stage for confusion patterns — create_confusion_notice","text":"","code":"create_confusion_notice(confusion_info, total_sessions)"},{"path":"https://jrwinget.github.io/bidux/reference/create_confusion_notice.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create notice stage for confusion patterns — create_confusion_notice","text":"confusion_info List confusion pattern information total_sessions Total number sessions","code":""},{"path":"https://jrwinget.github.io/bidux/reference/create_confusion_notice.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create notice stage for confusion patterns — create_confusion_notice","text":"bid_stage object","code":""},{"path":"https://jrwinget.github.io/bidux/reference/create_delay_notice.html","id":null,"dir":"Reference","previous_headings":"","what":"Create notice stage for delayed interactions — create_delay_notice","title":"Create notice stage for delayed interactions — create_delay_notice","text":"Create notice stage delayed interactions","code":""},{"path":"https://jrwinget.github.io/bidux/reference/create_delay_notice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create notice stage for delayed interactions — create_delay_notice","text":"","code":"create_delay_notice(delay_info, total_sessions, threshold)"},{"path":"https://jrwinget.github.io/bidux/reference/create_delay_notice.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create notice stage for delayed interactions — create_delay_notice","text":"delay_info List delay statistics total_sessions Total number sessions threshold Threshold used analysis","code":""},{"path":"https://jrwinget.github.io/bidux/reference/create_delay_notice.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create notice stage for delayed interactions — create_delay_notice","text":"bid_stage object","code":""},{"path":"https://jrwinget.github.io/bidux/reference/create_error_notice.html","id":null,"dir":"Reference","previous_headings":"","what":"Create notice stage for error patterns — create_error_notice","title":"Create notice stage for error patterns — create_error_notice","text":"Create notice stage error patterns","code":""},{"path":"https://jrwinget.github.io/bidux/reference/create_error_notice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create notice stage for error patterns — create_error_notice","text":"","code":"create_error_notice(error_info, total_sessions)"},{"path":"https://jrwinget.github.io/bidux/reference/create_error_notice.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create notice stage for error patterns — create_error_notice","text":"error_info List error pattern information total_sessions Total number sessions","code":""},{"path":"https://jrwinget.github.io/bidux/reference/create_error_notice.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create notice stage for error patterns — create_error_notice","text":"bid_stage object","code":""},{"path":"https://jrwinget.github.io/bidux/reference/create_navigation_notice.html","id":null,"dir":"Reference","previous_headings":"","what":"Create notice stage for navigation issues — create_navigation_notice","title":"Create notice stage for navigation issues — create_navigation_notice","text":"Create notice stage navigation issues","code":""},{"path":"https://jrwinget.github.io/bidux/reference/create_navigation_notice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create notice stage for navigation issues — create_navigation_notice","text":"","code":"create_navigation_notice(nav_info, total_sessions)"},{"path":"https://jrwinget.github.io/bidux/reference/create_navigation_notice.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create notice stage for navigation issues — create_navigation_notice","text":"nav_info List navigation pattern information total_sessions Total number sessions","code":""},{"path":"https://jrwinget.github.io/bidux/reference/create_navigation_notice.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create notice stage for navigation issues — create_navigation_notice","text":"bid_stage object","code":""},{"path":"https://jrwinget.github.io/bidux/reference/create_unused_input_notice.html","id":null,"dir":"Reference","previous_headings":"","what":"Create notice stage for unused input — create_unused_input_notice","title":"Create notice stage for unused input — create_unused_input_notice","text":"Create notice stage unused input","code":""},{"path":"https://jrwinget.github.io/bidux/reference/create_unused_input_notice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create notice stage for unused input — create_unused_input_notice","text":"","code":"create_unused_input_notice(input_info, total_sessions)"},{"path":"https://jrwinget.github.io/bidux/reference/create_unused_input_notice.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create notice stage for unused input — create_unused_input_notice","text":"input_info List input usage information total_sessions Total number sessions","code":""},{"path":"https://jrwinget.github.io/bidux/reference/create_unused_input_notice.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create notice stage for unused input — create_unused_input_notice","text":"bid_stage object","code":""},{"path":"https://jrwinget.github.io/bidux/reference/detect_telemetry_format.html","id":null,"dir":"Reference","previous_headings":"","what":"Auto-detect telemetry format from file extension — detect_telemetry_format","title":"Auto-detect telemetry format from file extension — detect_telemetry_format","text":"Auto-detect telemetry format file extension","code":""},{"path":"https://jrwinget.github.io/bidux/reference/detect_telemetry_format.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Auto-detect telemetry format from file extension — detect_telemetry_format","text":"","code":"detect_telemetry_format(path)"},{"path":"https://jrwinget.github.io/bidux/reference/detect_telemetry_format.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Auto-detect telemetry format from file extension — detect_telemetry_format","text":"path File path","code":""},{"path":"https://jrwinget.github.io/bidux/reference/detect_telemetry_format.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Auto-detect telemetry format from file extension — detect_telemetry_format","text":"Format string (\"sqlite\" \"json\")","code":""},{"path":"https://jrwinget.github.io/bidux/reference/extract_stage.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract specific stage from bid_result — extract_stage","title":"Extract specific stage from bid_result — extract_stage","text":"Extract specific stage bid_result","code":""},{"path":"https://jrwinget.github.io/bidux/reference/extract_stage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract specific stage from bid_result — extract_stage","text":"","code":"extract_stage(workflow, stage)"},{"path":"https://jrwinget.github.io/bidux/reference/extract_stage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract specific stage from bid_result — extract_stage","text":"workflow bid_result object stage Character string stage name","code":""},{"path":"https://jrwinget.github.io/bidux/reference/extract_stage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract specific stage from bid_result — extract_stage","text":"bid_stage object NULL found","code":""},{"path":"https://jrwinget.github.io/bidux/reference/extract_stage1_theory.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract theory concepts from Stage 1 (Notice) — extract_stage1_theory","title":"Extract theory concepts from Stage 1 (Notice) — extract_stage1_theory","text":"Extract theory concepts Stage 1 (Notice)","code":""},{"path":"https://jrwinget.github.io/bidux/reference/extract_stage1_theory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract theory concepts from Stage 1 (Notice) — extract_stage1_theory","text":"","code":"extract_stage1_theory(previous_stage)"},{"path":"https://jrwinget.github.io/bidux/reference/extract_stage1_theory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract theory concepts from Stage 1 (Notice) — extract_stage1_theory","text":"previous_stage Previous stage data","code":""},{"path":"https://jrwinget.github.io/bidux/reference/extract_stage1_theory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract theory concepts from Stage 1 (Notice) — extract_stage1_theory","text":"Character vector theory-based concepts","code":""},{"path":"https://jrwinget.github.io/bidux/reference/find_confusion_patterns.html","id":null,"dir":"Reference","previous_headings":"","what":"Find confusion patterns (rapid repeated changes) — find_confusion_patterns","title":"Find confusion patterns (rapid repeated changes) — find_confusion_patterns","text":"Find confusion patterns (rapid repeated changes)","code":""},{"path":"https://jrwinget.github.io/bidux/reference/find_confusion_patterns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find confusion patterns (rapid repeated changes) — find_confusion_patterns","text":"","code":"find_confusion_patterns(events, window_seconds = 10, min_changes = 5)"},{"path":"https://jrwinget.github.io/bidux/reference/find_confusion_patterns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find confusion patterns (rapid repeated changes) — find_confusion_patterns","text":"events Telemetry events data frame window_seconds Time window seconds min_changes Minimum changes flag confusion","code":""},{"path":"https://jrwinget.github.io/bidux/reference/find_confusion_patterns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find confusion patterns (rapid repeated changes) — find_confusion_patterns","text":"List confusion patterns","code":""},{"path":"https://jrwinget.github.io/bidux/reference/find_delayed_sessions.html","id":null,"dir":"Reference","previous_headings":"","what":"Find sessions with delayed first interaction — find_delayed_sessions","title":"Find sessions with delayed first interaction — find_delayed_sessions","text":"Find sessions delayed first interaction","code":""},{"path":"https://jrwinget.github.io/bidux/reference/find_delayed_sessions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find sessions with delayed first interaction — find_delayed_sessions","text":"","code":"find_delayed_sessions(events, threshold_seconds = 30)"},{"path":"https://jrwinget.github.io/bidux/reference/find_delayed_sessions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find sessions with delayed first interaction — find_delayed_sessions","text":"events Telemetry events data frame threshold_seconds Delay threshold seconds","code":""},{"path":"https://jrwinget.github.io/bidux/reference/find_delayed_sessions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find sessions with delayed first interaction — find_delayed_sessions","text":"List delay statistics","code":""},{"path":"https://jrwinget.github.io/bidux/reference/find_error_patterns.html","id":null,"dir":"Reference","previous_headings":"","what":"Find error patterns in telemetry — find_error_patterns","title":"Find error patterns in telemetry — find_error_patterns","text":"Find error patterns telemetry","code":""},{"path":"https://jrwinget.github.io/bidux/reference/find_error_patterns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find error patterns in telemetry — find_error_patterns","text":"","code":"find_error_patterns(events, threshold_rate = 0.1)"},{"path":"https://jrwinget.github.io/bidux/reference/find_error_patterns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find error patterns in telemetry — find_error_patterns","text":"events Telemetry events data frame threshold_rate Error rate threshold","code":""},{"path":"https://jrwinget.github.io/bidux/reference/find_error_patterns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find error patterns in telemetry — find_error_patterns","text":"List error patterns","code":""},{"path":"https://jrwinget.github.io/bidux/reference/find_navigation_dropoffs.html","id":null,"dir":"Reference","previous_headings":"","what":"Find navigation drop-offs or underused pages — find_navigation_dropoffs","title":"Find navigation drop-offs or underused pages — find_navigation_dropoffs","text":"Find navigation drop-offs underused pages","code":""},{"path":"https://jrwinget.github.io/bidux/reference/find_navigation_dropoffs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find navigation drop-offs or underused pages — find_navigation_dropoffs","text":"","code":"find_navigation_dropoffs(events, threshold = 0.2)"},{"path":"https://jrwinget.github.io/bidux/reference/find_navigation_dropoffs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find navigation drop-offs or underused pages — find_navigation_dropoffs","text":"events Telemetry events data frame threshold Minimum visit rate threshold","code":""},{"path":"https://jrwinget.github.io/bidux/reference/find_navigation_dropoffs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find navigation drop-offs or underused pages — find_navigation_dropoffs","text":"List navigation issues","code":""},{"path":"https://jrwinget.github.io/bidux/reference/find_unused_inputs.html","id":null,"dir":"Reference","previous_headings":"","what":"Find unused or under-used inputs — find_unused_inputs","title":"Find unused or under-used inputs — find_unused_inputs","text":"Find unused -used inputs","code":""},{"path":"https://jrwinget.github.io/bidux/reference/find_unused_inputs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find unused or under-used inputs — find_unused_inputs","text":"","code":"find_unused_inputs(events, threshold = 0.05)"},{"path":"https://jrwinget.github.io/bidux/reference/find_unused_inputs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find unused or under-used inputs — find_unused_inputs","text":"events Telemetry events data frame threshold Percentage threshold considering input unused","code":""},{"path":"https://jrwinget.github.io/bidux/reference/find_unused_inputs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find unused or under-used inputs — find_unused_inputs","text":"List unused input information","code":""},{"path":"https://jrwinget.github.io/bidux/reference/format_label.html","id":null,"dir":"Reference","previous_headings":"","what":"Format field label based on output format — format_label","title":"Format field label based on output format — format_label","text":"Format field label based output format","code":""},{"path":"https://jrwinget.github.io/bidux/reference/format_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format field label based on output format — format_label","text":"","code":"format_label(label, format, type = \"field\")"},{"path":"https://jrwinget.github.io/bidux/reference/format_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format field label based on output format — format_label","text":"label Base label text format Output format (\"markdown\" \"text\") type Label type (\"header\", \"field\", \"section\")","code":""},{"path":"https://jrwinget.github.io/bidux/reference/format_label.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format field label based on output format — format_label","text":"Formatted label string","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_accessibility_recommendations.html","id":null,"dir":"Reference","previous_headings":"","what":"Get accessibility recommendations for a given context — get_accessibility_recommendations","title":"Get accessibility recommendations for a given context — get_accessibility_recommendations","text":"Get accessibility recommendations given context","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_accessibility_recommendations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get accessibility recommendations for a given context — get_accessibility_recommendations","text":"","code":"get_accessibility_recommendations(context = \"\", guidelines = NULL)"},{"path":"https://jrwinget.github.io/bidux/reference/get_accessibility_recommendations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get accessibility recommendations for a given context — get_accessibility_recommendations","text":"context Character string describing interface context guidelines Optional custom accessibility guidelines","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_accessibility_recommendations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get accessibility recommendations for a given context — get_accessibility_recommendations","text":"Character vector relevant accessibility recommendations","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_cognitive_load_suggestions.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Cognitive Load Theory suggestions — get_cognitive_load_suggestions","title":"Generate Cognitive Load Theory suggestions — get_cognitive_load_suggestions","text":"Generate Cognitive Load Theory suggestions","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_cognitive_load_suggestions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Cognitive Load Theory suggestions — get_cognitive_load_suggestions","text":"","code":"get_cognitive_load_suggestions(chosen_layout, previous_stage)"},{"path":"https://jrwinget.github.io/bidux/reference/get_concept_bias_mappings.html","id":null,"dir":"Reference","previous_headings":"","what":"Get bias mitigation strategies for concepts — get_concept_bias_mappings","title":"Get bias mitigation strategies for concepts — get_concept_bias_mappings","text":"Get bias mitigation strategies concepts","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_concept_bias_mappings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get bias mitigation strategies for concepts — get_concept_bias_mappings","text":"","code":"get_concept_bias_mappings(concepts, mappings = NULL)"},{"path":"https://jrwinget.github.io/bidux/reference/get_concept_bias_mappings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get bias mitigation strategies for concepts — get_concept_bias_mappings","text":"concepts Character vector concept names mappings Optional custom concept-bias mappings","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_concept_bias_mappings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get bias mitigation strategies for concepts — get_concept_bias_mappings","text":"Data frame relevant bias mappings","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_concepts_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function to get concepts data from external files — get_concepts_data","title":"Internal function to get concepts data from external files — get_concepts_data","text":"Internal function get concepts data external files","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_concepts_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function to get concepts data from external files — get_concepts_data","text":"","code":"get_concepts_data()"},{"path":"https://jrwinget.github.io/bidux/reference/get_concepts_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal function to get concepts data from external files — get_concepts_data","text":"tibble BID framework concepts","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_default_concepts_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get default concepts data (fallback when external file unavailable) — get_default_concepts_data","title":"Get default concepts data (fallback when external file unavailable) — get_default_concepts_data","text":"Get default concepts data (fallback external file unavailable)","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_default_concepts_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get default concepts data (fallback when external file unavailable) — get_default_concepts_data","text":"","code":"get_default_concepts_data()"},{"path":"https://jrwinget.github.io/bidux/reference/get_default_concepts_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get default concepts data (fallback when external file unavailable) — get_default_concepts_data","text":"tibble default BID framework concepts","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_default_layout_mappings.html","id":null,"dir":"Reference","previous_headings":"","what":"Get default layout mappings (fallback) — get_default_layout_mappings","title":"Get default layout mappings (fallback) — get_default_layout_mappings","text":"Get default layout mappings (fallback)","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_default_layout_mappings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get default layout mappings (fallback) — get_default_layout_mappings","text":"","code":"get_default_layout_mappings()"},{"path":"https://jrwinget.github.io/bidux/reference/get_default_layout_mappings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get default layout mappings (fallback) — get_default_layout_mappings","text":"Data frame default layout mappings","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_default_theory_mappings.html","id":null,"dir":"Reference","previous_headings":"","what":"Get default theory mappings (fallback) — get_default_theory_mappings","title":"Get default theory mappings (fallback) — get_default_theory_mappings","text":"Get default theory mappings (fallback)","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_default_theory_mappings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get default theory mappings (fallback) — get_default_theory_mappings","text":"","code":"get_default_theory_mappings()"},{"path":"https://jrwinget.github.io/bidux/reference/get_default_theory_mappings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get default theory mappings (fallback) — get_default_theory_mappings","text":"Data frame default theory mappings","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_dual_processing_suggestions.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Dual-Processing Theory suggestions — get_dual_processing_suggestions","title":"Generate Dual-Processing Theory suggestions — get_dual_processing_suggestions","text":"Generate Dual-Processing Theory suggestions","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_dual_processing_suggestions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Dual-Processing Theory suggestions — get_dual_processing_suggestions","text":"","code":"get_dual_processing_suggestions(chosen_layout, previous_stage)"},{"path":"https://jrwinget.github.io/bidux/reference/get_generic_suggestions.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate generic suggestions for unrecognized concepts — get_generic_suggestions","title":"Generate generic suggestions for unrecognized concepts — get_generic_suggestions","text":"Generate generic suggestions unrecognized concepts","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_generic_suggestions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate generic suggestions for unrecognized concepts — get_generic_suggestions","text":"","code":"get_generic_suggestions(concept, chosen_layout, previous_stage)"},{"path":"https://jrwinget.github.io/bidux/reference/get_information_scent_suggestions.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Information Scent suggestions — get_information_scent_suggestions","title":"Generate Information Scent suggestions — get_information_scent_suggestions","text":"Generate Information Scent suggestions","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_information_scent_suggestions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Information Scent suggestions — get_information_scent_suggestions","text":"","code":"get_information_scent_suggestions(chosen_layout, previous_stage)"},{"path":"https://jrwinget.github.io/bidux/reference/get_layout_concepts.html","id":null,"dir":"Reference","previous_headings":"","what":"Get concepts recommended for a layout — get_layout_concepts","title":"Get concepts recommended for a layout — get_layout_concepts","text":"Get concepts recommended layout","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_layout_concepts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get concepts recommended for a layout — get_layout_concepts","text":"","code":"get_layout_concepts(layout, mappings = NULL)"},{"path":"https://jrwinget.github.io/bidux/reference/get_layout_concepts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get concepts recommended for a layout — get_layout_concepts","text":"layout Character string indicating layout type mappings Optional custom layout mappings","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_layout_concepts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get concepts recommended for a layout — get_layout_concepts","text":"Character vector recommended concepts","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Get metadata from bid_stage object — get_metadata","title":"Get metadata from bid_stage object — get_metadata","text":"Get metadata bid_stage object","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get metadata from bid_stage object — get_metadata","text":"","code":"get_metadata(x)"},{"path":"https://jrwinget.github.io/bidux/reference/get_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get metadata from bid_stage object — get_metadata","text":"x bid_stage object","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get metadata from bid_stage object — get_metadata","text":"List metadata","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_onboarding_suggestions.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate User Onboarding suggestions — get_onboarding_suggestions","title":"Generate User Onboarding suggestions — get_onboarding_suggestions","text":"Generate User Onboarding suggestions","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_onboarding_suggestions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate User Onboarding suggestions — get_onboarding_suggestions","text":"","code":"get_onboarding_suggestions(chosen_layout, previous_stage)"},{"path":"https://jrwinget.github.io/bidux/reference/get_progressive_disclosure_suggestions.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Progressive Disclosure suggestions — get_progressive_disclosure_suggestions","title":"Generate Progressive Disclosure suggestions — get_progressive_disclosure_suggestions","text":"Generate Progressive Disclosure suggestions","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_progressive_disclosure_suggestions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Progressive Disclosure suggestions — get_progressive_disclosure_suggestions","text":"","code":"get_progressive_disclosure_suggestions(chosen_layout, previous_stage)"},{"path":"https://jrwinget.github.io/bidux/reference/get_proximity_suggestions.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Principle of Proximity suggestions — get_proximity_suggestions","title":"Generate Principle of Proximity suggestions — get_proximity_suggestions","text":"Generate Principle Proximity suggestions","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_proximity_suggestions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Principle of Proximity suggestions — get_proximity_suggestions","text":"","code":"get_proximity_suggestions(chosen_layout, previous_stage)"},{"path":"https://jrwinget.github.io/bidux/reference/get_stage.html","id":null,"dir":"Reference","previous_headings":"","what":"Get stage name from bid_stage object — get_stage","title":"Get stage name from bid_stage object — get_stage","text":"Get stage name bid_stage object","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_stage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get stage name from bid_stage object — get_stage","text":"","code":"get_stage(x)"},{"path":"https://jrwinget.github.io/bidux/reference/get_stage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get stage name from bid_stage object — get_stage","text":"x bid_stage object","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_stage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get stage name from bid_stage object — get_stage","text":"Character string stage name","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_visual_hierarchy_suggestions.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Visual Hierarchy suggestions — get_visual_hierarchy_suggestions","title":"Generate Visual Hierarchy suggestions — get_visual_hierarchy_suggestions","text":"Generate Visual Hierarchy suggestions","code":""},{"path":"https://jrwinget.github.io/bidux/reference/get_visual_hierarchy_suggestions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Visual Hierarchy suggestions — get_visual_hierarchy_suggestions","text":"","code":"get_visual_hierarchy_suggestions(chosen_layout, previous_stage)"},{"path":"https://jrwinget.github.io/bidux/reference/infer_concepts_from_story.html","id":null,"dir":"Reference","previous_headings":"","what":"Infer concepts from Stage 2 (Interpret) story elements — infer_concepts_from_story","title":"Infer concepts from Stage 2 (Interpret) story elements — infer_concepts_from_story","text":"Infer concepts Stage 2 (Interpret) story elements","code":""},{"path":"https://jrwinget.github.io/bidux/reference/infer_concepts_from_story.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Infer concepts from Stage 2 (Interpret) story elements — infer_concepts_from_story","text":"","code":"infer_concepts_from_story(previous_stage)"},{"path":"https://jrwinget.github.io/bidux/reference/infer_concepts_from_story.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Infer concepts from Stage 2 (Interpret) story elements — infer_concepts_from_story","text":"previous_stage Previous stage data","code":""},{"path":"https://jrwinget.github.io/bidux/reference/infer_concepts_from_story.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Infer concepts from Stage 2 (Interpret) story elements — infer_concepts_from_story","text":"Character vector story-inferred concepts","code":""},{"path":"https://jrwinget.github.io/bidux/reference/is_bid_stage.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if object is a bid_stage — is_bid_stage","title":"Check if object is a bid_stage — is_bid_stage","text":"Check object bid_stage","code":""},{"path":"https://jrwinget.github.io/bidux/reference/is_bid_stage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if object is a bid_stage — is_bid_stage","text":"","code":"is_bid_stage(x)"},{"path":"https://jrwinget.github.io/bidux/reference/is_bid_stage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if object is a bid_stage — is_bid_stage","text":"x Object test","code":""},{"path":"https://jrwinget.github.io/bidux/reference/is_bid_stage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if object is a bid_stage — is_bid_stage","text":"Logical indicating object bid_stage","code":""},{"path":"https://jrwinget.github.io/bidux/reference/is_complete.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if workflow is complete (has all 5 stages) — is_complete","title":"Check if workflow is complete (has all 5 stages) — is_complete","text":"Check workflow complete (5 stages)","code":""},{"path":"https://jrwinget.github.io/bidux/reference/is_complete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if workflow is complete (has all 5 stages) — is_complete","text":"","code":"is_complete(x)"},{"path":"https://jrwinget.github.io/bidux/reference/is_complete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if workflow is complete (has all 5 stages) — is_complete","text":"x bid_result object","code":""},{"path":"https://jrwinget.github.io/bidux/reference/is_complete.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if workflow is complete (has all 5 stages) — is_complete","text":"Logical indicating workflow complete","code":""},{"path":"https://jrwinget.github.io/bidux/reference/layout_rationale.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate layout selection rationale — layout_rationale","title":"Generate layout selection rationale — layout_rationale","text":"Provides concise explanation particular layout chosen based content analysis previous stage.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/layout_rationale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate layout selection rationale — layout_rationale","text":"","code":"layout_rationale(previous_stage, chosen)"},{"path":"https://jrwinget.github.io/bidux/reference/layout_rationale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate layout selection rationale — layout_rationale","text":"previous_stage tibble list output earlier BID stage chosen Character string chosen layout type","code":""},{"path":"https://jrwinget.github.io/bidux/reference/layout_rationale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate layout selection rationale — layout_rationale","text":"Character string explanation layout choice","code":""},{"path":"https://jrwinget.github.io/bidux/reference/load_accessibility_guidelines.html","id":null,"dir":"Reference","previous_headings":"","what":"Load accessibility guidelines — load_accessibility_guidelines","title":"Load accessibility guidelines — load_accessibility_guidelines","text":"Load accessibility guidelines","code":""},{"path":"https://jrwinget.github.io/bidux/reference/load_accessibility_guidelines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load accessibility guidelines — load_accessibility_guidelines","text":"","code":"load_accessibility_guidelines(custom_guidelines = NULL)"},{"path":"https://jrwinget.github.io/bidux/reference/load_accessibility_guidelines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load accessibility guidelines — load_accessibility_guidelines","text":"custom_guidelines Optional custom guidelines data frame","code":""},{"path":"https://jrwinget.github.io/bidux/reference/load_accessibility_guidelines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load accessibility guidelines — load_accessibility_guidelines","text":"Data frame accessibility guidelines","code":""},{"path":"https://jrwinget.github.io/bidux/reference/load_concept_bias_mappings.html","id":null,"dir":"Reference","previous_headings":"","what":"Load concept-bias mappings — load_concept_bias_mappings","title":"Load concept-bias mappings — load_concept_bias_mappings","text":"Load concept-bias mappings","code":""},{"path":"https://jrwinget.github.io/bidux/reference/load_concept_bias_mappings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load concept-bias mappings — load_concept_bias_mappings","text":"","code":"load_concept_bias_mappings(custom_mappings = NULL)"},{"path":"https://jrwinget.github.io/bidux/reference/load_concept_bias_mappings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load concept-bias mappings — load_concept_bias_mappings","text":"custom_mappings Optional custom mappings data frame","code":""},{"path":"https://jrwinget.github.io/bidux/reference/load_concept_bias_mappings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load concept-bias mappings — load_concept_bias_mappings","text":"Data frame concept-bias mappings","code":""},{"path":"https://jrwinget.github.io/bidux/reference/load_layout_mappings.html","id":null,"dir":"Reference","previous_headings":"","what":"Load layout-concept mappings — load_layout_mappings","title":"Load layout-concept mappings — load_layout_mappings","text":"Load layout-concept mappings","code":""},{"path":"https://jrwinget.github.io/bidux/reference/load_layout_mappings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load layout-concept mappings — load_layout_mappings","text":"","code":"load_layout_mappings(custom_mappings = NULL)"},{"path":"https://jrwinget.github.io/bidux/reference/load_layout_mappings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load layout-concept mappings — load_layout_mappings","text":"custom_mappings Optional custom mappings data frame","code":""},{"path":"https://jrwinget.github.io/bidux/reference/load_layout_mappings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load layout-concept mappings — load_layout_mappings","text":"Data frame layout-concept mappings","code":""},{"path":"https://jrwinget.github.io/bidux/reference/load_theory_mappings.html","id":null,"dir":"Reference","previous_headings":"","what":"Load theory mappings from external file or use defaults — load_theory_mappings","title":"Load theory mappings from external file or use defaults — load_theory_mappings","text":"Load theory mappings external file use defaults","code":""},{"path":"https://jrwinget.github.io/bidux/reference/load_theory_mappings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load theory mappings from external file or use defaults — load_theory_mappings","text":"","code":"load_theory_mappings(custom_mappings = NULL)"},{"path":"https://jrwinget.github.io/bidux/reference/load_theory_mappings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load theory mappings from external file or use defaults — load_theory_mappings","text":"custom_mappings Optional custom mappings data frame","code":""},{"path":"https://jrwinget.github.io/bidux/reference/load_theory_mappings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load theory mappings from external file or use defaults — load_theory_mappings","text":"Data frame theory mappings","code":""},{"path":"https://jrwinget.github.io/bidux/reference/new_bid_result.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a BID result collection object (internal constructor) — new_bid_result","title":"Create a BID result collection object (internal constructor) — new_bid_result","text":"Create BID result collection object (internal constructor)","code":""},{"path":"https://jrwinget.github.io/bidux/reference/new_bid_result.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a BID result collection object (internal constructor) — new_bid_result","text":"","code":"new_bid_result(stages)"},{"path":"https://jrwinget.github.io/bidux/reference/new_bid_result.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a BID result collection object (internal constructor) — new_bid_result","text":"stages List bid_stage objects","code":""},{"path":"https://jrwinget.github.io/bidux/reference/new_bid_result.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a BID result collection object (internal constructor) — new_bid_result","text":"Object class 'bid_result'","code":""},{"path":"https://jrwinget.github.io/bidux/reference/new_bid_stage.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a BID stage result object (internal constructor) — new_bid_stage","title":"Create a BID stage result object (internal constructor) — new_bid_stage","text":"Create BID stage result object (internal constructor)","code":""},{"path":"https://jrwinget.github.io/bidux/reference/new_bid_stage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a BID stage result object (internal constructor) — new_bid_stage","text":"","code":"new_bid_stage(stage, data, metadata = list())"},{"path":"https://jrwinget.github.io/bidux/reference/new_bid_stage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a BID stage result object (internal constructor) — new_bid_stage","text":"stage Character string indicating stage name data Tibble containing stage data metadata List containing additional metadata","code":""},{"path":"https://jrwinget.github.io/bidux/reference/new_bid_stage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a BID stage result object (internal constructor) — new_bid_stage","text":"Object class 'bid_stage'","code":""},{"path":"https://jrwinget.github.io/bidux/reference/normalize_telemetry_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize telemetry column names — normalize_telemetry_columns","title":"Normalize telemetry column names — normalize_telemetry_columns","text":"Normalize telemetry column names","code":""},{"path":"https://jrwinget.github.io/bidux/reference/normalize_telemetry_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize telemetry column names — normalize_telemetry_columns","text":"","code":"normalize_telemetry_columns(events)"},{"path":"https://jrwinget.github.io/bidux/reference/normalize_telemetry_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize telemetry column names — normalize_telemetry_columns","text":"events Raw events data frame","code":""},{"path":"https://jrwinget.github.io/bidux/reference/normalize_telemetry_columns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize telemetry column names — normalize_telemetry_columns","text":"Normalized data frame","code":""},{"path":"https://jrwinget.github.io/bidux/reference/print.bid_result.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for BID result objects — print.bid_result","title":"Print method for BID result objects — print.bid_result","text":"Print method BID result objects","code":""},{"path":"https://jrwinget.github.io/bidux/reference/print.bid_result.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for BID result objects — print.bid_result","text":"","code":"# S3 method for class 'bid_result' print(x, ...)"},{"path":"https://jrwinget.github.io/bidux/reference/print.bid_result.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for BID result objects — print.bid_result","text":"x bid_result object ... Additional arguments","code":""},{"path":"https://jrwinget.github.io/bidux/reference/print.bid_result.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print method for BID result objects — print.bid_result","text":"Returns input bid_result object invisibly (class: c(\"bid_result\", \"list\")). method called side effects: printing workflow overview console showing completion status, stage progression, key information completed BID stage. invisible return supports method chaining emphasizing console summary output.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/print.bid_stage.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for BID stage objects — print.bid_stage","title":"Print method for BID stage objects — print.bid_stage","text":"Print method BID stage objects","code":""},{"path":"https://jrwinget.github.io/bidux/reference/print.bid_stage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for BID stage objects — print.bid_stage","text":"","code":"# S3 method for class 'bid_stage' print(x, ...)"},{"path":"https://jrwinget.github.io/bidux/reference/print.bid_stage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for BID stage objects — print.bid_stage","text":"x bid_stage object ... Additional arguments","code":""},{"path":"https://jrwinget.github.io/bidux/reference/print.bid_stage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print method for BID stage objects — print.bid_stage","text":"Returns input bid_stage object invisibly (class: c(\"bid_stage\", \"tbl_df\", \"tbl\", \"data.frame\")). method called side effects: printing formatted summary BID stage console, including stage progress, key stage-specific information, usage suggestions. invisible return allows method chaining maintaining primary purpose console output.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/rank_and_sort_suggestions.html","id":null,"dir":"Reference","previous_headings":"","what":"Rank and sort suggestions within each group — rank_and_sort_suggestions","title":"Rank and sort suggestions within each group — rank_and_sort_suggestions","text":"Rank sort suggestions within group","code":""},{"path":"https://jrwinget.github.io/bidux/reference/rank_and_sort_suggestions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rank and sort suggestions within each group — rank_and_sort_suggestions","text":"","code":"rank_and_sort_suggestions(groups, previous_stage, chosen_layout)"},{"path":"https://jrwinget.github.io/bidux/reference/rank_and_sort_suggestions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rank and sort suggestions within each group — rank_and_sort_suggestions","text":"groups List concept groups suggestions previous_stage Previous stage data scoring adjustments chosen_layout Selected layout type","code":""},{"path":"https://jrwinget.github.io/bidux/reference/rank_and_sort_suggestions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rank and sort suggestions within each group — rank_and_sort_suggestions","text":"List groups ranked suggestions","code":""},{"path":"https://jrwinget.github.io/bidux/reference/read_telemetry_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Read telemetry data from file — read_telemetry_data","title":"Read telemetry data from file — read_telemetry_data","text":"Read telemetry data file","code":""},{"path":"https://jrwinget.github.io/bidux/reference/read_telemetry_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read telemetry data from file — read_telemetry_data","text":"","code":"read_telemetry_data(path, format)"},{"path":"https://jrwinget.github.io/bidux/reference/read_telemetry_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read telemetry data from file — read_telemetry_data","text":"path File path format Format (\"sqlite\" \"json\")","code":""},{"path":"https://jrwinget.github.io/bidux/reference/read_telemetry_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read telemetry data from file — read_telemetry_data","text":"Data frame events","code":""},{"path":"https://jrwinget.github.io/bidux/reference/read_telemetry_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Read telemetry from JSON log file — read_telemetry_json","title":"Read telemetry from JSON log file — read_telemetry_json","text":"Read telemetry JSON log file","code":""},{"path":"https://jrwinget.github.io/bidux/reference/read_telemetry_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read telemetry from JSON log file — read_telemetry_json","text":"","code":"read_telemetry_json(path)"},{"path":"https://jrwinget.github.io/bidux/reference/read_telemetry_json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read telemetry from JSON log file — read_telemetry_json","text":"path JSON log file path","code":""},{"path":"https://jrwinget.github.io/bidux/reference/read_telemetry_json.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read telemetry from JSON log file — read_telemetry_json","text":"Data frame events","code":""},{"path":"https://jrwinget.github.io/bidux/reference/read_telemetry_sqlite.html","id":null,"dir":"Reference","previous_headings":"","what":"Read telemetry from SQLite database — read_telemetry_sqlite","title":"Read telemetry from SQLite database — read_telemetry_sqlite","text":"Read telemetry SQLite database","code":""},{"path":"https://jrwinget.github.io/bidux/reference/read_telemetry_sqlite.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read telemetry from SQLite database — read_telemetry_sqlite","text":"","code":"read_telemetry_sqlite(path)"},{"path":"https://jrwinget.github.io/bidux/reference/read_telemetry_sqlite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read telemetry from SQLite database — read_telemetry_sqlite","text":"path SQLite database path","code":""},{"path":"https://jrwinget.github.io/bidux/reference/read_telemetry_sqlite.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read telemetry from SQLite database — read_telemetry_sqlite","text":"Data frame events","code":""},{"path":"https://jrwinget.github.io/bidux/reference/safe_lower.html","id":null,"dir":"Reference","previous_headings":"","what":"Safely convert text to lowercase with null handling — safe_lower","title":"Safely convert text to lowercase with null handling — safe_lower","text":"Helper function safely converts text lowercase handling NULL, NA, non-character values gracefully.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/safe_lower.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Safely convert text to lowercase with null handling — safe_lower","text":"","code":"safe_lower(x)"},{"path":"https://jrwinget.github.io/bidux/reference/safe_lower.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Safely convert text to lowercase with null handling — safe_lower","text":"x Input value convert lowercase string","code":""},{"path":"https://jrwinget.github.io/bidux/reference/safe_lower.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Safely convert text to lowercase with null handling — safe_lower","text":"Character string lowercase, empty string input NULL/NA","code":""},{"path":"https://jrwinget.github.io/bidux/reference/safe_stage_data_story_access.html","id":null,"dir":"Reference","previous_headings":"","what":"Safe access to data_story elements from previous stage — safe_stage_data_story_access","title":"Safe access to data_story elements from previous stage — safe_stage_data_story_access","text":"Safe access data_story elements previous stage","code":""},{"path":"https://jrwinget.github.io/bidux/reference/safe_stage_data_story_access.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Safe access to data_story elements from previous stage — safe_stage_data_story_access","text":"","code":"safe_stage_data_story_access(previous_stage, element)"},{"path":"https://jrwinget.github.io/bidux/reference/safe_stage_data_story_access.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Safe access to data_story elements from previous stage — safe_stage_data_story_access","text":"previous_stage Previous stage data element Name data_story element access","code":""},{"path":"https://jrwinget.github.io/bidux/reference/safe_stage_data_story_access.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Safe access to data_story elements from previous stage — safe_stage_data_story_access","text":"Character string empty string found","code":""},{"path":"https://jrwinget.github.io/bidux/reference/structure_suggestions.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate ranked, concept-grouped, actionable UI/UX suggestions — structure_suggestions","title":"Generate ranked, concept-grouped, actionable UI/UX suggestions — structure_suggestions","text":"Creates structured suggestions organized UX concepts specific component recommendations rationales. Suggestions ranked relevance grouped concept systematic implementation.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/structure_suggestions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate ranked, concept-grouped, actionable UI/UX suggestions — structure_suggestions","text":"","code":"structure_suggestions(previous_stage, chosen_layout, concepts = NULL)"},{"path":"https://jrwinget.github.io/bidux/reference/structure_suggestions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate ranked, concept-grouped, actionable UI/UX suggestions — structure_suggestions","text":"previous_stage tibble list output earlier BID stage chosen_layout Character string selected layout type concepts Optional character vector additional concepts include","code":""},{"path":"https://jrwinget.github.io/bidux/reference/structure_suggestions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate ranked, concept-grouped, actionable UI/UX suggestions — structure_suggestions","text":"List concept groups ranked suggestions","code":""},{"path":"https://jrwinget.github.io/bidux/reference/structure_suggestions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate ranked, concept-grouped, actionable UI/UX suggestions — structure_suggestions","text":"function combines concepts multiple sources: Stage 1 theory (Notice) Stage 2 inferred concepts (keywords story) Optional user-provided concepts suggestion includes: title: Brief actionable description details: Specific implementation guidance components: Shiny/bslib component recommendations rationale: 1-2 sentence explanation score: Relevance ranking (0-1)","code":""},{"path":"https://jrwinget.github.io/bidux/reference/suggest_layout_from_previous.html","id":null,"dir":"Reference","previous_headings":"","what":"Suggest layout based on previous stage content using heuristics — suggest_layout_from_previous","title":"Suggest layout based on previous stage content using heuristics — suggest_layout_from_previous","text":"Automatically suggests appropriate layout type based content analysis previous BID stages. Uses deterministic heuristics match keywords problem descriptions, evidence, data story, contextual information layout types best address identified issues.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/suggest_layout_from_previous.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Suggest layout based on previous stage content using heuristics — suggest_layout_from_previous","text":"","code":"suggest_layout_from_previous(previous_stage)"},{"path":"https://jrwinget.github.io/bidux/reference/suggest_layout_from_previous.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Suggest layout based on previous stage content using heuristics — suggest_layout_from_previous","text":"previous_stage tibble list output earlier BID stage function containing stage data potential fields like problem, evidence, central_question, data_story, etc.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/suggest_layout_from_previous.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Suggest layout based on previous stage content using heuristics — suggest_layout_from_previous","text":"Character string indicating suggested layout type (\"breathable\", \"dual_process\", \"grid\", \"card\", \"tabs\", fallback)","code":""},{"path":"https://jrwinget.github.io/bidux/reference/suggest_layout_from_previous.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Suggest layout based on previous stage content using heuristics — suggest_layout_from_previous","text":"heuristics follow priority order: breathable - content suggests information overload, confusion, cognitive load issues dual_process - content mentions overview vs detail, quick vs deep, two-mode interactions grid - content focuses grouping, clustering, visual hierarchy, comparing related metrics card - content mentions cards, chunks, tiles, modular blocks, per-item summaries tabs - content suggests sections, categories, progressive disclosure, avoids tabs telemetry shows tab drop-breathable - fallback unmatched cases","code":""},{"path":"https://jrwinget.github.io/bidux/reference/suggest_theory_from_mappings.html","id":null,"dir":"Reference","previous_headings":"","what":"Suggest theory based on problem and evidence using mappings — suggest_theory_from_mappings","title":"Suggest theory based on problem and evidence using mappings — suggest_theory_from_mappings","text":"Suggest theory based problem evidence using mappings","code":""},{"path":"https://jrwinget.github.io/bidux/reference/suggest_theory_from_mappings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Suggest theory based on problem and evidence using mappings — suggest_theory_from_mappings","text":"","code":"suggest_theory_from_mappings(problem, evidence = NULL, mappings = NULL)"},{"path":"https://jrwinget.github.io/bidux/reference/suggest_theory_from_mappings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Suggest theory based on problem and evidence using mappings — suggest_theory_from_mappings","text":"problem Character string describing problem evidence Optional character string supporting evidence mappings Optional custom theory mappings","code":""},{"path":"https://jrwinget.github.io/bidux/reference/suggest_theory_from_mappings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Suggest theory based on problem and evidence using mappings — suggest_theory_from_mappings","text":"Character string suggested theory","code":""},{"path":"https://jrwinget.github.io/bidux/reference/summary.bid_result.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary method for BID result objects — summary.bid_result","title":"Summary method for BID result objects — summary.bid_result","text":"Summary method BID result objects","code":""},{"path":"https://jrwinget.github.io/bidux/reference/summary.bid_result.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary method for BID result objects — summary.bid_result","text":"","code":"# S3 method for class 'bid_result' summary(object, ...)"},{"path":"https://jrwinget.github.io/bidux/reference/summary.bid_result.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary method for BID result objects — summary.bid_result","text":"object bid_result object ... Additional arguments","code":""},{"path":"https://jrwinget.github.io/bidux/reference/summary.bid_result.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary method for BID result objects — summary.bid_result","text":"Returns input bid_result object invisibly (class: c(\"bid_result\", \"list\")). method called side effects: printing detailed workflow analysis console including completion statistics, duration metrics, comprehensive stage--stage breakdowns key data BID framework stage. invisible return facilitates method chaining focusing comprehensive console reporting.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/summary.bid_stage.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary method for BID stage objects — summary.bid_stage","title":"Summary method for BID stage objects — summary.bid_stage","text":"Summary method BID stage objects","code":""},{"path":"https://jrwinget.github.io/bidux/reference/summary.bid_stage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary method for BID stage objects — summary.bid_stage","text":"","code":"# S3 method for class 'bid_stage' summary(object, ...)"},{"path":"https://jrwinget.github.io/bidux/reference/summary.bid_stage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary method for BID stage objects — summary.bid_stage","text":"object bid_stage object ... Additional arguments","code":""},{"path":"https://jrwinget.github.io/bidux/reference/summary.bid_stage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary method for BID stage objects — summary.bid_stage","text":"Returns input bid_stage object invisibly (class: c(\"bid_stage\", \"tbl_df\", \"tbl\", \"data.frame\")). method called side effects: printing comprehensive summary console including stage metadata, non-empty data columns, timestamp information. invisible return enables method chaining prioritizing detailed console output display.","code":""},{"path":"https://jrwinget.github.io/bidux/reference/validate_bid_result.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate BID result object — validate_bid_result","title":"Validate BID result object — validate_bid_result","text":"Validate BID result object","code":""},{"path":"https://jrwinget.github.io/bidux/reference/validate_bid_result.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate BID result object — validate_bid_result","text":"","code":"validate_bid_result(x)"},{"path":"https://jrwinget.github.io/bidux/reference/validate_bid_result.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate BID result object — validate_bid_result","text":"x Object validate","code":""},{"path":"https://jrwinget.github.io/bidux/reference/validate_bid_result.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate BID result object — validate_bid_result","text":"TRUE valid, throws error otherwise","code":""},{"path":"https://jrwinget.github.io/bidux/reference/validate_bid_stage.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate BID stage object — validate_bid_stage","title":"Validate BID stage object — validate_bid_stage","text":"Validate BID stage object","code":""},{"path":"https://jrwinget.github.io/bidux/reference/validate_bid_stage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate BID stage object — validate_bid_stage","text":"","code":"validate_bid_stage(x)"},{"path":"https://jrwinget.github.io/bidux/reference/validate_bid_stage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate BID stage object — validate_bid_stage","text":"x Object validate","code":""},{"path":"https://jrwinget.github.io/bidux/reference/validate_bid_stage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate BID stage object — validate_bid_stage","text":"TRUE valid, throws error otherwise","code":""},{"path":[]},{"path":"https://jrwinget.github.io/bidux/news/index.html","id":"breaking-changes-0-3-0","dir":"Changelog","previous_headings":"","what":"BREAKING CHANGES","title":"# bidux 0.3.0 (2025-08-29)","text":"BID stage order updated : Interpret → Notice → Anticipate → Structure → Validate. reflects natural workflow maintaining flexibility iterative usage. bid_notice() longer accepts target_audience parameter. Audience information now managed bid_interpret() stage using data_story user_personas parameters. function warn deprecated parameter provided. bid_anticipate() longer accepts interaction_principles parameter. parameter removed favor new include_accessibility parameter (default: TRUE). function warn deprecated parameter provided. Field name changes consistency: previous_question → previous_central_question previous_story_hook → previous_hook user_personas → personas (bid_interpret output) bid_structure() longer accepts layout parameter. Layout now automatically selected based content analysis previous stages using deterministic heuristics. function abort helpful error message deprecated layout parameter provided.","code":""},{"path":"https://jrwinget.github.io/bidux/news/index.html","id":"new-features-0-3-0","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"# bidux 0.3.0 (2025-08-29)","text":"Enhanced bid_validate() experiment/telemetry/empowerment flags. New optional parameters: include_exp_design (default: TRUE), include_telemetry (default: TRUE), include_empower_tools (default: TRUE) context-aware suggestions. Accessibility-focused bias mitigation bid_anticipate(). New include_accessibility parameter adds layout-specific accessibility recommendations bias mitigation strategies. Improved context propagation. previous_problem, previous_theory, previous_audience, previous_personas now properly propagate entire pipeline Validate stage. Automatic layout inference bid_structure(). Uses sophisticated heuristics analyze content previous BID stages (problem, evidence, data story elements) automatically select appropriate layout (breathable, dual_process, grid, card, tabs). Ranked, concept-grouped actionable suggestions. bid_structure() now returns structured UI/UX recommendations organized UX concepts (e.g., Cognitive Load Theory, Progressive Disclosure) specific Shiny/bslib component pointers, implementation rationales, relevance scores (0-1). Telemetry-aware suggestion scoring. Layout selection suggestion ranking now consider telemetry data, automatically avoiding problematic patterns (e.g., avoiding tabs nav_dropoff_tabs detected). Enhanced CLI feedback. Clear messages show auto-selected layout rationale, plus helpful tip using bid_concept(\"<concept>\") learn detected concepts.","code":""},{"path":"https://jrwinget.github.io/bidux/news/index.html","id":"improvements-0-3-0","dir":"Changelog","previous_headings":"","what":"IMPROVEMENTS","title":"# bidux 0.3.0 (2025-08-29)","text":"Field name normalization. Added normalize_previous_stage() helper function handle legacy field names ensure consistent data flow stages. Enhanced helper functions. Updated utility functions time stubbing support (.now()) improved safe column access patterns. Comprehensive test coverage. Added extensive tests heuristic branches, suggestion structure validation, CLI message verification, telemetry integration, error handling deprecated layout parameter.","code":""},{"path":"https://jrwinget.github.io/bidux/news/index.html","id":"bug-fixes-0-3-0","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"# bidux 0.3.0 (2025-08-29)","text":"None.","code":""},{"path":"https://jrwinget.github.io/bidux/news/index.html","id":"migration-guide-0-3-0","dir":"Changelog","previous_headings":"","what":"MIGRATION GUIDE","title":"# bidux 0.3.0 (2025-08-29)","text":"update existing code bidux 0.3.0:","code":"# OLD (0.2.x) notice <- bid_notice(   problem = \"Users confused\",    evidence = \"High error rate\",   target_audience = \"Analysts\" )  # NEW (0.3.0) notice <- bid_notice(   problem = \"Users confused\",    evidence = \"High error rate\" )  interpret <- bid_interpret(   previous_stage = notice,   data_story = list(     audience = \"Analysts\"  # Move audience here   ) )  # OLD (0.2.x) anticipate <- bid_anticipate(   previous_stage = structure_result,   interaction_principles = list(hover = \"Show details on hover\") )  # NEW (0.3.0) anticipate <- bid_anticipate(   previous_stage = structure_result,   include_accessibility = TRUE  # New accessibility focus )  # Field name updates in downstream code: # Access previous_central_question instead of previous_question # Access previous_hook instead of previous_story_hook"},{"path":"https://jrwinget.github.io/bidux/news/index.html","id":"deprecated-and-defunct-0-3-0","dir":"Changelog","previous_headings":"","what":"DEPRECATED AND DEFUNCT","title":"# bidux 0.3.0 (2025-08-29)","text":"target_audience parameter bid_notice() (deprecated, removed 0.4.0) interaction_principles parameter bid_anticipate() (deprecated, removed 0.4.0)","code":""},{"path":"https://jrwinget.github.io/bidux/news/index.html","id":"documentation-fixes-0-3-0","dir":"Changelog","previous_headings":"","what":"DOCUMENTATION FIXES","title":"# bidux 0.3.0 (2025-08-29)","text":"Updated function documentation reflect parameter changes new stage ordering Updated examples use new recommended workflow: Interpret → Notice → Anticipate → Structure → Validate","code":""},{"path":[]},{"path":"https://jrwinget.github.io/bidux/news/index.html","id":"new-features-0-2-0","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"# bidux 0.2.0 (2025-08-05)","text":"Telemetry-driven UX friction detection. New bid_ingest_telemetry() ingests shiny.telemetry data (SQLite JSON), applies configurable thresholds, detects friction patterns (e.g., unused inputs, delayed interactions, error clusters, navigation drop-offs, confusion), generates BID notices reports. Includes robust input validation, format auto-detection, clearer CLI summaries. (#18) Telemetry integration vignette. new vignette shows set shiny.telemetry, run bid_ingest_telemetry(), interpret indicators, customize thresholds within BID workflow. (#18)","code":""},{"path":"https://jrwinget.github.io/bidux/news/index.html","id":"minor-improvements-0-2-0","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"# bidux 0.2.0 (2025-08-05)","text":"Modular printing display rules. print.bid_stage() refactored print_stage_header(), print_stage_content(), print_stage_footer() reusable field printing stage-specific display rules clearer, consistent output. Consistent data loading. Introduced load_external_data(); concept, theory, bias, layout, accessibility loaders now share one code path sensible fallbacks. Suggestion generation & validation utilities. Consolidated helpers: generate_stage_suggestions(), get_default_suggestion_rules(), evaluate_suggestion_condition(); standardized parameter checks validate_character_param(), validate_list_param(), validate_bid_stage_params(). Stronger parsing & normalization. Telemetry JSON handling now supports JSON arrays JSON-lines; column normalization validates standardizes inputs; percentage/label formatting made consistent. Safety & style passes. Safer subsetting (drop = FALSE), safer indexing (seq_len()), tightened conditionals/bracing indentation, aligned function signatures lists, general formatting cleanup readability maintainability.","code":""},{"path":"https://jrwinget.github.io/bidux/news/index.html","id":"bug-fixes-0-2-0","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"# bidux 0.2.0 (2025-08-05)","text":"None.","code":""},{"path":"https://jrwinget.github.io/bidux/news/index.html","id":"deprecated-and-defunct-0-2-0","dir":"Changelog","previous_headings":"","what":"DEPRECATED AND DEFUNCT","title":"# bidux 0.2.0 (2025-08-05)","text":"None.","code":""},{"path":"https://jrwinget.github.io/bidux/news/index.html","id":"documentation-fixes-0-2-0","dir":"Changelog","previous_headings":"","what":"DOCUMENTATION FIXES","title":"# bidux 0.2.0 (2025-08-05)","text":"Docs & guides. Added CONTRIBUTING guidelines Code Conduct; standardized GitHub issue templates clear, consistent reports. (#16) README overhaul. Reorganized overview, features, installation, concise quick start; added telemetry section; improved examples; suppressed noisy messages README generation; added CRAN downloads badge. (#15, #16) Reference updates. Exported documented bid_ingest_telemetry(); refreshed man/ pages package index reflect new modules function locations. (#18)","code":""},{"path":"https://jrwinget.github.io/bidux/news/index.html","id":"refactoring--internals-no-user-facing-api-changes-0-2-0","dir":"Changelog","previous_headings":"","what":"REFACTORING & INTERNALS (no user-facing API changes)","title":"# bidux 0.2.0 (2025-08-05)","text":"File organization. Standardized dash-separated filenames (e.g., bid-classes.R, bid-concepts.R); centralized telemetry ingestion/analysis/notice creation telemetry.R; moved shared helpers utils.R. Namespace & dependencies. Added DBI RSQLite Imports, importFrom(stats, complete.cases); relaxed version constraints cli, dplyr, jsonlite; expanded NAMESPACE explicit imports.","code":""},{"path":"https://jrwinget.github.io/bidux/news/index.html","id":"id_-bidux-010-2025-06-16","dir":"Changelog","previous_headings":"","what":"# bidux 0.1.0 (2025-06-16)","title":"# bidux 0.1.0 (2025-06-16)","text":"CRAN release: 2025-06-13 Initial CRAN submission. Complete implementation Behavior Insight Design (BID) framework 5 sequential stages: Notice, Interpret, Structure, Anticipate, Validate. Added initial concept dictionary 41+ behavioral science principles. Added UI component suggestions major R packages: shiny, bslib, DT, plotly, reactable, htmlwidgets. Added multi-format reporting capabilities (text, HTML, markdown) bid_report(). Added intelligent theory auto-suggestion system bid_notice(). Added comprehensive validation error handling across functions. Added three detailed vignettes: “Getting Started”, “Introduction BID”, “Concepts Reference”.","code":""}]
