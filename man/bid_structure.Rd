% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bid_structure.R
\name{bid_structure}
\alias{bid_structure}
\title{Document Dashboard Structure Stage in BID Framework}
\usage{
bid_structure(previous_stage, layout, concepts = NULL, accessibility = NULL)
}
\arguments{
\item{previous_stage}{A tibble or list output from an earlier BID stage function.}

\item{layout}{A character string indicating the layout type (e.g.,
"dual_process", "grid", "card", "tabs", "breathable").}

\item{concepts}{A character vector of BID concepts applied in this stage.
Concepts can be provided in natural language (e.g., "Principle of Proximity")
or with underscores (e.g., "principle_of_proximity"). The function uses
fuzzy matching to identify the concepts. If NULL, will attempt to detect
relevant concepts from previous stages.}

\item{accessibility}{A list of accessibility considerations (optional).}
}
\value{
A tibble containing the documented information for the "Structure"
stage.
}
\description{
This function documents the structure of the dashboard, including layout and
design elements such as proximity, dual-processing, and default effects.
}
\examples{
interpret <- bid_interpret(
  bid_notice(
    problem = "Users struggle with information overload",
    evidence = "Survey results indicate delays"
  ),
  central_question = "How can we simplify data presentation?",
  data_story = list(
    hook = "Data is too complex",
    context = "Overloaded with charts",
    tension = "Confusing layout",
    resolution = "Introduce clear grouping"
  )
)

# Basic usage with natural language concept names
bid_structure(
  previous_stage = interpret,
  layout = "dual_process",
  concepts = c("Principle of Proximity", "Default Effect")
)

# Let the function detect relevant concepts from previous stages
bid_structure(
  previous_stage = interpret,
  layout = "dual_process"
)

# With accessibility considerations
bid_structure(
  previous_stage = interpret,
  layout = "dual_process",
  concepts = c("Proximity", "Default Effect", "Visual Hierarchy"),
  accessibility = list(
    color_contrast = "Using WCAG AA-compliant color contrasts",
    keyboard_navigation = "All interactive elements are keyboard accessible",
    screen_reader = "Charts include descriptive alt text"
  )
)

}
